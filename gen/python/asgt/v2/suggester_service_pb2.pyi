"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import asgt.type.model_pb2
import asgt.type.prediction_pb2
import asgt.v2.type.data_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class SuggestOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SUGGEST_LIMIT_FIELD_NUMBER: builtins.int
    MIN_CONFIDENCE_FIELD_NUMBER: builtins.int
    suggest_limit: builtins.int
    """Maximum number of suggestions to return per target"""

    min_confidence: asgt.type.prediction_pb2.Confidence.Level.ValueType
    """Not implemented yet."""

    def __init__(self,
        *,
        suggest_limit: builtins.int = ...,
        min_confidence: asgt.type.prediction_pb2.Confidence.Level.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["min_confidence",b"min_confidence","suggest_limit",b"suggest_limit"]) -> None: ...
global___SuggestOptions = SuggestOptions

class SuggestRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATASET_NAME_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    dataset_name: typing.Text
    """Name of the dataset to make prediction against
    text-no-spaces
    """

    @property
    def input(self) -> asgt.v2.type.data_pb2.Data:
        """Input data to use for prediction"""
        pass
    @property
    def options(self) -> global___SuggestOptions: ...
    def __init__(self,
        *,
        dataset_name: typing.Text = ...,
        input: typing.Optional[asgt.v2.type.data_pb2.Data] = ...,
        options: typing.Optional[global___SuggestOptions] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["input",b"input","options",b"options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_name",b"dataset_name","input",b"input","options",b"options"]) -> None: ...
global___SuggestRequest = SuggestRequest

class SuggestResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PREDICTION_FIELD_NUMBER: builtins.int
    MODEL_FIELD_NUMBER: builtins.int
    @property
    def prediction(self) -> asgt.type.prediction_pb2.Prediction: ...
    @property
    def model(self) -> asgt.type.model_pb2.Model: ...
    def __init__(self,
        *,
        prediction: typing.Optional[asgt.type.prediction_pb2.Prediction] = ...,
        model: typing.Optional[asgt.type.model_pb2.Model] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model",b"model","prediction",b"prediction"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model",b"model","prediction",b"prediction"]) -> None: ...
global___SuggestResponse = SuggestResponse

class BatchSuggestRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATASET_NAME_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    dataset_name: typing.Text
    """Name of the dataset to make prediction against
    text-no-spaces
    """

    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[asgt.v2.type.data_pb2.Data]:
        """Input data to use for prediction"""
        pass
    @property
    def options(self) -> global___SuggestOptions: ...
    def __init__(self,
        *,
        dataset_name: typing.Text = ...,
        inputs: typing.Optional[typing.Iterable[asgt.v2.type.data_pb2.Data]] = ...,
        options: typing.Optional[global___SuggestOptions] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["options",b"options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset_name",b"dataset_name","inputs",b"inputs","options",b"options"]) -> None: ...
global___BatchSuggestRequest = BatchSuggestRequest

class BatchSuggestResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PREDICTIONS_FIELD_NUMBER: builtins.int
    MODEL_FIELD_NUMBER: builtins.int
    @property
    def predictions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[asgt.type.prediction_pb2.Prediction]: ...
    @property
    def model(self) -> asgt.type.model_pb2.Model: ...
    def __init__(self,
        *,
        predictions: typing.Optional[typing.Iterable[asgt.type.prediction_pb2.Prediction]] = ...,
        model: typing.Optional[asgt.type.model_pb2.Model] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model",b"model"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model",b"model","predictions",b"predictions"]) -> None: ...
global___BatchSuggestResponse = BatchSuggestResponse
