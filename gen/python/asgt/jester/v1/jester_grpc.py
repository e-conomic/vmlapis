# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: asgt/jester/v1/jester.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import protoc_gen_openapiv2.options.annotations_pb2
import asgt.type.prediction_pb2
import asgt.type.model_pb2
import asgt.type.data_pb2
import asgt.jester.v1.jester_pb2


class JesterBase(abc.ABC):

    @abc.abstractmethod
    async def Suggest(self, stream: 'grpclib.server.Stream[asgt.jester.v1.jester_pb2.SuggestionRequest, asgt.jester.v1.jester_pb2.SuggestionResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/asgt.jester.v1.Jester/Suggest': grpclib.const.Handler(
                self.Suggest,
                grpclib.const.Cardinality.UNARY_UNARY,
                asgt.jester.v1.jester_pb2.SuggestionRequest,
                asgt.jester.v1.jester_pb2.SuggestionResponse,
            ),
        }


class JesterStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Suggest = grpclib.client.UnaryUnaryMethod(
            channel,
            '/asgt.jester.v1.Jester/Suggest',
            asgt.jester.v1.jester_pb2.SuggestionRequest,
            asgt.jester.v1.jester_pb2.SuggestionResponse,
        )
