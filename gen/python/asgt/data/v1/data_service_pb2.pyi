"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import asgt.type.dataset_pb2
import asgt.type.model_pb2
import asgt.type.retention_policy_pb2
import asgt.type.sample_pb2
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class CalculateMetricsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    START_TIME_FIELD_NUMBER: builtins.int
    END_TIME_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def start_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def end_time(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        start_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        end_time: typing.Optional[google.protobuf.timestamp_pb2.Timestamp] = ...,
        tags: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end_time",b"end_time","start_time",b"start_time","tags",b"tags"]) -> None: ...
global___CalculateMetricsRequest = CalculateMetricsRequest

class CalculateMetricsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class MetricRow(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        TARGET_FIELD_NUMBER: builtins.int
        CONFIDENCE_FIELD_NUMBER: builtins.int
        CORRECT_FIELD_NUMBER: builtins.int
        INCORRECT_FIELD_NUMBER: builtins.int
        target: typing.Text
        @property
        def confidence(self) -> google.protobuf.wrappers_pb2.FloatValue: ...
        correct: builtins.int
        incorrect: builtins.int
        def __init__(self,
            *,
            target: typing.Text = ...,
            confidence: typing.Optional[google.protobuf.wrappers_pb2.FloatValue] = ...,
            correct: builtins.int = ...,
            incorrect: builtins.int = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["confidence",b"confidence"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["confidence",b"confidence","correct",b"correct","incorrect",b"incorrect","target",b"target"]) -> None: ...

    METRICS_FIELD_NUMBER: builtins.int
    @property
    def metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CalculateMetricsResponse.MetricRow]: ...
    def __init__(self,
        *,
        metrics: typing.Optional[typing.Iterable[global___CalculateMetricsResponse.MetricRow]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["metrics",b"metrics"]) -> None: ...
global___CalculateMetricsResponse = CalculateMetricsResponse

class CreateRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    TARGETS_FIELD_NUMBER: builtins.int
    SAMPLES_FIELD_NUMBER: builtins.int
    RETENTION_POLICY_FIELD_NUMBER: builtins.int
    name: typing.Text
    type: typing.Text
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def targets(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def samples(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[asgt.type.sample_pb2.Sample]: ...
    @property
    def retention_policy(self) -> asgt.type.retention_policy_pb2.RetentionPolicy: ...
    def __init__(self,
        *,
        name: typing.Text = ...,
        type: typing.Text = ...,
        tags: typing.Optional[typing.Iterable[typing.Text]] = ...,
        targets: typing.Optional[typing.Iterable[typing.Text]] = ...,
        samples: typing.Optional[typing.Iterable[asgt.type.sample_pb2.Sample]] = ...,
        retention_policy: typing.Optional[asgt.type.retention_policy_pb2.RetentionPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["retention_policy",b"retention_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","retention_policy",b"retention_policy","samples",b"samples","tags",b"tags","targets",b"targets","type",b"type"]) -> None: ...
global___CreateRequest = CreateRequest

class AppendDataRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    SAMPLES_FIELD_NUMBER: builtins.int
    name: typing.Text
    type: typing.Text
    @property
    def samples(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[asgt.type.sample_pb2.Sample]: ...
    def __init__(self,
        *,
        name: typing.Text = ...,
        type: typing.Text = ...,
        samples: typing.Optional[typing.Iterable[asgt.type.sample_pb2.Sample]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","samples",b"samples","type",b"type"]) -> None: ...
global___AppendDataRequest = AppendDataRequest

class DeleteRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TYPE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    type: typing.Text
    name: typing.Text
    tag: typing.Text
    def __init__(self,
        *,
        type: typing.Text = ...,
        name: typing.Text = ...,
        tag: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["match",b"match","name",b"name","tag",b"tag"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["match",b"match","name",b"name","tag",b"tag","type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["match",b"match"]) -> typing.Optional[typing_extensions.Literal["name","tag"]]: ...
global___DeleteRequest = DeleteRequest

class GetInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    name: typing.Text
    type: typing.Text
    def __init__(self,
        *,
        name: typing.Text = ...,
        type: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","type",b"type"]) -> None: ...
global___GetInfoRequest = GetInfoRequest

class UpdateDatasetRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    RETENTION_POLICY_FIELD_NUMBER: builtins.int
    name: typing.Text
    type: typing.Text
    @property
    def retention_policy(self) -> asgt.type.retention_policy_pb2.RetentionPolicy: ...
    def __init__(self,
        *,
        name: typing.Text = ...,
        type: typing.Text = ...,
        retention_policy: typing.Optional[asgt.type.retention_policy_pb2.RetentionPolicy] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["retention_policy",b"retention_policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","retention_policy",b"retention_policy","type",b"type"]) -> None: ...
global___UpdateDatasetRequest = UpdateDatasetRequest

class GetInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATASET_FIELD_NUMBER: builtins.int
    MODEL_FIELD_NUMBER: builtins.int
    @property
    def dataset(self) -> asgt.type.dataset_pb2.Dataset: ...
    @property
    def model(self) -> asgt.type.model_pb2.Model:
        """The most recently trained model; empty if no model has been trained"""
        pass
    def __init__(self,
        *,
        dataset: typing.Optional[asgt.type.dataset_pb2.Dataset] = ...,
        model: typing.Optional[asgt.type.model_pb2.Model] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataset",b"dataset","model",b"model"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataset",b"dataset","model",b"model"]) -> None: ...
global___GetInfoResponse = GetInfoResponse

class RegisterQueryStatsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DATASET_FIELD_NUMBER: builtins.int
    MODEL_TYPE_FIELD_NUMBER: builtins.int
    BATCH_SIZE_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    dataset: typing.Text
    model_type: typing.Text
    batch_size: builtins.int
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        dataset: typing.Text = ...,
        model_type: typing.Text = ...,
        batch_size: builtins.int = ...,
        tags: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch_size",b"batch_size","dataset",b"dataset","model_type",b"model_type","tags",b"tags"]) -> None: ...
global___RegisterQueryStatsRequest = RegisterQueryStatsRequest
