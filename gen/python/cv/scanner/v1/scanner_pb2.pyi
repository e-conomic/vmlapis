"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import ssn.annotator.v1.annotator_pb2
import ssn.type.candidate_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ScanCVRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DOCUMENT_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    @property
    def document(self) -> ssn.annotator.v1.annotator_pb2.Document: ...
    @property
    def features(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Feature]: ...
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        document: typing.Optional[ssn.annotator.v1.annotator_pb2.Document] = ...,
        features: typing.Optional[typing.Iterable[global___Feature]] = ...,
        tags: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["document",b"document"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["document",b"document","features",b"features","tags",b"tags"]) -> None: ...
global___ScanCVRequest = ScanCVRequest

class ScanCVResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FIRST_NAME_FIELD_NUMBER: builtins.int
    LAST_NAME_FIELD_NUMBER: builtins.int
    DATE_OF_BIRTH_FIELD_NUMBER: builtins.int
    PHONE_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    COUNTRY_FIELD_NUMBER: builtins.int
    NATIONALITY_FIELD_NUMBER: builtins.int
    POSTAL_CODE_FIELD_NUMBER: builtins.int
    POSTAL_AREA_FIELD_NUMBER: builtins.int
    MUNICIPALITY_FIELD_NUMBER: builtins.int
    COUNTY_FIELD_NUMBER: builtins.int
    ADDRESS_FIELD_NUMBER: builtins.int
    EMPLOYER_NAME_FIELD_NUMBER: builtins.int
    POSITION_TITLE_FIELD_NUMBER: builtins.int
    DATE_FIELD_NUMBER: builtins.int
    INSTITUTION_NAME_FIELD_NUMBER: builtins.int
    INSTITUTION_TYPE_FIELD_NUMBER: builtins.int
    AREA_OF_EDUCATION_FIELD_NUMBER: builtins.int
    DEGREE_FIELD_NUMBER: builtins.int
    AVERAGE_GRADE_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    LEVEL_FIELD_NUMBER: builtins.int
    @property
    def first_name(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def last_name(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def date_of_birth(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def phone(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def email(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def country(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def nationality(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def postal_code(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def postal_area(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def municipality(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def county(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def address(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def employer_name(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def position_title(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def date(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def institution_name(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def institution_type(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def area_of_education(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def degree(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def average_grade(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def name(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    @property
    def level(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]: ...
    def __init__(self,
        *,
        first_name: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        last_name: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        date_of_birth: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        phone: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        email: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        country: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        nationality: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        postal_code: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        postal_area: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        municipality: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        county: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        address: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        employer_name: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        position_title: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        date: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        institution_name: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        institution_type: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        area_of_education: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        degree: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        average_grade: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        name: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        level: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["address",b"address","area_of_education",b"area_of_education","average_grade",b"average_grade","country",b"country","county",b"county","date",b"date","date_of_birth",b"date_of_birth","degree",b"degree","email",b"email","employer_name",b"employer_name","first_name",b"first_name","institution_name",b"institution_name","institution_type",b"institution_type","last_name",b"last_name","level",b"level","municipality",b"municipality","name",b"name","nationality",b"nationality","phone",b"phone","position_title",b"position_title","postal_area",b"postal_area","postal_code",b"postal_code"]) -> None: ...
global___ScanCVResponse = ScanCVResponse

class Feature(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Feature._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        FIRST_NAME: Feature._Type.ValueType  # 0
        LAST_NAME: Feature._Type.ValueType  # 1
        DATE_OF_BIRTH: Feature._Type.ValueType  # 2
        PHONE: Feature._Type.ValueType  # 3
        EMAIL: Feature._Type.ValueType  # 4
        COUNTRY: Feature._Type.ValueType  # 5
        NATIONALITY: Feature._Type.ValueType  # 6
        POSTAL_CODE: Feature._Type.ValueType  # 7
        POSTAL_AREA: Feature._Type.ValueType  # 8
        MUNICIPALITY: Feature._Type.ValueType  # 9
        COUNTY: Feature._Type.ValueType  # 10
        ADDRESS: Feature._Type.ValueType  # 11
        EMPLOYER_NAME: Feature._Type.ValueType  # 12
        POSITION_TITLE: Feature._Type.ValueType  # 13
        DATE: Feature._Type.ValueType  # 14
        INSTITUTE_NAME: Feature._Type.ValueType  # 15
        INSTITUTE_TYPE: Feature._Type.ValueType  # 16
        AREA_OF_EDUCATION: Feature._Type.ValueType  # 17
        DEGREE: Feature._Type.ValueType  # 18
        AVERAGE_GRADE: Feature._Type.ValueType  # 19
        NAME: Feature._Type.ValueType  # 20
        LEVEL: Feature._Type.ValueType  # 21
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    FIRST_NAME: Feature.Type.ValueType  # 0
    LAST_NAME: Feature.Type.ValueType  # 1
    DATE_OF_BIRTH: Feature.Type.ValueType  # 2
    PHONE: Feature.Type.ValueType  # 3
    EMAIL: Feature.Type.ValueType  # 4
    COUNTRY: Feature.Type.ValueType  # 5
    NATIONALITY: Feature.Type.ValueType  # 6
    POSTAL_CODE: Feature.Type.ValueType  # 7
    POSTAL_AREA: Feature.Type.ValueType  # 8
    MUNICIPALITY: Feature.Type.ValueType  # 9
    COUNTY: Feature.Type.ValueType  # 10
    ADDRESS: Feature.Type.ValueType  # 11
    EMPLOYER_NAME: Feature.Type.ValueType  # 12
    POSITION_TITLE: Feature.Type.ValueType  # 13
    DATE: Feature.Type.ValueType  # 14
    INSTITUTE_NAME: Feature.Type.ValueType  # 15
    INSTITUTE_TYPE: Feature.Type.ValueType  # 16
    AREA_OF_EDUCATION: Feature.Type.ValueType  # 17
    DEGREE: Feature.Type.ValueType  # 18
    AVERAGE_GRADE: Feature.Type.ValueType  # 19
    NAME: Feature.Type.ValueType  # 20
    LEVEL: Feature.Type.ValueType  # 21

    TYPE_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    type: global___Feature.Type.ValueType
    """The feature type."""

    max_results: builtins.int
    def __init__(self,
        *,
        type: global___Feature.Type.ValueType = ...,
        max_results: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["max_results",b"max_results","type",b"type"]) -> None: ...
global___Feature = Feature
