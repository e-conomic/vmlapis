"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import ssn.type.candidate_pb2
import ssn.type.text_annotation_pb2
import ssn.type.tier_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Feature(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Feature._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        DEFAULT: Feature._Type.ValueType  # 0
        """Run default feature set"""

        TEXT_ANNOTATION: Feature._Type.ValueType  # 1
        """Return text annotation"""

        ORDER_DATE: Feature._Type.ValueType  # 2
        """Run order date detection"""

        PAYMENT_DUE_DATE: Feature._Type.ValueType  # 3
        """Run due date detection"""

        CURRENCY: Feature._Type.ValueType  # 4
        """Run currency detection"""

        TOTAL_VAT: Feature._Type.ValueType  # 5
        """Run total vat detection"""

        TOTAL_INCL_VAT: Feature._Type.ValueType  # 6
        """Run total incl vat detection"""

        TOTAL_EXCL_VAT: Feature._Type.ValueType  # 7
        """Run total excl vat detection"""

        SUPPLIER_CORPORATE_ID: Feature._Type.ValueType  # 8
        """[DEPRECATED] Run supplier corporate id detection.
        Use SUPPLIER_ORGANISATION_NUMBER or SUPPLIER_VAT_NUMBER instead.
        """

        SUPPLIER_COUNTRY_CODE: Feature._Type.ValueType  # 9
        """Run country code detection"""

        DOCUMENT_TYPE: Feature._Type.ValueType  # 10
        """Run document type detection"""

        PAYMENT_METHOD: Feature._Type.ValueType  # 11
        """Run pyment method detection"""

        CREDIT_CARD_LAST_FOUR: Feature._Type.ValueType  # 12
        """Run credit card number detection"""

        INVOICE_NUMBER: Feature._Type.ValueType  # 13
        """[DEPRECATED] Run invoice number detection"""

        OCR_LINE_DK_TYPE: Feature._Type.ValueType  # 14
        """Run danish ocr line detection, for the type"""

        OCR_LINE_DK_PAYMENT_ID: Feature._Type.ValueType  # 15
        """Run danish ocr line detection, for the payment id"""

        OCR_LINE_DK_CREDITOR_ID: Feature._Type.ValueType  # 16
        """Run danish ocr line detection, for the creditor id"""

        OCR_LINE_SE_PAYMENT_ID: Feature._Type.ValueType  # 17
        """Run swedish ocr line detection for the payment id"""

        OCR_LINE_SE_BANKGIRO_CREDITOR_ID: Feature._Type.ValueType  # 18
        """Run swedish ocr line detection for the bankgiro creditor id"""

        OCR_LINE_SE_PLUSGIRO_CREDITOR_ID: Feature._Type.ValueType  # 19
        """Run swedish ocr line detection for the plusgiro creditor id"""

        OCR_LINE_NO_PAYMENT_ID: Feature._Type.ValueType  # 20
        """Run norwegian ocr line detection or the payment id"""

        OCR_LINE_FI_PAYMENT_ID: Feature._Type.ValueType  # 21
        """Run finish ocr line detection or the payment id"""

        OCR_LINE_NL_PAYMENT_ID: Feature._Type.ValueType  # 22
        """Run dutch ocr line detection for the payment id"""

        TEXT: Feature._Type.ValueType  # 23
        """Return document text"""

        IBAN: Feature._Type.ValueType  # 24
        """Run IBAN detection"""

        LINES: Feature._Type.ValueType  # 25
        """Run LINES detection"""

        PREVIEW: Feature._Type.ValueType  # 26
        """Run first page of PDF to PNG conversion"""

        BANK_ACCOUNT_NUMBER: Feature._Type.ValueType  # 27
        """Run bank account number detection"""

        BANK_REGISTRATION_NUMBER: Feature._Type.ValueType  # 28
        """Run bank registration number detection"""

        BIC: Feature._Type.ValueType  # 29
        """Run business identifier code detection"""

        DOCUMENT_NUMBER: Feature._Type.ValueType  # 30
        """Run document number detection"""

        DOCUMENT_DATE: Feature._Type.ValueType  # 31
        """Run document date detection"""

        ORDER_NUMBER: Feature._Type.ValueType  # 32
        """Run order number detection"""

        SUPPLIER_NAME: Feature._Type.ValueType  # 33
        """Run spplier name detection"""

        SUPPLIER_VAT_NUMBER: Feature._Type.ValueType  # 34
        """[EXPERIMENTAL] Run supplier VAT detection"""

        SUPPLIER_ORGANISATION_NUMBER: Feature._Type.ValueType  # 35
        """[EXPERIMENTAL] Run supplier organisation number detection"""

        SUPPLIER_ADDRESS: Feature._Type.ValueType  # 36
        """[EXPERIMENTAL] Run supplier address detection"""

        CUSTOMER_NUMBER: Feature._Type.ValueType  # 37
        """[EXPERIMENTAL] Run customer identifier detection"""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    DEFAULT: Feature.Type.ValueType  # 0
    """Run default feature set"""

    TEXT_ANNOTATION: Feature.Type.ValueType  # 1
    """Return text annotation"""

    ORDER_DATE: Feature.Type.ValueType  # 2
    """Run order date detection"""

    PAYMENT_DUE_DATE: Feature.Type.ValueType  # 3
    """Run due date detection"""

    CURRENCY: Feature.Type.ValueType  # 4
    """Run currency detection"""

    TOTAL_VAT: Feature.Type.ValueType  # 5
    """Run total vat detection"""

    TOTAL_INCL_VAT: Feature.Type.ValueType  # 6
    """Run total incl vat detection"""

    TOTAL_EXCL_VAT: Feature.Type.ValueType  # 7
    """Run total excl vat detection"""

    SUPPLIER_CORPORATE_ID: Feature.Type.ValueType  # 8
    """[DEPRECATED] Run supplier corporate id detection.
    Use SUPPLIER_ORGANISATION_NUMBER or SUPPLIER_VAT_NUMBER instead.
    """

    SUPPLIER_COUNTRY_CODE: Feature.Type.ValueType  # 9
    """Run country code detection"""

    DOCUMENT_TYPE: Feature.Type.ValueType  # 10
    """Run document type detection"""

    PAYMENT_METHOD: Feature.Type.ValueType  # 11
    """Run pyment method detection"""

    CREDIT_CARD_LAST_FOUR: Feature.Type.ValueType  # 12
    """Run credit card number detection"""

    INVOICE_NUMBER: Feature.Type.ValueType  # 13
    """[DEPRECATED] Run invoice number detection"""

    OCR_LINE_DK_TYPE: Feature.Type.ValueType  # 14
    """Run danish ocr line detection, for the type"""

    OCR_LINE_DK_PAYMENT_ID: Feature.Type.ValueType  # 15
    """Run danish ocr line detection, for the payment id"""

    OCR_LINE_DK_CREDITOR_ID: Feature.Type.ValueType  # 16
    """Run danish ocr line detection, for the creditor id"""

    OCR_LINE_SE_PAYMENT_ID: Feature.Type.ValueType  # 17
    """Run swedish ocr line detection for the payment id"""

    OCR_LINE_SE_BANKGIRO_CREDITOR_ID: Feature.Type.ValueType  # 18
    """Run swedish ocr line detection for the bankgiro creditor id"""

    OCR_LINE_SE_PLUSGIRO_CREDITOR_ID: Feature.Type.ValueType  # 19
    """Run swedish ocr line detection for the plusgiro creditor id"""

    OCR_LINE_NO_PAYMENT_ID: Feature.Type.ValueType  # 20
    """Run norwegian ocr line detection or the payment id"""

    OCR_LINE_FI_PAYMENT_ID: Feature.Type.ValueType  # 21
    """Run finish ocr line detection or the payment id"""

    OCR_LINE_NL_PAYMENT_ID: Feature.Type.ValueType  # 22
    """Run dutch ocr line detection for the payment id"""

    TEXT: Feature.Type.ValueType  # 23
    """Return document text"""

    IBAN: Feature.Type.ValueType  # 24
    """Run IBAN detection"""

    LINES: Feature.Type.ValueType  # 25
    """Run LINES detection"""

    PREVIEW: Feature.Type.ValueType  # 26
    """Run first page of PDF to PNG conversion"""

    BANK_ACCOUNT_NUMBER: Feature.Type.ValueType  # 27
    """Run bank account number detection"""

    BANK_REGISTRATION_NUMBER: Feature.Type.ValueType  # 28
    """Run bank registration number detection"""

    BIC: Feature.Type.ValueType  # 29
    """Run business identifier code detection"""

    DOCUMENT_NUMBER: Feature.Type.ValueType  # 30
    """Run document number detection"""

    DOCUMENT_DATE: Feature.Type.ValueType  # 31
    """Run document date detection"""

    ORDER_NUMBER: Feature.Type.ValueType  # 32
    """Run order number detection"""

    SUPPLIER_NAME: Feature.Type.ValueType  # 33
    """Run spplier name detection"""

    SUPPLIER_VAT_NUMBER: Feature.Type.ValueType  # 34
    """[EXPERIMENTAL] Run supplier VAT detection"""

    SUPPLIER_ORGANISATION_NUMBER: Feature.Type.ValueType  # 35
    """[EXPERIMENTAL] Run supplier organisation number detection"""

    SUPPLIER_ADDRESS: Feature.Type.ValueType  # 36
    """[EXPERIMENTAL] Run supplier address detection"""

    CUSTOMER_NUMBER: Feature.Type.ValueType  # 37
    """[EXPERIMENTAL] Run customer identifier detection"""


    TYPE_FIELD_NUMBER: builtins.int
    MAX_RESULTS_FIELD_NUMBER: builtins.int
    MIN_CONFIDENCE_FIELD_NUMBER: builtins.int
    type: global___Feature.Type.ValueType
    """The feature type."""

    max_results: builtins.int
    """Maximum number of results of this type. Does not apply to
    `TEXT_ANNOTATION` or `DOCUMENT_TYPE`.
    """

    min_confidence: ssn.type.candidate_pb2.Confidence.Level.ValueType
    """The minimum confidence for predictions that the caller wants returned"""

    def __init__(self,
        *,
        type: global___Feature.Type.ValueType = ...,
        max_results: builtins.int = ...,
        min_confidence: ssn.type.candidate_pb2.Confidence.Level.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["max_results",b"max_results","min_confidence",b"min_confidence","type",b"type"]) -> None: ...
global___Feature = Feature

class DocumentAnnotatorRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DOCUMENT_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    TIER_FIELD_NUMBER: builtins.int
    SEGMENTS_FIELD_NUMBER: builtins.int
    @property
    def document(self) -> global___Document: ...
    @property
    def features(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Feature]: ...
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    tier: ssn.type.tier_pb2.Tier.ValueType
    @property
    def segments(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        document: typing.Optional[global___Document] = ...,
        features: typing.Optional[typing.Iterable[global___Feature]] = ...,
        tags: typing.Optional[typing.Iterable[typing.Text]] = ...,
        tier: ssn.type.tier_pb2.Tier.ValueType = ...,
        segments: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["document",b"document"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["document",b"document","features",b"features","segments",b"segments","tags",b"tags","tier",b"tier"]) -> None: ...
global___DocumentAnnotatorRequest = DocumentAnnotatorRequest

class DocumentAnnotatorResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ORDER_DATE_FIELD_NUMBER: builtins.int
    PAYMENT_DUE_DATE_FIELD_NUMBER: builtins.int
    CURRENCY_FIELD_NUMBER: builtins.int
    TOTAL_VAT_FIELD_NUMBER: builtins.int
    TOTAL_INCL_VAT_FIELD_NUMBER: builtins.int
    TOTAL_EXCL_VAT_FIELD_NUMBER: builtins.int
    SUPPLIER_CORPORATE_ID_FIELD_NUMBER: builtins.int
    SUPPLIER_COUNTRY_CODE_FIELD_NUMBER: builtins.int
    DOCUMENT_TYPE_FIELD_NUMBER: builtins.int
    PAYMENT_METHOD_FIELD_NUMBER: builtins.int
    CREDIT_CARD_LAST_FOUR_FIELD_NUMBER: builtins.int
    INVOICE_NUMBER_FIELD_NUMBER: builtins.int
    TEXT_ANNOTATION_FIELD_NUMBER: builtins.int
    OCR_LINE_DK_TYPE_FIELD_NUMBER: builtins.int
    OCR_LINE_DK_PAYMENT_ID_FIELD_NUMBER: builtins.int
    OCR_LINE_DK_CREDITOR_ID_FIELD_NUMBER: builtins.int
    OCR_LINE_SE_PAYMENT_ID_FIELD_NUMBER: builtins.int
    OCR_LINE_SE_BANKGIRO_CREDITOR_ID_FIELD_NUMBER: builtins.int
    OCR_LINE_SE_PLUSGIRO_CREDITOR_ID_FIELD_NUMBER: builtins.int
    OCR_LINE_NO_PAYMENT_ID_FIELD_NUMBER: builtins.int
    OCR_LINE_FI_PAYMENT_ID_FIELD_NUMBER: builtins.int
    OCR_LINE_NL_PAYMENT_ID_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    FEEDBACK_ID_FIELD_NUMBER: builtins.int
    IBAN_FIELD_NUMBER: builtins.int
    LINES_FIELD_NUMBER: builtins.int
    PREVIEW_FIELD_NUMBER: builtins.int
    BANK_ACCOUNT_NUMBER_FIELD_NUMBER: builtins.int
    BANK_REGISTRATION_NUMBER_FIELD_NUMBER: builtins.int
    BIC_FIELD_NUMBER: builtins.int
    DOCUMENT_NUMBER_FIELD_NUMBER: builtins.int
    DOCUMENT_DATE_FIELD_NUMBER: builtins.int
    ORDER_NUMBER_FIELD_NUMBER: builtins.int
    SUPPLIER_NAME_FIELD_NUMBER: builtins.int
    SUPPLIER_VAT_NUMBER_FIELD_NUMBER: builtins.int
    SUPPLIER_ORGANISATION_NUMBER_FIELD_NUMBER: builtins.int
    SUPPLIER_ADDRESS_FIELD_NUMBER: builtins.int
    CUSTOMER_NUMBER_FIELD_NUMBER: builtins.int
    @property
    def order_date(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """orderDate
        ISO 8601 date string, ie. a string of the format "YYYY-MM-DD"
        Example: "2019-12-31"
        """
        pass
    @property
    def payment_due_date(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """paymentDueDate
        ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
        Example: "2019-12-31"
        """
        pass
    @property
    def currency(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """currency
        ISO 4217 string, ie. a 3-letter capitalized string
        Example: "NOK"
        """
        pass
    @property
    def total_vat(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """totalVat
        A string that parses as a two-decimal number
        Example: "10.0" or "11.11"
        """
        pass
    @property
    def total_incl_vat(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """totalInclVat
        A string that parses as a two-decimal number
        Example: "10.0" or "11.11"
        """
        pass
    @property
    def total_excl_vat(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """totalExclVat
        A string that parses as a two-decimal number
        Example: "10.0" or "11.11"
        """
        pass
    @property
    def supplier_corporate_id(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """[DEPRECATED]
        Use SUPPLIER_ORGANISATION_NUMBER or SUPPLIER_VAT_NUMBER instead.
        supplierCorporateId
        The company VAT number
        Example: "123456789B01" (for Dutch companies)
        or "12345678" (for Norwegian companies)
        Note: The field is repeated because multiple VAT numbers might exist.
        If you have the VAT number of you customer, you can use this information
        to find out which VAT number belongs to the supplier of the invoice.
        """
        pass
    @property
    def supplier_country_code(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """supplierCountryCode
        ISO 3166-1 alpha-2 string, ei. a two-letter capitalized string
        Example: "NO"
        """
        pass
    @property
    def document_type(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """documentType
        Either "Receipt" or "Invoice"
        """
        pass
    @property
    def payment_method(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """paymentMethod
        Either "Cash" or "CreditCard"
        """
        pass
    @property
    def credit_card_last_four(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """creditCardNumber
        Four digits
        Example: "0012"
        """
        pass
    @property
    def invoice_number(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """[DEPRECATED]
        use document number instead
        invoiceNumber
        The supplier defined identifier af the invoice
        Example: "12345-A99"
        """
        pass
    @property
    def text_annotation(self) -> ssn.type.text_annotation_pb2.TextAnnotation:
        """Return text annotation"""
        pass
    @property
    def ocr_line_dk_type(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """example: "71" """
        pass
    @property
    def ocr_line_dk_payment_id(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """example: "000002879094031" """
        pass
    @property
    def ocr_line_dk_creditor_id(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """example: "86570807" """
        pass
    @property
    def ocr_line_se_payment_id(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """example: "050765098" """
        pass
    @property
    def ocr_line_se_bankgiro_creditor_id(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """example: "2654507" """
        pass
    @property
    def ocr_line_se_plusgiro_creditor_id(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """example: "5000872" """
        pass
    @property
    def ocr_line_no_payment_id(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """example: "12345678903" """
        pass
    @property
    def ocr_line_fi_payment_id(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """example: "0817937867870002" """
        pass
    @property
    def ocr_line_nl_payment_id(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """example: "00000159220010146012" """
        pass
    text: typing.Text
    """Return a string containing the text from the document"""

    feedback_id: typing.Text
    """Feedback ID is used to correct made predictions through the
    Feedback API.
    """

    @property
    def iban(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """The first two letters are a country code. The next two digits are
        check digits for the ISO 7064 Mod 97, 10 checksum
        example: "DK50 0040 0440 1162 43", "NO8330001234567"
        """
        pass
    @property
    def lines(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.LineCandidate]:
        """Invoice lines represented in a form of text, amount and page reference
        to state on which page the line was found
        """
        pass
    preview: typing.Text
    """Base64 encoded PNG image  of the first page of PDF document sent in request"""

    @property
    def bank_account_number(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """Country specific bank account number"""
        pass
    @property
    def bank_registration_number(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """Country specific bank registration number"""
        pass
    @property
    def bic(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """Returns business identifier code"""
        pass
    @property
    def document_number(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """Represents identifier of the document"""
        pass
    @property
    def document_date(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """Returns document date"""
        pass
    @property
    def order_number(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """Represents the identifier that supplier assigned to the order"""
        pass
    @property
    def supplier_name(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """Returns supplier name"""
        pass
    @property
    def supplier_vat_number(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """[EXPERIMENTAL]
        Returns supplier VAT number
        """
        pass
    @property
    def supplier_organisation_number(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """[EXPERIMENTAL]
        Returns the business ID or organisation number of the supplier
        """
        pass
    @property
    def supplier_address(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """[EXPERIMENTAL]
        Returns supplier address
        """
        pass
    @property
    def customer_number(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ssn.type.candidate_pb2.Candidate]:
        """[EXPERIMENTAL]
        Returns customer identifier/number
        """
        pass
    def __init__(self,
        *,
        order_date: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        payment_due_date: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        currency: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        total_vat: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        total_incl_vat: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        total_excl_vat: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        supplier_corporate_id: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        supplier_country_code: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        document_type: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        payment_method: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        credit_card_last_four: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        invoice_number: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        text_annotation: typing.Optional[ssn.type.text_annotation_pb2.TextAnnotation] = ...,
        ocr_line_dk_type: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        ocr_line_dk_payment_id: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        ocr_line_dk_creditor_id: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        ocr_line_se_payment_id: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        ocr_line_se_bankgiro_creditor_id: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        ocr_line_se_plusgiro_creditor_id: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        ocr_line_no_payment_id: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        ocr_line_fi_payment_id: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        ocr_line_nl_payment_id: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        text: typing.Text = ...,
        feedback_id: typing.Text = ...,
        iban: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        lines: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.LineCandidate]] = ...,
        preview: typing.Text = ...,
        bank_account_number: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        bank_registration_number: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        bic: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        document_number: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        document_date: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        order_number: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        supplier_name: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        supplier_vat_number: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        supplier_organisation_number: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        supplier_address: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        customer_number: typing.Optional[typing.Iterable[ssn.type.candidate_pb2.Candidate]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["text_annotation",b"text_annotation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bank_account_number",b"bank_account_number","bank_registration_number",b"bank_registration_number","bic",b"bic","credit_card_last_four",b"credit_card_last_four","currency",b"currency","customer_number",b"customer_number","document_date",b"document_date","document_number",b"document_number","document_type",b"document_type","feedback_id",b"feedback_id","iban",b"iban","invoice_number",b"invoice_number","lines",b"lines","ocr_line_dk_creditor_id",b"ocr_line_dk_creditor_id","ocr_line_dk_payment_id",b"ocr_line_dk_payment_id","ocr_line_dk_type",b"ocr_line_dk_type","ocr_line_fi_payment_id",b"ocr_line_fi_payment_id","ocr_line_nl_payment_id",b"ocr_line_nl_payment_id","ocr_line_no_payment_id",b"ocr_line_no_payment_id","ocr_line_se_bankgiro_creditor_id",b"ocr_line_se_bankgiro_creditor_id","ocr_line_se_payment_id",b"ocr_line_se_payment_id","ocr_line_se_plusgiro_creditor_id",b"ocr_line_se_plusgiro_creditor_id","order_date",b"order_date","order_number",b"order_number","payment_due_date",b"payment_due_date","payment_method",b"payment_method","preview",b"preview","supplier_address",b"supplier_address","supplier_corporate_id",b"supplier_corporate_id","supplier_country_code",b"supplier_country_code","supplier_name",b"supplier_name","supplier_organisation_number",b"supplier_organisation_number","supplier_vat_number",b"supplier_vat_number","text",b"text","text_annotation",b"text_annotation","total_excl_vat",b"total_excl_vat","total_incl_vat",b"total_incl_vat","total_vat",b"total_vat"]) -> None: ...
global___DocumentAnnotatorResponse = DocumentAnnotatorResponse

class Document(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONTENT_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    content: builtins.bytes
    """Document content, represented as a stream of bytes.
    Note: As with all `bytes` fields, protobuffers use a pure binary
    representation, whereas JSON representations use base64.
    """

    @property
    def source(self) -> global___DocumentSource:
        """Google Cloud Storage image location, or publicly-accessible image
        URL. If both `content` and `source` are provided for a document, `content`
        takes precedence and is used to perform the scan request.
        """
        pass
    def __init__(self,
        *,
        content: builtins.bytes = ...,
        source: typing.Optional[global___DocumentSource] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["source",b"source"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["content",b"content","source",b"source"]) -> None: ...
global___Document = Document

class DocumentSource(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HTTP_URI_FIELD_NUMBER: builtins.int
    http_uri: typing.Text
    """The URI of the source document. Can be either:

    1. A publicly-accessible image HTTP/HTTPS URL. When fetching images from
       HTTP/HTTPS URLs, We cannot guarantee that the request will be
       completed. Your request may fail if the specified host denies the
       request (e.g. due to request throttling or DOS prevention).
    """

    def __init__(self,
        *,
        http_uri: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["http_uri",b"http_uri"]) -> None: ...
global___DocumentSource = DocumentSource
