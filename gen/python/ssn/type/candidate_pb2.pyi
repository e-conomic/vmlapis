"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import ssn.type.geometry_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Confidence(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Level:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LevelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Confidence._Level.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: Confidence._Level.ValueType  # 0
        VERY_LOW: Confidence._Level.ValueType  # 1
        LOW: Confidence._Level.ValueType  # 2
        MID: Confidence._Level.ValueType  # 3
        HIGH: Confidence._Level.ValueType  # 4
        VERY_HIGH: Confidence._Level.ValueType  # 5
    class Level(_Level, metaclass=_LevelEnumTypeWrapper):
        pass

    UNKNOWN: Confidence.Level.ValueType  # 0
    VERY_LOW: Confidence.Level.ValueType  # 1
    LOW: Confidence.Level.ValueType  # 2
    MID: Confidence.Level.ValueType  # 3
    HIGH: Confidence.Level.ValueType  # 4
    VERY_HIGH: Confidence.Level.ValueType  # 5

    LEVEL_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    level: global___Confidence.Level.ValueType
    """A bucketized representation of confidence, which is intended to give clients
    highly stable results across model upgrades.
    """

    @property
    def value(self) -> google.protobuf.wrappers_pb2.FloatValue:
        """The confidence value"""
        pass
    def __init__(self,
        *,
        level: global___Confidence.Level.ValueType = ...,
        value: typing.Optional[google.protobuf.wrappers_pb2.FloatValue] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["level",b"level","value",b"value"]) -> None: ...
global___Confidence = Confidence

class Candidate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Type:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Candidate._Type.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: Candidate._Type.ValueType  # 0
        FIELD: Candidate._Type.ValueType  # 1
        DOCUMENT: Candidate._Type.ValueType  # 2
    class Type(_Type, metaclass=_TypeEnumTypeWrapper):
        pass

    UNKNOWN: Candidate.Type.ValueType  # 0
    FIELD: Candidate.Type.ValueType  # 1
    DOCUMENT: Candidate.Type.ValueType  # 2

    VALUE_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    CONFIDENCE_FIELD_NUMBER: builtins.int
    BOUNDING_BOX_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    PAGE_REF_FIELD_NUMBER: builtins.int
    MODEL_METADATA_FIELD_NUMBER: builtins.int
    value: typing.Text
    """Normalized value 01-01-2019"""

    text: typing.Text
    """The text as found on the document "1. Jan"
    useful for overlays
    """

    @property
    def confidence(self) -> global___Confidence:
        """Confidence"""
        pass
    @property
    def bounding_box(self) -> ssn.type.geometry_pb2.BoundingPoly:
        """The bounding box for the block.
        The vertices are in the order of top-left, top-right, bottom-right,
        bottom-left. When a rotation of the bounding box is detected the rotation
        is represented as around the top-left corner as defined when the text is
        read in the 'natural' orientation.
        For example:

        * when the text is horizontal it might look like:

                0----1
                |    |
                3----2

        * when it's rotated 180 degrees around the top-left corner it becomes:

                2----3
                |    |
                1----0

          and the vertex order will still be (0, 1, 2, 3).
        """
        pass
    type: global___Candidate.Type.ValueType
    """Indicate the type of the candidate"""

    page_ref: builtins.int
    """A reference to the page where the candidate was found.
    page_ref start from 1.
    """

    @property
    def model_metadata(self) -> global___ModelSpec:
        """Model spec of the TensorFlow Serving model that predicted this candidate"""
        pass
    def __init__(self,
        *,
        value: typing.Text = ...,
        text: typing.Text = ...,
        confidence: typing.Optional[global___Confidence] = ...,
        bounding_box: typing.Optional[ssn.type.geometry_pb2.BoundingPoly] = ...,
        type: global___Candidate.Type.ValueType = ...,
        page_ref: builtins.int = ...,
        model_metadata: typing.Optional[global___ModelSpec] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bounding_box",b"bounding_box","confidence",b"confidence","model_metadata",b"model_metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bounding_box",b"bounding_box","confidence",b"confidence","model_metadata",b"model_metadata","page_ref",b"page_ref","text",b"text","type",b"type","value",b"value"]) -> None: ...
global___Candidate = Candidate

class ModelSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MODEL_NAME_FIELD_NUMBER: builtins.int
    MODEL_VER_FIELD_NUMBER: builtins.int
    model_name: typing.Text
    """The name of the TensorFlow Serving model"""

    @property
    def model_ver(self) -> google.protobuf.wrappers_pb2.Int64Value:
        """The version number of the TensorFlow Serving model"""
        pass
    def __init__(self,
        *,
        model_name: typing.Text = ...,
        model_ver: typing.Optional[google.protobuf.wrappers_pb2.Int64Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model_ver",b"model_ver"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_name",b"model_name","model_ver",b"model_ver"]) -> None: ...
global___ModelSpec = ModelSpec

class LineCandidate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    PAGE_REF_FIELD_NUMBER: builtins.int
    text: typing.Text
    """Text of the line without the amount
    Example: "3 Dark and Stormy"
    """

    amount: builtins.float
    """Normalized amount (price) of the line
    Example: 300.0
    """

    page_ref: builtins.int
    """A reference to the page where the line was found.
    page_ref start from 1.
    """

    def __init__(self,
        *,
        text: typing.Text = ...,
        amount: builtins.float = ...,
        page_ref: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["amount",b"amount","page_ref",b"page_ref","text",b"text"]) -> None: ...
global___LineCandidate = LineCandidate
