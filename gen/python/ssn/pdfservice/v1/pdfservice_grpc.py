# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: ssn/pdfservice/v1/pdfservice.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import ssn.pdfservice.v1.pdfservice_pb2


class PdfServiceBase(abc.ABC):

    @abc.abstractmethod
    async def RasterizePdf(self, stream: 'grpclib.server.Stream[ssn.pdfservice.v1.pdfservice_pb2.RasterizePdfRequest, ssn.pdfservice.v1.pdfservice_pb2.RasterizePdfResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/ssn.pdfservice.v1.PdfService/RasterizePdf': grpclib.const.Handler(
                self.RasterizePdf,
                grpclib.const.Cardinality.UNARY_STREAM,
                ssn.pdfservice.v1.pdfservice_pb2.RasterizePdfRequest,
                ssn.pdfservice.v1.pdfservice_pb2.RasterizePdfResponse,
            ),
        }


class PdfServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.RasterizePdf = grpclib.client.UnaryStreamMethod(
            channel,
            '/ssn.pdfservice.v1.PdfService/RasterizePdf',
            ssn.pdfservice.v1.pdfservice_pb2.RasterizePdfRequest,
            ssn.pdfservice.v1.pdfservice_pb2.RasterizePdfResponse,
        )
