# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from vml_proto.ssn.mlservice.v2 import mlservice_pb2 as ssn_dot_mlservice_dot_v2_dot_mlservice__pb2


class MlServiceStub(object):
    """Feature Generation Service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FeatureGen = channel.unary_unary(
                '/ssn.mlservice.v2.MlService/FeatureGen',
                request_serializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.FeatureGenRequest.SerializeToString,
                response_deserializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.FeatureGenResponse.FromString,
                _registered_method=True)
        self.Predict = channel.unary_unary(
                '/ssn.mlservice.v2.MlService/Predict',
                request_serializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PredictRequest.SerializeToString,
                response_deserializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PredictResponse.FromString,
                _registered_method=True)
        self.FeatureGenPredict = channel.unary_unary(
                '/ssn.mlservice.v2.MlService/FeatureGenPredict',
                request_serializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.FeatureGenPredictRequest.SerializeToString,
                response_deserializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PredictResponse.FromString,
                _registered_method=True)


class MlServiceServicer(object):
    """Feature Generation Service
    """

    def FeatureGen(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Predict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FeatureGenPredict(self, request, context):
        """Convinienve method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MlServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FeatureGen': grpc.unary_unary_rpc_method_handler(
                    servicer.FeatureGen,
                    request_deserializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.FeatureGenRequest.FromString,
                    response_serializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.FeatureGenResponse.SerializeToString,
            ),
            'Predict': grpc.unary_unary_rpc_method_handler(
                    servicer.Predict,
                    request_deserializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PredictRequest.FromString,
                    response_serializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PredictResponse.SerializeToString,
            ),
            'FeatureGenPredict': grpc.unary_unary_rpc_method_handler(
                    servicer.FeatureGenPredict,
                    request_deserializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.FeatureGenPredictRequest.FromString,
                    response_serializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PredictResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ssn.mlservice.v2.MlService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ssn.mlservice.v2.MlService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MlService(object):
    """Feature Generation Service
    """

    @staticmethod
    def FeatureGen(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ssn.mlservice.v2.MlService/FeatureGen',
            ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.FeatureGenRequest.SerializeToString,
            ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.FeatureGenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Predict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ssn.mlservice.v2.MlService/Predict',
            ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PredictRequest.SerializeToString,
            ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PredictResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FeatureGenPredict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ssn.mlservice.v2.MlService/FeatureGenPredict',
            ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.FeatureGenPredictRequest.SerializeToString,
            ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PredictResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class PurchaseLinesStub(object):
    """Purchase Lines Service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InferPurchaseLines = channel.unary_unary(
                '/ssn.mlservice.v2.PurchaseLines/InferPurchaseLines',
                request_serializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PurchaseLinesRequest.SerializeToString,
                response_deserializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PurchaseLinesResponse.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/ssn.mlservice.v2.PurchaseLines/HealthCheck',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                _registered_method=True)


class PurchaseLinesServicer(object):
    """Purchase Lines Service
    """

    def InferPurchaseLines(self, request, context):
        """Infers purchase lines from document images and text
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Legacy health check method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PurchaseLinesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InferPurchaseLines': grpc.unary_unary_rpc_method_handler(
                    servicer.InferPurchaseLines,
                    request_deserializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PurchaseLinesRequest.FromString,
                    response_serializer=ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PurchaseLinesResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ssn.mlservice.v2.PurchaseLines', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('ssn.mlservice.v2.PurchaseLines', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PurchaseLines(object):
    """Purchase Lines Service
    """

    @staticmethod
    def InferPurchaseLines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ssn.mlservice.v2.PurchaseLines/InferPurchaseLines',
            ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PurchaseLinesRequest.SerializeToString,
            ssn_dot_mlservice_dot_v2_dot_mlservice__pb2.PurchaseLinesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/ssn.mlservice.v2.PurchaseLines/HealthCheck',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
