{
  "swagger": "2.0",
  "info": {
    "title": "asgt/v2/dataset_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "DatasetService"
    },
    {
      "name": "SuggesterService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/datasets": {
      "post": {
        "summary": "Create a new dataset. Since no examples are provided in this operation, the training won't be scheduled\nuntil CreateExample or BatchCreateExample is called after the creation of the dataset.",
        "operationId": "DatasetService_CreateDataset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v2CreateDatasetRequest"
            }
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/datasets/{datasetName}": {
      "get": {
        "summary": "Get the basic information about a dataset.",
        "operationId": "DatasetService_GetDataset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typeDataset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetName",
            "description": "text-no-spaces",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DatasetService"
        ]
      },
      "delete": {
        "summary": "Delete a dataset with the specified name.",
        "operationId": "DatasetService_DeleteDataset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typeDataset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetName",
            "description": "text-no-spaces",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DatasetService"
        ]
      },
      "put": {
        "summary": "Not implemented yet.\nCreates a new dataset. If a dataset with such name already exsits, it will be updated with the\nprovided data.",
        "operationId": "DatasetService_CreateOrUpdateDataset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetName",
            "description": "text-no-spaces",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/datasets/{datasetName}/examples": {
      "delete": {
        "summary": "Truncate a dataset. Use this operation to remove examples in a dataset used for future training without\nremoving existing models.",
        "operationId": "DatasetService_TruncateDataset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetName",
            "description": "text-no-spaces",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DatasetService"
        ]
      },
      "post": {
        "summary": "Uploads a new single example.",
        "operationId": "DatasetService_CreateExample",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetName",
            "description": "text-no-spaces",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "$ref": "#/definitions/typeExample"
                }
              }
            }
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/datasets/{datasetName}/examples/{example.id}": {
      "put": {
        "summary": "Not implemented yet.\nUploads or updates a new single example.\nIf the specified example already exists, the example\nis updated with the provided values according to provided ID.",
        "operationId": "DatasetService_CreateOrUpdateExample",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetName",
            "description": "text-no-spaces",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "example.id",
            "description": "Not implemented yet.\nAn optional id to provide individual corrections to examples, for example when a user updates their initial feedback.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/typeData"
                    },
                    "targetValues": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/typeTargetValue"
                      }
                    }
                  },
                  "title": "A pair of example data and example target values"
                }
              }
            }
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/datasets/{datasetName}/examples:batchCreate": {
      "post": {
        "summary": "Upload multiple examples at once. This matches the behavior of the v1 API's append operation.",
        "operationId": "DatasetService_BatchCreateExample",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetName",
            "description": "text-no-spaces",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "examples": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/typeExample"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/datasets/{datasetName}/model:batchSuggest": {
      "post": {
        "summary": "Suggest target values for multiple inputs using the most recently trained model in a dataset.\nReturns 404 if a dataset exists, but no model has been trained. This matches the behavior of the v1 API.",
        "operationId": "SuggesterService_ModelBatchSuggest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2BatchSuggestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetName",
            "description": "Name of the dataset to make prediction against\n\ntext-no-spaces",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/typeData"
                  },
                  "title": "Input data to use for prediction"
                },
                "options": {
                  "$ref": "#/definitions/v2SuggestOptions"
                }
              }
            }
          }
        ],
        "tags": [
          "SuggesterService"
        ]
      }
    },
    "/v2/datasets/{datasetName}/trainings": {
      "get": {
        "summary": "Get the specified number of the most recent dataset's trainings.\nNumber of requested trainings has to be larger than 0 but no larger than 100.",
        "operationId": "DatasetService_GetDatasetTrainings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2TrainingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetName",
            "description": "text-no-spaces",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "options.limit",
            "description": "The number of trainings to return. Ranges from 1 to 100.\n\nmapped to URL query parameter `options.limit`, should be between 0 and 100 (100 inclusive)",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/datasets/{datasetName}:batchSuggest": {
      "post": {
        "summary": "BatchSuggest target values for multiple inputs using a dataset, returning an empty result if no model exists.",
        "operationId": "SuggesterService_BatchSuggest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2BatchSuggestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetName",
            "description": "Name of the dataset to make prediction against\n\ntext-no-spaces",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/typeData"
                  },
                  "title": "Input data to use for prediction"
                },
                "options": {
                  "$ref": "#/definitions/v2SuggestOptions"
                }
              }
            }
          }
        ],
        "tags": [
          "SuggesterService"
        ]
      }
    },
    "/v2/datasets/{datasetName}:suggest": {
      "post": {
        "summary": "Suggest target values for some input using a dataset, returning an empty result if no model exists.",
        "operationId": "SuggesterService_Suggest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2SuggestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "datasetName",
            "description": "Name of the dataset to make prediction against\n\ntext-no-spaces",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "input": {
                  "$ref": "#/definitions/typeData",
                  "title": "Input data to use for prediction"
                },
                "options": {
                  "$ref": "#/definitions/v2SuggestOptions"
                }
              }
            }
          }
        ],
        "tags": [
          "SuggesterService"
        ]
      }
    },
    "/v2/tags/{tagName}": {
      "delete": {
        "summary": "Delete all datasets (and their examples) containing the specified tag.\nThe datasets' names are not considered in this request - only the tag names is.",
        "operationId": "DatasetService_DeleteTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tagName",
            "description": "text-no-spaces",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    },
    "/v2/trainings": {
      "get": {
        "summary": "Get the specified number of the most recent trainings accross all consumer's datasets.\nNumber of requested trainings has to be larger than 0 but no larger than 100.",
        "operationId": "DatasetService_GetTrainings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v2TrainingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "options.limit",
            "description": "The number of trainings to return. Ranges from 1 to 100.\n\nmapped to URL query parameter `options.limit`, should be between 0 and 100 (100 inclusive)",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "DatasetService"
        ]
      }
    }
  },
  "definitions": {
    "ConfidenceLevel": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "VERY_LOW",
        "LOW",
        "MID",
        "HIGH",
        "VERY_HIGH"
      ],
      "default": "UNKNOWN"
    },
    "ModelInputType": {
      "type": "string",
      "enum": [
        "FEATURE_TENSORS",
        "EXAMPLE_TENSOR"
      ],
      "default": "FEATURE_TENSORS"
    },
    "PredictionTarget": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "candidates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetCandidate"
          }
        }
      }
    },
    "TargetCandidate": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "confidence": {
          "$ref": "#/definitions/typeConfidence"
        }
      }
    },
    "TargetMetricsMetric": {
      "type": "object",
      "properties": {
        "precision": {
          "type": "number",
          "format": "float"
        },
        "confidence": {
          "type": "number",
          "format": "float"
        },
        "answerRate": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typeConfidence": {
      "type": "object",
      "properties": {
        "level": {
          "$ref": "#/definitions/ConfidenceLevel",
          "description": "A bucketized representation of confidence, which is intended to give clients\nhighly stable results across model upgrades."
        },
        "value": {
          "type": "number",
          "format": "float",
          "title": "The confidence value"
        }
      },
      "title": "Common types"
    },
    "typeData": {
      "type": "object",
      "properties": {
        "transaction": {
          "$ref": "#/definitions/typeTransaction",
          "title": "Transaction-level information; at this time used only with bank transactions"
        },
        "invoice": {
          "$ref": "#/definitions/typeInvoice",
          "title": "Invoice-level information for e-invoices and scanned invoices and receipts"
        },
        "invoiceLine": {
          "$ref": "#/definitions/typeInvoiceLine",
          "title": "Line-level information for e-invoices; use one sample per invoice line"
        }
      },
      "description": "Specifies data structure for dataset creation. Only one of Transaction, Invoice, InvoiceLine\nstructures can be used at a time."
    },
    "typeDataset": {
      "type": "object",
      "properties": {
        "consumer": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "retentionPolicy": {
          "$ref": "#/definitions/typeRetentionPolicy"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "size": {
          "type": "string",
          "format": "int64",
          "title": "Number of samples in the dataset reflecting added entries that meet the retention policy"
        },
        "truncatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "typeExample": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/typeData"
        },
        "targetValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeTargetValue"
          }
        },
        "id": {
          "type": "string",
          "description": "Not implemented yet.\nAn optional id to provide individual corrections to examples, for example when a user updates their initial feedback."
        }
      },
      "title": "A pair of example data and example target values"
    },
    "typeInvoice": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Invoice text from the SmartScan product."
        }
      },
      "description": "Used in scanned-invoice requests."
    },
    "typeInvoiceLine": {
      "type": "object",
      "properties": {
        "itemId": {
          "type": "string",
          "description": "Id of the product (item)."
        },
        "text": {
          "type": "string",
          "description": "Text of the invoice line."
        },
        "issueDate": {
          "type": "string",
          "format": "date-time"
        },
        "supplier": {
          "$ref": "#/definitions/typeSupplier",
          "description": "Supplier of the invoice."
        },
        "customerRef": {
          "type": "string",
          "description": "reference to the customer."
        },
        "amount": {
          "type": "number",
          "format": "float",
          "description": "Amount of the invoice line."
        }
      },
      "description": "Used in electronic-invoice-line requests."
    },
    "typeModel": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "int64"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "datasetSize": {
          "type": "integer",
          "format": "int32"
        },
        "trainingSize": {
          "type": "integer",
          "format": "int32"
        },
        "confidenceScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeTargetMetrics"
          }
        },
        "inputType": {
          "$ref": "#/definitions/ModelInputType"
        },
        "datasetType": {
          "type": "string"
        }
      }
    },
    "typePrediction": {
      "type": "object",
      "properties": {
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PredictionTarget"
          }
        }
      }
    },
    "typeRetentionPolicy": {
      "type": "object",
      "properties": {
        "maxDays": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "typeSupplier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the supplier; not nullable."
        },
        "name": {
          "type": "string",
          "description": "Name of the supplier."
        },
        "globalId": {
          "type": "string",
          "description": "Global ID of the supplier."
        }
      }
    },
    "typeTargetMetrics": {
      "type": "object",
      "properties": {
        "target": {
          "type": "string"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetMetricsMetric"
          }
        }
      }
    },
    "typeTargetValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Record mapping a target name to a value"
    },
    "typeTraining": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "Creation time of the training"
        },
        "status": {
          "type": "string"
        },
        "trainingStatus": {
          "type": "string",
          "description": "Status of the training.\nSCHEDULED - Training is scheduled to be run in a specific time. This\ncould be in between 1 minute or 24 hours depending on how recently the dataset\nwas created\nPENDING - The training is ready to be picked up by a worker.\nRUNNING - The training is currently running.\nDONE - The training has completed successfully.\nFAILED - The training failed due to an error. See training status for\nmore information."
        },
        "trainingStatusMessage": {
          "type": "string",
          "description": "Additional information about the training status."
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "Specifies when did the training finish."
        },
        "dataset": {
          "$ref": "#/definitions/typeDataset",
          "description": "Specifies dataset the training ran on."
        },
        "scheduleTime": {
          "type": "string",
          "format": "date-time",
          "description": "Specifies when the training is scheduled."
        }
      }
    },
    "typeTransaction": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Text of the bank transaction."
        },
        "amount": {
          "type": "number",
          "format": "float",
          "description": "Amount of the transaction."
        }
      },
      "description": "Used in bank requests."
    },
    "v2BatchSuggestResponse": {
      "type": "object",
      "properties": {
        "predictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typePrediction"
          }
        },
        "model": {
          "$ref": "#/definitions/typeModel"
        }
      }
    },
    "v2CreateDatasetRequest": {
      "type": "object",
      "properties": {
        "datasetName": {
          "type": "string",
          "title": "text-no-spaces"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "text-no-spaces"
        }
      }
    },
    "v2SuggestOptions": {
      "type": "object",
      "properties": {
        "suggestLimit": {
          "type": "integer",
          "format": "int32",
          "title": "Maximum number of suggestions to return per target"
        },
        "minConfidence": {
          "$ref": "#/definitions/ConfidenceLevel",
          "description": "Not implemented yet."
        }
      },
      "title": "option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {example: \"{\\\"suggest_limit\\\": 3}\"};"
    },
    "v2SuggestResponse": {
      "type": "object",
      "properties": {
        "prediction": {
          "$ref": "#/definitions/typePrediction"
        },
        "model": {
          "$ref": "#/definitions/typeModel"
        }
      }
    },
    "v2TrainingRequestOptions": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "string",
          "format": "int64",
          "description": "The number of trainings to return. Ranges from 1 to 100.\n\nmapped to URL query parameter `options.limit`, should be between 0 and 100 (100 inclusive)"
        }
      }
    },
    "v2TrainingsResponse": {
      "type": "object",
      "properties": {
        "trainings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeTraining"
          }
        }
      }
    }
  }
}
