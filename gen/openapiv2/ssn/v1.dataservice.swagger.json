{
  "swagger": "2.0",
  "info": {
    "title": "ssn/dataservice/v1/dataservice.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "DataService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/feedback:create": {
      "post": {
        "operationId": "DataService_Feedback",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1FeedbackRequest"
            }
          }
        ],
        "tags": [
          "DataService"
        ]
      }
    },
    "/v1/feedback:delete": {
      "post": {
        "operationId": "DataService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DeleteRequest"
            }
          }
        ],
        "tags": [
          "DataService"
        ]
      }
    }
  },
  "definitions": {
    "BlockBlockType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "TEXT",
        "TABLE",
        "PICTURE",
        "RULER",
        "BARCODE"
      ],
      "default": "UNKNOWN",
      "description": "Type of a block (text, image etc) as identified by OCR.\n\n - UNKNOWN: Unknown block type.\n - TEXT: Regular text block.\n - TABLE: Table block.\n - PICTURE: Image block.\n - RULER: Horizontal/vertical line box.\n - BARCODE: Barcode block."
    },
    "DetectedBreakBreakType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "SPACE",
        "SURE_SPACE",
        "EOL_SURE_SPACE",
        "HYPHEN",
        "LINE_BREAK"
      ],
      "default": "UNKNOWN",
      "description": "Enum to denote the type of break found. New line, space etc.\n\n - UNKNOWN: Unknown break label type.\n - SPACE: Regular space.\n - SURE_SPACE: Sure space (very wide).\n - EOL_SURE_SPACE: Line-wrapping break.\n - HYPHEN: End-line hyphen that is not present in text; does not co-occur with\n`SPACE`, `LEADER_SPACE`, or `LINE_BREAK`.\n - LINE_BREAK: Line break that ends a paragraph."
    },
    "TextAnnotationDetectedBreak": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/DetectedBreakBreakType",
          "description": "Detected break type."
        },
        "isPrefix": {
          "type": "boolean",
          "description": "True if break prepends the element."
        }
      },
      "description": "Detected start or end of a structural component."
    },
    "TextAnnotationDetectedLanguage": {
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more\ninformation, see\nhttp://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of detected language. Range [0, 1]."
        }
      },
      "description": "Detected language for a structural component."
    },
    "TextAnnotationTextProperty": {
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextAnnotationDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "detectedBreak": {
          "$ref": "#/definitions/TextAnnotationDetectedBreak",
          "description": "Detected start or end of a text segment."
        }
      },
      "description": "Additional information detected on the structural component."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typeBlock": {
      "type": "object",
      "properties": {
        "property": {
          "$ref": "#/definitions/TextAnnotationTextProperty",
          "description": "Additional information detected for the block."
        },
        "boundingBox": {
          "$ref": "#/definitions/typeBoundingPoly",
          "description": "* when the text is horizontal it might look like:\n\n        0----1\n        |    |\n        3----2\n\n* when it's rotated 180 degrees around the top-left corner it becomes:\n\n        2----3\n        |    |\n        1----0\n\n  and the vertex order will still be (0, 1, 2, 3).",
          "title": "The bounding box for the block.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:"
        },
        "paragraphs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeParagraph"
          },
          "description": "List of paragraphs in this block (if this blocks is of type text)."
        },
        "blockType": {
          "$ref": "#/definitions/BlockBlockType",
          "description": "Detected block type (text, image etc) for this block."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the OCR results on the block. Range [0, 1]."
        }
      },
      "description": "Logical element on the page."
    },
    "typeBoundingPoly": {
      "type": "object",
      "properties": {
        "vertices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeVertex"
          },
          "description": "The bounding polygon vertices."
        },
        "normalizedVertices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeNormalizedVertex"
          },
          "description": "The bounding polygon normalized vertices."
        }
      },
      "description": "A bounding polygon for the detected image annotation."
    },
    "typeDate": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without\na year."
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a\nmonth and day."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0\nto specify a year by itself or a year and month where the day isn't\nsignificant."
        }
      },
      "description": "* A full date, with non-zero year, month, and day values\n* A month and day value, with a zero year, such as an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, such as a credit card expiration\ndate\n\nRelated types are [google.type.TimeOfDay][google.type.TimeOfDay] and\n`google.protobuf.Timestamp`.",
      "title": "Represents a whole or partial calendar date, such as a birthday. The time of\nday and time zone are either specified elsewhere or are insignificant. The\ndate is relative to the Gregorian Calendar. This can represent one of the\nfollowing:"
    },
    "typeModelSpec": {
      "type": "object",
      "properties": {
        "modelName": {
          "type": "string",
          "title": "The name of the TensorFlow Serving model"
        },
        "modelVer": {
          "type": "string",
          "format": "int64",
          "title": "The version number of the TensorFlow Serving model"
        }
      }
    },
    "typeNormalizedVertex": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "format": "float",
          "description": "X coordinate."
        },
        "y": {
          "type": "number",
          "format": "float",
          "description": "Y coordinate."
        }
      },
      "description": "A vertex represents a 2D point in the image.\nNOTE: the normalized vertex coordinates are relative to the original image\nand range from 0 to 1."
    },
    "typePage": {
      "type": "object",
      "properties": {
        "property": {
          "$ref": "#/definitions/TextAnnotationTextProperty",
          "description": "Additional information detected on the page."
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Page width. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels."
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Page height. For PDFs the unit is points. For images (including\nTIFFs) the unit is pixels."
        },
        "blocks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeBlock"
          },
          "description": "List of blocks of text, images etc on this page."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the OCR results on the page. Range [0, 1]."
        }
      },
      "description": "Detected page from OCR."
    },
    "typeParagraph": {
      "type": "object",
      "properties": {
        "property": {
          "$ref": "#/definitions/TextAnnotationTextProperty",
          "description": "Additional information detected for the paragraph."
        },
        "boundingBox": {
          "$ref": "#/definitions/typeBoundingPoly",
          "description": "The bounding box for the paragraph.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "words": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeWord"
          },
          "description": "List of words in this paragraph."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the OCR results for the paragraph. Range [0, 1]."
        }
      },
      "description": "Structural unit of text representing a number of words in certain order."
    },
    "typeSymbol": {
      "type": "object",
      "properties": {
        "property": {
          "$ref": "#/definitions/TextAnnotationTextProperty",
          "description": "Additional information detected for the symbol."
        },
        "boundingBox": {
          "$ref": "#/definitions/typeBoundingPoly",
          "description": "The bounding box for the symbol.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertice order will still be (0, 1, 2, 3)."
        },
        "text": {
          "type": "string",
          "description": "The actual UTF-8 representation of the symbol."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the OCR results for the symbol. Range [0, 1]."
        }
      },
      "description": "A single symbol representation."
    },
    "typeTextAnnotation": {
      "type": "object",
      "properties": {
        "pages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typePage"
          },
          "description": "List of pages detected by OCR."
        },
        "text": {
          "type": "string",
          "description": "UTF-8 text detected on the pages."
        }
      },
      "description": "TextAnnotation contains a structured representation of OCR extracted text.\nThe hierarchy of an OCR extracted text structure is like this:\n    TextAnnotation -\u003e Page -\u003e Block -\u003e Paragraph -\u003e Word -\u003e Symbol\nEach structural component, starting from Page, may further have their own\nproperties. Properties describe detected languages, breaks etc.. Please refer\nto the\n[TextAnnotation.TextProperty][google.cloud.vision.v1.TextAnnotation.TextProperty]\nmessage definition below for more detail."
    },
    "typeTier": {
      "type": "string",
      "enum": [
        "DEFAULT",
        "STANDARD",
        "PREMIUM"
      ],
      "default": "DEFAULT",
      "description": " - DEFAULT: Use the default tier. Defaults to the STANDARD option or account default, if set."
    },
    "typeVertex": {
      "type": "object",
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "X coordinate."
        },
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "Y coordinate."
        }
      },
      "description": "A vertex represents a 2D point in the image.\nNOTE: the vertex coordinates are in the same scale as the original image."
    },
    "typeWord": {
      "type": "object",
      "properties": {
        "property": {
          "$ref": "#/definitions/TextAnnotationTextProperty",
          "description": "Additional information detected for the word."
        },
        "boundingBox": {
          "$ref": "#/definitions/typeBoundingPoly",
          "description": "The bounding box for the word.\nThe vertices are in the order of top-left, top-right, bottom-right,\nbottom-left. When a rotation of the bounding box is detected the rotation\nis represented as around the top-left corner as defined when the text is\nread in the 'natural' orientation.\nFor example:\n  * when the text is horizontal it might look like:\n     0----1\n     |    |\n     3----2\n  * when it's rotated 180 degrees around the top-left corner it becomes:\n     2----3\n     |    |\n     1----0\n  and the vertex order will still be (0, 1, 2, 3)."
        },
        "symbols": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeSymbol"
          },
          "description": "List of symbols in the word.\nThe order of the symbols follows the natural reading order."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of the OCR results for the word. Range [0, 1]."
        }
      },
      "description": "A word representation."
    },
    "v1CallsPerMonth": {
      "type": "object",
      "properties": {
        "calls": {
          "type": "string",
          "format": "int64"
        },
        "monthName": {
          "type": "string"
        }
      }
    },
    "v1CallsPerMonthResponse": {
      "type": "object",
      "properties": {
        "callsPerMonth": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1CallsPerMonth"
          }
        }
      }
    },
    "v1Correctness": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "correctPercentage": {
          "type": "number",
          "format": "float"
        },
        "incompletePercentage": {
          "type": "number",
          "format": "float"
        },
        "errorPercentage": {
          "type": "number",
          "format": "float"
        },
        "support": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1CreateDocumentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1DeleteRequest": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1Document": {
      "type": "object",
      "properties": {
        "ta": {
          "$ref": "#/definitions/typeTextAnnotation"
        },
        "bytes": {
          "type": "string",
          "format": "byte"
        },
        "id": {
          "type": "string"
        },
        "consumer": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "trueValues": {
          "$ref": "#/definitions/v1TrueValues"
        },
        "predictionValues": {
          "$ref": "#/definitions/v1PredictionValues"
        },
        "feedbackTime": {
          "type": "string",
          "format": "uint64"
        },
        "predictionConfidences": {
          "$ref": "#/definitions/v1PredictionConfidences"
        },
        "predictionMetadata": {
          "$ref": "#/definitions/v1PredictionMetadata"
        }
      }
    },
    "v1FeedbackMetrics": {
      "type": "object",
      "properties": {
        "documentCount": {
          "type": "integer",
          "format": "int32"
        },
        "feedbackCount": {
          "type": "integer",
          "format": "int32"
        },
        "overallCorrectness": {
          "$ref": "#/definitions/v1Correctness"
        },
        "fieldCorrectness": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Correctness"
          }
        }
      }
    },
    "v1FeedbackRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "trueValues": {
          "$ref": "#/definitions/v1TrueValues"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1PredictionConfidences": {
      "type": "object",
      "properties": {
        "totalInclVat": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "totalVat": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "totalExclVat": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "orderDate": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "paymentDueDate": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "documentType": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "currency": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "creditCardLastFour": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "paymentMethod": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "ocrLineDkType": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "ocrLineDkPaymentId": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "ocrLineDkCreditorId": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "ocrLineSePaymentId": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "ocrLineSeBankgiroCreditorId": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "ocrLineSePlusgiroCreditorId": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "ocrLineNoPaymentId": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "ocrLineFiPaymentId": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "ocrLineNlPaymentId": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "supplierCorporateId": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "supplierCountryCode": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "invoiceNumber": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "iban": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "orderReference": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "bankAccountNumber": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "bankRegistrationNumber": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "supplierName": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "bic": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "documentNumber": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "documentDate": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "orderNumber": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "supplierVatNumber": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "supplierOrganisationNumber": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "supplierAddress": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "v1PredictionMetadata": {
      "type": "object",
      "properties": {
        "totalInclVat": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "totalVat": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "totalExclVat": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "orderDate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "paymentDueDate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "documentType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "currency": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "creditCardLastFour": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "paymentMethod": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "ocrLineDkType": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "ocrLineDkPaymentId": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "ocrLineDkCreditorId": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "ocrLineSePaymentId": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "ocrLineSeBankgiroCreditorId": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "ocrLineSePlusgiroCreditorId": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "ocrLineNoPaymentId": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "ocrLineFiPaymentId": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "ocrLineNlPaymentId": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "supplierCorporateId": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "supplierCountryCode": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "invoiceNumber": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "iban": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "orderReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "bankAccountNumber": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "bankRegistrationNumber": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "supplierName": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "bic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "documentNumber": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "documentDate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "orderNumber": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "supplierVatNumber": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "supplierOrganisationNumber": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        },
        "supplierAddress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeModelSpec"
          }
        }
      }
    },
    "v1PredictionValues": {
      "type": "object",
      "properties": {
        "totalInclVat": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "totalVat": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "totalExclVat": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "orderDate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeDate"
          }
        },
        "paymentDueDate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeDate"
          }
        },
        "documentType": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "currency": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creditCardLastFour": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "paymentMethod": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ocrLineDkType": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ocrLineDkPaymentId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ocrLineDkCreditorId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ocrLineSePaymentId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ocrLineSeBankgiroCreditorId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ocrLineSePlusgiroCreditorId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ocrLineNoPaymentId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ocrLineFiPaymentId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ocrLineNlPaymentId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supplierCorporateId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supplierCountryCode": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "invoiceNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "iban": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderReference": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bankAccountNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bankRegistrationNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supplierName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bic": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "documentNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "documentDate": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/typeDate"
          }
        },
        "orderNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supplierVatNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supplierOrganisationNumber": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supplierAddress": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ReadDocumentResponse": {
      "type": "object",
      "properties": {
        "document": {
          "$ref": "#/definitions/v1Document"
        }
      }
    },
    "v1TrueValues": {
      "type": "object",
      "properties": {
        "totalInclVat": {
          "type": "number",
          "format": "double"
        },
        "totalVat": {
          "type": "number",
          "format": "double"
        },
        "totalExclVat": {
          "type": "number",
          "format": "double"
        },
        "orderDate": {
          "$ref": "#/definitions/typeDate"
        },
        "paymentDueDate": {
          "$ref": "#/definitions/typeDate"
        },
        "documentType": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "creditCardLastFour": {
          "type": "string"
        },
        "paymentMethod": {
          "type": "string"
        },
        "ocrLineDkType": {
          "type": "string"
        },
        "ocrLineDkPaymentId": {
          "type": "string"
        },
        "ocrLineDkCreditorId": {
          "type": "string"
        },
        "ocrLineSePaymentId": {
          "type": "string"
        },
        "ocrLineSeBankgiroCreditorId": {
          "type": "string"
        },
        "ocrLineSePlusgiroCreditorId": {
          "type": "string"
        },
        "ocrLineNoPaymentId": {
          "type": "string"
        },
        "ocrLineFiPaymentId": {
          "type": "string"
        },
        "ocrLineNlPaymentId": {
          "type": "string"
        },
        "supplierCorporateId": {
          "type": "string"
        },
        "supplierCountryCode": {
          "type": "string"
        },
        "invoiceNumber": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "orderReference": {
          "type": "string"
        },
        "bankAccountNumber": {
          "type": "string"
        },
        "bankRegistrationNumber": {
          "type": "string"
        },
        "supplierName": {
          "type": "string"
        },
        "bic": {
          "type": "string"
        },
        "documentNumber": {
          "type": "string"
        },
        "documentDate": {
          "$ref": "#/definitions/typeDate"
        },
        "orderNumber": {
          "type": "string"
        },
        "supplierVatNumber": {
          "type": "string"
        },
        "supplierOrganisationNumber": {
          "type": "string"
        },
        "supplierAddress": {
          "type": "string"
        }
      }
    }
  }
}
