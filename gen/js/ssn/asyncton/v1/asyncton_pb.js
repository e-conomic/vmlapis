// source: ssn/asyncton/v1/asyncton.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var protoc$gen$openapiv2_options_annotations_pb = require('../../../protoc-gen-openapiv2/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$openapiv2_options_annotations_pb);
var ssn_annotator_v1_annotator_pb = require('../../../ssn/annotator/v1/annotator_pb.js');
goog.object.extend(proto, ssn_annotator_v1_annotator_pb);
var ssn_type_candidate_pb = require('../../../ssn/type/candidate_pb.js');
goog.object.extend(proto, ssn_type_candidate_pb);
var ssn_type_text_annotation_pb = require('../../../ssn/type/text_annotation_pb.js');
goog.object.extend(proto, ssn_type_text_annotation_pb);
var validate_validate_pb = require('../../../validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
goog.exportSymbol('proto.ssn.asyncton.v1.Annotation', null, global);
goog.exportSymbol('proto.ssn.asyncton.v1.CreateTransactionRequest', null, global);
goog.exportSymbol('proto.ssn.asyncton.v1.CreateTransactionResponse', null, global);
goog.exportSymbol('proto.ssn.asyncton.v1.DeleteTagRequest', null, global);
goog.exportSymbol('proto.ssn.asyncton.v1.DeleteTransactionRequest', null, global);
goog.exportSymbol('proto.ssn.asyncton.v1.GetTransactionResultsRequest', null, global);
goog.exportSymbol('proto.ssn.asyncton.v1.GetTransactionResultsResponse', null, global);
goog.exportSymbol('proto.ssn.asyncton.v1.GetTransactionStatusRequest', null, global);
goog.exportSymbol('proto.ssn.asyncton.v1.GetTransactionStatusResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.asyncton.v1.CreateTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ssn.asyncton.v1.CreateTransactionRequest.repeatedFields_, null);
};
goog.inherits(proto.ssn.asyncton.v1.CreateTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.asyncton.v1.CreateTransactionRequest.displayName = 'proto.ssn.asyncton.v1.CreateTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.asyncton.v1.CreateTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.asyncton.v1.CreateTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.asyncton.v1.CreateTransactionResponse.displayName = 'proto.ssn.asyncton.v1.CreateTransactionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.asyncton.v1.GetTransactionResultsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.asyncton.v1.GetTransactionResultsRequest.displayName = 'proto.ssn.asyncton.v1.GetTransactionResultsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ssn.asyncton.v1.GetTransactionResultsResponse.repeatedFields_, null);
};
goog.inherits(proto.ssn.asyncton.v1.GetTransactionResultsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.asyncton.v1.GetTransactionResultsResponse.displayName = 'proto.ssn.asyncton.v1.GetTransactionResultsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.asyncton.v1.Annotation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ssn.asyncton.v1.Annotation.repeatedFields_, null);
};
goog.inherits(proto.ssn.asyncton.v1.Annotation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.asyncton.v1.Annotation.displayName = 'proto.ssn.asyncton.v1.Annotation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.asyncton.v1.GetTransactionStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.asyncton.v1.GetTransactionStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.asyncton.v1.GetTransactionStatusRequest.displayName = 'proto.ssn.asyncton.v1.GetTransactionStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.asyncton.v1.GetTransactionStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.asyncton.v1.GetTransactionStatusResponse.displayName = 'proto.ssn.asyncton.v1.GetTransactionStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.asyncton.v1.DeleteTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.asyncton.v1.DeleteTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.asyncton.v1.DeleteTransactionRequest.displayName = 'proto.ssn.asyncton.v1.DeleteTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.asyncton.v1.DeleteTagRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.asyncton.v1.DeleteTagRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.asyncton.v1.DeleteTagRequest.displayName = 'proto.ssn.asyncton.v1.DeleteTagRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.asyncton.v1.CreateTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.asyncton.v1.CreateTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    document: (f = msg.getDocument()) && ssn_annotator_v1_annotator_pb.Document.toObject(includeInstance, f),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    featuresList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    customId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.asyncton.v1.CreateTransactionRequest}
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.asyncton.v1.CreateTransactionRequest;
  return proto.ssn.asyncton.v1.CreateTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.asyncton.v1.CreateTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.asyncton.v1.CreateTransactionRequest}
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ssn_annotator_v1_annotator_pb.Document;
      reader.readMessage(value,ssn_annotator_v1_annotator_pb.Document.deserializeBinaryFromReader);
      msg.setDocument(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addFeatures(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.asyncton.v1.CreateTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.asyncton.v1.CreateTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ssn_annotator_v1_annotator_pb.Document.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getCustomId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional ssn.annotator.v1.Document document = 1;
 * @return {?proto.ssn.annotator.v1.Document}
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.getDocument = function() {
  return /** @type{?proto.ssn.annotator.v1.Document} */ (
    jspb.Message.getWrapperField(this, ssn_annotator_v1_annotator_pb.Document, 1));
};


/**
 * @param {?proto.ssn.annotator.v1.Document|undefined} value
 * @return {!proto.ssn.asyncton.v1.CreateTransactionRequest} returns this
*/
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.setDocument = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ssn.asyncton.v1.CreateTransactionRequest} returns this
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.clearDocument = function() {
  return this.setDocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.hasDocument = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string tags = 2;
 * @return {!Array<string>}
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ssn.asyncton.v1.CreateTransactionRequest} returns this
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ssn.asyncton.v1.CreateTransactionRequest} returns this
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ssn.asyncton.v1.CreateTransactionRequest} returns this
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * repeated string features = 3;
 * @return {!Array<string>}
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.getFeaturesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ssn.asyncton.v1.CreateTransactionRequest} returns this
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.setFeaturesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ssn.asyncton.v1.CreateTransactionRequest} returns this
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.addFeatures = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ssn.asyncton.v1.CreateTransactionRequest} returns this
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.clearFeaturesList = function() {
  return this.setFeaturesList([]);
};


/**
 * optional string custom_id = 4;
 * @return {string}
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.getCustomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.CreateTransactionRequest} returns this
 */
proto.ssn.asyncton.v1.CreateTransactionRequest.prototype.setCustomId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.asyncton.v1.CreateTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.asyncton.v1.CreateTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.asyncton.v1.CreateTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.CreateTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    customId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.asyncton.v1.CreateTransactionResponse}
 */
proto.ssn.asyncton.v1.CreateTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.asyncton.v1.CreateTransactionResponse;
  return proto.ssn.asyncton.v1.CreateTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.asyncton.v1.CreateTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.asyncton.v1.CreateTransactionResponse}
 */
proto.ssn.asyncton.v1.CreateTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.asyncton.v1.CreateTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.asyncton.v1.CreateTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.asyncton.v1.CreateTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.CreateTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustomId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ssn.asyncton.v1.CreateTransactionResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.CreateTransactionResponse} returns this
 */
proto.ssn.asyncton.v1.CreateTransactionResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string custom_id = 2;
 * @return {string}
 */
proto.ssn.asyncton.v1.CreateTransactionResponse.prototype.getCustomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.CreateTransactionResponse} returns this
 */
proto.ssn.asyncton.v1.CreateTransactionResponse.prototype.setCustomId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.asyncton.v1.GetTransactionResultsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.asyncton.v1.GetTransactionResultsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    customId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    minConfidence: jspb.Message.getFieldWithDefault(msg, 3, 0),
    maxResults: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.asyncton.v1.GetTransactionResultsRequest}
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.asyncton.v1.GetTransactionResultsRequest;
  return proto.ssn.asyncton.v1.GetTransactionResultsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.asyncton.v1.GetTransactionResultsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.asyncton.v1.GetTransactionResultsRequest}
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomId(value);
      break;
    case 3:
      var value = /** @type {!proto.ssn.type.Confidence.Level} */ (reader.readEnum());
      msg.setMinConfidence(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.asyncton.v1.GetTransactionResultsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.asyncton.v1.GetTransactionResultsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustomId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMinConfidence();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMaxResults();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionResultsRequest} returns this
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string custom_id = 2;
 * @return {string}
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.prototype.getCustomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionResultsRequest} returns this
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.prototype.setCustomId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ssn.type.Confidence.Level min_confidence = 3;
 * @return {!proto.ssn.type.Confidence.Level}
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.prototype.getMinConfidence = function() {
  return /** @type {!proto.ssn.type.Confidence.Level} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.ssn.type.Confidence.Level} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionResultsRequest} returns this
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.prototype.setMinConfidence = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 max_results = 4;
 * @return {number}
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.prototype.getMaxResults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionResultsRequest} returns this
 */
proto.ssn.asyncton.v1.GetTransactionResultsRequest.prototype.setMaxResults = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.asyncton.v1.GetTransactionResultsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.asyncton.v1.GetTransactionResultsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    annotationsList: jspb.Message.toObjectList(msg.getAnnotationsList(),
    proto.ssn.asyncton.v1.Annotation.toObject, includeInstance),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 3, ""),
    customId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.asyncton.v1.GetTransactionResultsResponse}
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.asyncton.v1.GetTransactionResultsResponse;
  return proto.ssn.asyncton.v1.GetTransactionResultsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.asyncton.v1.GetTransactionResultsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.asyncton.v1.GetTransactionResultsResponse}
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.ssn.asyncton.v1.Annotation;
      reader.readMessage(value,proto.ssn.asyncton.v1.Annotation.deserializeBinaryFromReader);
      msg.addAnnotations(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.asyncton.v1.GetTransactionResultsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.asyncton.v1.GetTransactionResultsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnnotationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ssn.asyncton.v1.Annotation.serializeBinaryToWriter
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCustomId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionResultsResponse} returns this
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Annotation annotations = 2;
 * @return {!Array<!proto.ssn.asyncton.v1.Annotation>}
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.prototype.getAnnotationsList = function() {
  return /** @type{!Array<!proto.ssn.asyncton.v1.Annotation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ssn.asyncton.v1.Annotation, 2));
};


/**
 * @param {!Array<!proto.ssn.asyncton.v1.Annotation>} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionResultsResponse} returns this
*/
proto.ssn.asyncton.v1.GetTransactionResultsResponse.prototype.setAnnotationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ssn.asyncton.v1.Annotation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.asyncton.v1.Annotation}
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.prototype.addAnnotations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ssn.asyncton.v1.Annotation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ssn.asyncton.v1.GetTransactionResultsResponse} returns this
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.prototype.clearAnnotationsList = function() {
  return this.setAnnotationsList([]);
};


/**
 * optional string error_message = 3;
 * @return {string}
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionResultsResponse} returns this
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string custom_id = 4;
 * @return {string}
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.prototype.getCustomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionResultsResponse} returns this
 */
proto.ssn.asyncton.v1.GetTransactionResultsResponse.prototype.setCustomId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ssn.asyncton.v1.Annotation.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.asyncton.v1.Annotation.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.asyncton.v1.Annotation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.asyncton.v1.Annotation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.Annotation.toObject = function(includeInstance, msg) {
  var f, obj = {
    feature: jspb.Message.getFieldWithDefault(msg, 1, ""),
    candidatesList: jspb.Message.toObjectList(msg.getCandidatesList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    purchaseLineCandidatesList: jspb.Message.toObjectList(msg.getPurchaseLineCandidatesList(),
    ssn_type_candidate_pb.PurchaseLineCandidate.toObject, includeInstance),
    answerCandidatesList: jspb.Message.toObjectList(msg.getAnswerCandidatesList(),
    ssn_type_candidate_pb.AnswerCandidate.toObject, includeInstance),
    textAnnotation: (f = msg.getTextAnnotation()) && ssn_type_text_annotation_pb.TextAnnotation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.asyncton.v1.Annotation}
 */
proto.ssn.asyncton.v1.Annotation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.asyncton.v1.Annotation;
  return proto.ssn.asyncton.v1.Annotation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.asyncton.v1.Annotation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.asyncton.v1.Annotation}
 */
proto.ssn.asyncton.v1.Annotation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeature(value);
      break;
    case 2:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addCandidates(value);
      break;
    case 3:
      var value = new ssn_type_candidate_pb.PurchaseLineCandidate;
      reader.readMessage(value,ssn_type_candidate_pb.PurchaseLineCandidate.deserializeBinaryFromReader);
      msg.addPurchaseLineCandidates(value);
      break;
    case 4:
      var value = new ssn_type_candidate_pb.AnswerCandidate;
      reader.readMessage(value,ssn_type_candidate_pb.AnswerCandidate.deserializeBinaryFromReader);
      msg.addAnswerCandidates(value);
      break;
    case 5:
      var value = new ssn_type_text_annotation_pb.TextAnnotation;
      reader.readMessage(value,ssn_type_text_annotation_pb.TextAnnotation.deserializeBinaryFromReader);
      msg.setTextAnnotation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.asyncton.v1.Annotation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.asyncton.v1.Annotation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.asyncton.v1.Annotation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.Annotation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeature();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCandidatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getPurchaseLineCandidatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      ssn_type_candidate_pb.PurchaseLineCandidate.serializeBinaryToWriter
    );
  }
  f = message.getAnswerCandidatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      ssn_type_candidate_pb.AnswerCandidate.serializeBinaryToWriter
    );
  }
  f = message.getTextAnnotation();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      ssn_type_text_annotation_pb.TextAnnotation.serializeBinaryToWriter
    );
  }
};


/**
 * optional string feature = 1;
 * @return {string}
 */
proto.ssn.asyncton.v1.Annotation.prototype.getFeature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.Annotation} returns this
 */
proto.ssn.asyncton.v1.Annotation.prototype.setFeature = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ssn.type.Candidate candidates = 2;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.ssn.asyncton.v1.Annotation.prototype.getCandidatesList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 2));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.ssn.asyncton.v1.Annotation} returns this
*/
proto.ssn.asyncton.v1.Annotation.prototype.setCandidatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.ssn.asyncton.v1.Annotation.prototype.addCandidates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ssn.asyncton.v1.Annotation} returns this
 */
proto.ssn.asyncton.v1.Annotation.prototype.clearCandidatesList = function() {
  return this.setCandidatesList([]);
};


/**
 * repeated ssn.type.PurchaseLineCandidate purchase_line_candidates = 3;
 * @return {!Array<!proto.ssn.type.PurchaseLineCandidate>}
 */
proto.ssn.asyncton.v1.Annotation.prototype.getPurchaseLineCandidatesList = function() {
  return /** @type{!Array<!proto.ssn.type.PurchaseLineCandidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.PurchaseLineCandidate, 3));
};


/**
 * @param {!Array<!proto.ssn.type.PurchaseLineCandidate>} value
 * @return {!proto.ssn.asyncton.v1.Annotation} returns this
*/
proto.ssn.asyncton.v1.Annotation.prototype.setPurchaseLineCandidatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ssn.type.PurchaseLineCandidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.PurchaseLineCandidate}
 */
proto.ssn.asyncton.v1.Annotation.prototype.addPurchaseLineCandidates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ssn.type.PurchaseLineCandidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ssn.asyncton.v1.Annotation} returns this
 */
proto.ssn.asyncton.v1.Annotation.prototype.clearPurchaseLineCandidatesList = function() {
  return this.setPurchaseLineCandidatesList([]);
};


/**
 * repeated ssn.type.AnswerCandidate answer_candidates = 4;
 * @return {!Array<!proto.ssn.type.AnswerCandidate>}
 */
proto.ssn.asyncton.v1.Annotation.prototype.getAnswerCandidatesList = function() {
  return /** @type{!Array<!proto.ssn.type.AnswerCandidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.AnswerCandidate, 4));
};


/**
 * @param {!Array<!proto.ssn.type.AnswerCandidate>} value
 * @return {!proto.ssn.asyncton.v1.Annotation} returns this
*/
proto.ssn.asyncton.v1.Annotation.prototype.setAnswerCandidatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ssn.type.AnswerCandidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.AnswerCandidate}
 */
proto.ssn.asyncton.v1.Annotation.prototype.addAnswerCandidates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ssn.type.AnswerCandidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ssn.asyncton.v1.Annotation} returns this
 */
proto.ssn.asyncton.v1.Annotation.prototype.clearAnswerCandidatesList = function() {
  return this.setAnswerCandidatesList([]);
};


/**
 * optional ssn.type.TextAnnotation text_annotation = 5;
 * @return {?proto.ssn.type.TextAnnotation}
 */
proto.ssn.asyncton.v1.Annotation.prototype.getTextAnnotation = function() {
  return /** @type{?proto.ssn.type.TextAnnotation} */ (
    jspb.Message.getWrapperField(this, ssn_type_text_annotation_pb.TextAnnotation, 5));
};


/**
 * @param {?proto.ssn.type.TextAnnotation|undefined} value
 * @return {!proto.ssn.asyncton.v1.Annotation} returns this
*/
proto.ssn.asyncton.v1.Annotation.prototype.setTextAnnotation = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ssn.asyncton.v1.Annotation} returns this
 */
proto.ssn.asyncton.v1.Annotation.prototype.clearTextAnnotation = function() {
  return this.setTextAnnotation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ssn.asyncton.v1.Annotation.prototype.hasTextAnnotation = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.asyncton.v1.GetTransactionStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.asyncton.v1.GetTransactionStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.asyncton.v1.GetTransactionStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.GetTransactionStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    customId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.asyncton.v1.GetTransactionStatusRequest}
 */
proto.ssn.asyncton.v1.GetTransactionStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.asyncton.v1.GetTransactionStatusRequest;
  return proto.ssn.asyncton.v1.GetTransactionStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.asyncton.v1.GetTransactionStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.asyncton.v1.GetTransactionStatusRequest}
 */
proto.ssn.asyncton.v1.GetTransactionStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.asyncton.v1.GetTransactionStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.asyncton.v1.GetTransactionStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.asyncton.v1.GetTransactionStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.GetTransactionStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustomId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ssn.asyncton.v1.GetTransactionStatusRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionStatusRequest} returns this
 */
proto.ssn.asyncton.v1.GetTransactionStatusRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string custom_id = 2;
 * @return {string}
 */
proto.ssn.asyncton.v1.GetTransactionStatusRequest.prototype.getCustomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionStatusRequest} returns this
 */
proto.ssn.asyncton.v1.GetTransactionStatusRequest.prototype.setCustomId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.asyncton.v1.GetTransactionStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.asyncton.v1.GetTransactionStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 3, ""),
    customId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.asyncton.v1.GetTransactionStatusResponse}
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.asyncton.v1.GetTransactionStatusResponse;
  return proto.ssn.asyncton.v1.GetTransactionStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.asyncton.v1.GetTransactionStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.asyncton.v1.GetTransactionStatusResponse}
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.asyncton.v1.GetTransactionStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.asyncton.v1.GetTransactionStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCustomId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionStatusResponse} returns this
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionStatusResponse} returns this
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string error_message = 3;
 * @return {string}
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionStatusResponse} returns this
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string custom_id = 4;
 * @return {string}
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.prototype.getCustomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.GetTransactionStatusResponse} returns this
 */
proto.ssn.asyncton.v1.GetTransactionStatusResponse.prototype.setCustomId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.asyncton.v1.DeleteTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.asyncton.v1.DeleteTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.asyncton.v1.DeleteTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.DeleteTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    customId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.asyncton.v1.DeleteTransactionRequest}
 */
proto.ssn.asyncton.v1.DeleteTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.asyncton.v1.DeleteTransactionRequest;
  return proto.ssn.asyncton.v1.DeleteTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.asyncton.v1.DeleteTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.asyncton.v1.DeleteTransactionRequest}
 */
proto.ssn.asyncton.v1.DeleteTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.asyncton.v1.DeleteTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.asyncton.v1.DeleteTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.asyncton.v1.DeleteTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.DeleteTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustomId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.ssn.asyncton.v1.DeleteTransactionRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.DeleteTransactionRequest} returns this
 */
proto.ssn.asyncton.v1.DeleteTransactionRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string custom_id = 2;
 * @return {string}
 */
proto.ssn.asyncton.v1.DeleteTransactionRequest.prototype.getCustomId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.DeleteTransactionRequest} returns this
 */
proto.ssn.asyncton.v1.DeleteTransactionRequest.prototype.setCustomId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.asyncton.v1.DeleteTagRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.asyncton.v1.DeleteTagRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.asyncton.v1.DeleteTagRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.DeleteTagRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tagName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.asyncton.v1.DeleteTagRequest}
 */
proto.ssn.asyncton.v1.DeleteTagRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.asyncton.v1.DeleteTagRequest;
  return proto.ssn.asyncton.v1.DeleteTagRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.asyncton.v1.DeleteTagRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.asyncton.v1.DeleteTagRequest}
 */
proto.ssn.asyncton.v1.DeleteTagRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTagName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.asyncton.v1.DeleteTagRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.asyncton.v1.DeleteTagRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.asyncton.v1.DeleteTagRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.asyncton.v1.DeleteTagRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTagName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string tag_name = 1;
 * @return {string}
 */
proto.ssn.asyncton.v1.DeleteTagRequest.prototype.getTagName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.asyncton.v1.DeleteTagRequest} returns this
 */
proto.ssn.asyncton.v1.DeleteTagRequest.prototype.setTagName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.ssn.asyncton.v1);
