// source: ssn/ocrservice/v1/ocrservice.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var ssn_annotator_v1_annotator_pb = require('../../../ssn/annotator/v1/annotator_pb.js');
goog.object.extend(proto, ssn_annotator_v1_annotator_pb);
var ssn_type_text_annotation_pb = require('../../../ssn/type/text_annotation_pb.js');
goog.object.extend(proto, ssn_type_text_annotation_pb);
goog.exportSymbol('proto.ssn.ocrservice.v1.AsyncCreateOperationRequest', null, global);
goog.exportSymbol('proto.ssn.ocrservice.v1.AsyncCreateOperationResponse', null, global);
goog.exportSymbol('proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest', null, global);
goog.exportSymbol('proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse', null, global);
goog.exportSymbol('proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest', null, global);
goog.exportSymbol('proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse', null, global);
goog.exportSymbol('proto.ssn.ocrservice.v1.GetTextAnnotationRequest', null, global);
goog.exportSymbol('proto.ssn.ocrservice.v1.GetTextAnnotationResponse', null, global);
goog.exportSymbol('proto.ssn.ocrservice.v1.OcrScanImageRequest', null, global);
goog.exportSymbol('proto.ssn.ocrservice.v1.OcrScanImageResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.ocrservice.v1.GetTextAnnotationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.ocrservice.v1.GetTextAnnotationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.ocrservice.v1.GetTextAnnotationRequest.displayName = 'proto.ssn.ocrservice.v1.GetTextAnnotationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.ocrservice.v1.GetTextAnnotationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.ocrservice.v1.GetTextAnnotationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.ocrservice.v1.GetTextAnnotationResponse.displayName = 'proto.ssn.ocrservice.v1.GetTextAnnotationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.ocrservice.v1.AsyncCreateOperationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.displayName = 'proto.ssn.ocrservice.v1.AsyncCreateOperationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.ocrservice.v1.AsyncCreateOperationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.ocrservice.v1.AsyncCreateOperationResponse.displayName = 'proto.ssn.ocrservice.v1.AsyncCreateOperationResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest.displayName = 'proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.displayName = 'proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest.displayName = 'proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.repeatedFields_, null);
};
goog.inherits(proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.displayName = 'proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.ocrservice.v1.OcrScanImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.ocrservice.v1.OcrScanImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.ocrservice.v1.OcrScanImageRequest.displayName = 'proto.ssn.ocrservice.v1.OcrScanImageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ssn.ocrservice.v1.OcrScanImageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ssn.ocrservice.v1.OcrScanImageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ssn.ocrservice.v1.OcrScanImageResponse.displayName = 'proto.ssn.ocrservice.v1.OcrScanImageResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.ocrservice.v1.GetTextAnnotationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.ocrservice.v1.GetTextAnnotationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.GetTextAnnotationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    document: (f = msg.getDocument()) && ssn_annotator_v1_annotator_pb.Document.toObject(includeInstance, f),
    preview: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.ocrservice.v1.GetTextAnnotationRequest}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.ocrservice.v1.GetTextAnnotationRequest;
  return proto.ssn.ocrservice.v1.GetTextAnnotationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.ocrservice.v1.GetTextAnnotationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.ocrservice.v1.GetTextAnnotationRequest}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new ssn_annotator_v1_annotator_pb.Document;
      reader.readMessage(value,ssn_annotator_v1_annotator_pb.Document.deserializeBinaryFromReader);
      msg.setDocument(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPreview(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.ocrservice.v1.GetTextAnnotationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.ocrservice.v1.GetTextAnnotationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.GetTextAnnotationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocument();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ssn_annotator_v1_annotator_pb.Document.serializeBinaryToWriter
    );
  }
  f = message.getPreview();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional ssn.annotator.v1.Document document = 2;
 * @return {?proto.ssn.annotator.v1.Document}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationRequest.prototype.getDocument = function() {
  return /** @type{?proto.ssn.annotator.v1.Document} */ (
    jspb.Message.getWrapperField(this, ssn_annotator_v1_annotator_pb.Document, 2));
};


/**
 * @param {?proto.ssn.annotator.v1.Document|undefined} value
 * @return {!proto.ssn.ocrservice.v1.GetTextAnnotationRequest} returns this
*/
proto.ssn.ocrservice.v1.GetTextAnnotationRequest.prototype.setDocument = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ssn.ocrservice.v1.GetTextAnnotationRequest} returns this
 */
proto.ssn.ocrservice.v1.GetTextAnnotationRequest.prototype.clearDocument = function() {
  return this.setDocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationRequest.prototype.hasDocument = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool preview = 3;
 * @return {boolean}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationRequest.prototype.getPreview = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ssn.ocrservice.v1.GetTextAnnotationRequest} returns this
 */
proto.ssn.ocrservice.v1.GetTextAnnotationRequest.prototype.setPreview = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.ocrservice.v1.GetTextAnnotationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.ocrservice.v1.GetTextAnnotationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    textAnnotation: (f = msg.getTextAnnotation()) && ssn_type_text_annotation_pb.TextAnnotation.toObject(includeInstance, f),
    image: (f = msg.getImage()) && google_protobuf_wrappers_pb.BytesValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.ocrservice.v1.GetTextAnnotationResponse}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.ocrservice.v1.GetTextAnnotationResponse;
  return proto.ssn.ocrservice.v1.GetTextAnnotationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.ocrservice.v1.GetTextAnnotationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.ocrservice.v1.GetTextAnnotationResponse}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new ssn_type_text_annotation_pb.TextAnnotation;
      reader.readMessage(value,ssn_type_text_annotation_pb.TextAnnotation.deserializeBinaryFromReader);
      msg.setTextAnnotation(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.BytesValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BytesValue.deserializeBinaryFromReader);
      msg.setImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.ocrservice.v1.GetTextAnnotationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.ocrservice.v1.GetTextAnnotationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTextAnnotation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      ssn_type_text_annotation_pb.TextAnnotation.serializeBinaryToWriter
    );
  }
  f = message.getImage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.BytesValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional ssn.type.TextAnnotation text_annotation = 2;
 * @return {?proto.ssn.type.TextAnnotation}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.prototype.getTextAnnotation = function() {
  return /** @type{?proto.ssn.type.TextAnnotation} */ (
    jspb.Message.getWrapperField(this, ssn_type_text_annotation_pb.TextAnnotation, 2));
};


/**
 * @param {?proto.ssn.type.TextAnnotation|undefined} value
 * @return {!proto.ssn.ocrservice.v1.GetTextAnnotationResponse} returns this
*/
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.prototype.setTextAnnotation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ssn.ocrservice.v1.GetTextAnnotationResponse} returns this
 */
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.prototype.clearTextAnnotation = function() {
  return this.setTextAnnotation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.prototype.hasTextAnnotation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.BytesValue image = 3;
 * @return {?proto.google.protobuf.BytesValue}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.prototype.getImage = function() {
  return /** @type{?proto.google.protobuf.BytesValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BytesValue, 3));
};


/**
 * @param {?proto.google.protobuf.BytesValue|undefined} value
 * @return {!proto.ssn.ocrservice.v1.GetTextAnnotationResponse} returns this
*/
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.prototype.setImage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ssn.ocrservice.v1.GetTextAnnotationResponse} returns this
 */
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.prototype.clearImage = function() {
  return this.setImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ssn.ocrservice.v1.GetTextAnnotationResponse.prototype.hasImage = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.ocrservice.v1.AsyncCreateOperationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    document: (f = msg.getDocument()) && ssn_annotator_v1_annotator_pb.Document.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.ocrservice.v1.AsyncCreateOperationRequest}
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.ocrservice.v1.AsyncCreateOperationRequest;
  return proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.ocrservice.v1.AsyncCreateOperationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.ocrservice.v1.AsyncCreateOperationRequest}
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ssn_annotator_v1_annotator_pb.Document;
      reader.readMessage(value,ssn_annotator_v1_annotator_pb.Document.deserializeBinaryFromReader);
      msg.setDocument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.ocrservice.v1.AsyncCreateOperationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ssn_annotator_v1_annotator_pb.Document.serializeBinaryToWriter
    );
  }
};


/**
 * optional ssn.annotator.v1.Document document = 1;
 * @return {?proto.ssn.annotator.v1.Document}
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.prototype.getDocument = function() {
  return /** @type{?proto.ssn.annotator.v1.Document} */ (
    jspb.Message.getWrapperField(this, ssn_annotator_v1_annotator_pb.Document, 1));
};


/**
 * @param {?proto.ssn.annotator.v1.Document|undefined} value
 * @return {!proto.ssn.ocrservice.v1.AsyncCreateOperationRequest} returns this
*/
proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.prototype.setDocument = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ssn.ocrservice.v1.AsyncCreateOperationRequest} returns this
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.prototype.clearDocument = function() {
  return this.setDocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationRequest.prototype.hasDocument = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.ocrservice.v1.AsyncCreateOperationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.ocrservice.v1.AsyncCreateOperationResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    operationName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.ocrservice.v1.AsyncCreateOperationResponse}
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.ocrservice.v1.AsyncCreateOperationResponse;
  return proto.ssn.ocrservice.v1.AsyncCreateOperationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.ocrservice.v1.AsyncCreateOperationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.ocrservice.v1.AsyncCreateOperationResponse}
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperationName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.ocrservice.v1.AsyncCreateOperationResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.ocrservice.v1.AsyncCreateOperationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperationName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string operation_name = 1;
 * @return {string}
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationResponse.prototype.getOperationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.ocrservice.v1.AsyncCreateOperationResponse} returns this
 */
proto.ssn.ocrservice.v1.AsyncCreateOperationResponse.prototype.setOperationName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    operationName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest;
  return proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperationName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperationName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string operation_name = 1;
 * @return {string}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest.prototype.getOperationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest} returns this
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusRequest.prototype.setOperationName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    operationName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    done: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse;
  return proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperationName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperationName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDone();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string operation_name = 1;
 * @return {string}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.prototype.getOperationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse} returns this
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.prototype.setOperationName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool done = 2;
 * @return {boolean}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.prototype.getDone = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse} returns this
 */
proto.ssn.ocrservice.v1.AsyncGetOperationStatusResponse.prototype.setDone = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    operationName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest;
  return proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperationName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperationName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string operation_name = 1;
 * @return {string}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest.prototype.getOperationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest} returns this
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultRequest.prototype.setOperationName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, ""),
    textAnnotationList: jspb.Message.toObjectList(msg.getTextAnnotationList(),
    ssn_type_text_annotation_pb.TextAnnotation.toObject, includeInstance),
    imageList: jspb.Message.toObjectList(msg.getImageList(),
    google_protobuf_wrappers_pb.BytesValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse;
  return proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 2:
      var value = new ssn_type_text_annotation_pb.TextAnnotation;
      reader.readMessage(value,ssn_type_text_annotation_pb.TextAnnotation.deserializeBinaryFromReader);
      msg.addTextAnnotation(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.BytesValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BytesValue.deserializeBinaryFromReader);
      msg.addImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTextAnnotationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      ssn_type_text_annotation_pb.TextAnnotation.serializeBinaryToWriter
    );
  }
  f = message.getImageList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      google_protobuf_wrappers_pb.BytesValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse} returns this
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ssn.type.TextAnnotation text_annotation = 2;
 * @return {!Array<!proto.ssn.type.TextAnnotation>}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.prototype.getTextAnnotationList = function() {
  return /** @type{!Array<!proto.ssn.type.TextAnnotation>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_text_annotation_pb.TextAnnotation, 2));
};


/**
 * @param {!Array<!proto.ssn.type.TextAnnotation>} value
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse} returns this
*/
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.prototype.setTextAnnotationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ssn.type.TextAnnotation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.TextAnnotation}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.prototype.addTextAnnotation = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ssn.type.TextAnnotation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse} returns this
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.prototype.clearTextAnnotationList = function() {
  return this.setTextAnnotationList([]);
};


/**
 * repeated google.protobuf.BytesValue image = 3;
 * @return {!Array<!proto.google.protobuf.BytesValue>}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.prototype.getImageList = function() {
  return /** @type{!Array<!proto.google.protobuf.BytesValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_wrappers_pb.BytesValue, 3));
};


/**
 * @param {!Array<!proto.google.protobuf.BytesValue>} value
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse} returns this
*/
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.prototype.setImageList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.protobuf.BytesValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.BytesValue}
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.prototype.addImage = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.protobuf.BytesValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse} returns this
 */
proto.ssn.ocrservice.v1.AsyncGetOperationResultResponse.prototype.clearImageList = function() {
  return this.setImageList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.ocrservice.v1.OcrScanImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.ocrservice.v1.OcrScanImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.ocrservice.v1.OcrScanImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.OcrScanImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.ocrservice.v1.OcrScanImageRequest}
 */
proto.ssn.ocrservice.v1.OcrScanImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.ocrservice.v1.OcrScanImageRequest;
  return proto.ssn.ocrservice.v1.OcrScanImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.ocrservice.v1.OcrScanImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.ocrservice.v1.OcrScanImageRequest}
 */
proto.ssn.ocrservice.v1.OcrScanImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.ocrservice.v1.OcrScanImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.ocrservice.v1.OcrScanImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.ocrservice.v1.OcrScanImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.OcrScanImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.ssn.ocrservice.v1.OcrScanImageRequest.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.ssn.ocrservice.v1.OcrScanImageRequest.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.ssn.ocrservice.v1.OcrScanImageRequest.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.ssn.ocrservice.v1.OcrScanImageRequest} returns this
 */
proto.ssn.ocrservice.v1.OcrScanImageRequest.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ssn.ocrservice.v1.OcrScanImageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ssn.ocrservice.v1.OcrScanImageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ssn.ocrservice.v1.OcrScanImageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.OcrScanImageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tessHocr: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ssn.ocrservice.v1.OcrScanImageResponse}
 */
proto.ssn.ocrservice.v1.OcrScanImageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ssn.ocrservice.v1.OcrScanImageResponse;
  return proto.ssn.ocrservice.v1.OcrScanImageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ssn.ocrservice.v1.OcrScanImageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ssn.ocrservice.v1.OcrScanImageResponse}
 */
proto.ssn.ocrservice.v1.OcrScanImageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTessHocr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ssn.ocrservice.v1.OcrScanImageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ssn.ocrservice.v1.OcrScanImageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ssn.ocrservice.v1.OcrScanImageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ssn.ocrservice.v1.OcrScanImageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTessHocr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string tess_hocr = 1;
 * @return {string}
 */
proto.ssn.ocrservice.v1.OcrScanImageResponse.prototype.getTessHocr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ssn.ocrservice.v1.OcrScanImageResponse} returns this
 */
proto.ssn.ocrservice.v1.OcrScanImageResponse.prototype.setTessHocr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.ssn.ocrservice.v1);
