/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
var tensorflow_serving_config_logging_config_pb = require('../../tensorflow_serving/config/logging_config_pb.js');
var tensorflow_serving_sources_storage_path_file_system_storage_path_source_pb = require('../../tensorflow_serving/sources/storage_path/file_system_storage_path_source_pb.js');
goog.exportSymbol('proto.tensorflow.serving.ModelConfig', null, global);
goog.exportSymbol('proto.tensorflow.serving.ModelConfigList', null, global);
goog.exportSymbol('proto.tensorflow.serving.ModelServerConfig', null, global);
goog.exportSymbol('proto.tensorflow.serving.ModelType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.serving.ModelConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tensorflow.serving.ModelConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.serving.ModelConfig.displayName = 'proto.tensorflow.serving.ModelConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.serving.ModelConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.serving.ModelConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.serving.ModelConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.ModelConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    basePath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    modelType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    modelPlatform: jspb.Message.getFieldWithDefault(msg, 4, ""),
    modelVersionPolicy: (f = msg.getModelVersionPolicy()) && tensorflow_serving_sources_storage_path_file_system_storage_path_source_pb.FileSystemStoragePathSourceConfig.ServableVersionPolicy.toObject(includeInstance, f),
    versionLabelsMap: (f = msg.getVersionLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    loggingConfig: (f = msg.getLoggingConfig()) && tensorflow_serving_config_logging_config_pb.LoggingConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.serving.ModelConfig}
 */
proto.tensorflow.serving.ModelConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.serving.ModelConfig;
  return proto.tensorflow.serving.ModelConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.serving.ModelConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.serving.ModelConfig}
 */
proto.tensorflow.serving.ModelConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBasePath(value);
      break;
    case 3:
      var value = /** @type {!proto.tensorflow.serving.ModelType} */ (reader.readEnum());
      msg.setModelType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelPlatform(value);
      break;
    case 7:
      var value = new tensorflow_serving_sources_storage_path_file_system_storage_path_source_pb.FileSystemStoragePathSourceConfig.ServableVersionPolicy;
      reader.readMessage(value,tensorflow_serving_sources_storage_path_file_system_storage_path_source_pb.FileSystemStoragePathSourceConfig.ServableVersionPolicy.deserializeBinaryFromReader);
      msg.setModelVersionPolicy(value);
      break;
    case 8:
      var value = msg.getVersionLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64, null, "");
         });
      break;
    case 6:
      var value = new tensorflow_serving_config_logging_config_pb.LoggingConfig;
      reader.readMessage(value,tensorflow_serving_config_logging_config_pb.LoggingConfig.deserializeBinaryFromReader);
      msg.setLoggingConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.serving.ModelConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.serving.ModelConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.serving.ModelConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.ModelConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBasePath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getModelType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getModelPlatform();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getModelVersionPolicy();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      tensorflow_serving_sources_storage_path_file_system_storage_path_source_pb.FileSystemStoragePathSourceConfig.ServableVersionPolicy.serializeBinaryToWriter
    );
  }
  f = message.getVersionLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);
  }
  f = message.getLoggingConfig();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      tensorflow_serving_config_logging_config_pb.LoggingConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.tensorflow.serving.ModelConfig.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.tensorflow.serving.ModelConfig.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string base_path = 2;
 * @return {string}
 */
proto.tensorflow.serving.ModelConfig.prototype.getBasePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.tensorflow.serving.ModelConfig.prototype.setBasePath = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ModelType model_type = 3;
 * @return {!proto.tensorflow.serving.ModelType}
 */
proto.tensorflow.serving.ModelConfig.prototype.getModelType = function() {
  return /** @type {!proto.tensorflow.serving.ModelType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.tensorflow.serving.ModelType} value */
proto.tensorflow.serving.ModelConfig.prototype.setModelType = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string model_platform = 4;
 * @return {string}
 */
proto.tensorflow.serving.ModelConfig.prototype.getModelPlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.tensorflow.serving.ModelConfig.prototype.setModelPlatform = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional FileSystemStoragePathSourceConfig.ServableVersionPolicy model_version_policy = 7;
 * @return {?proto.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy}
 */
proto.tensorflow.serving.ModelConfig.prototype.getModelVersionPolicy = function() {
  return /** @type{?proto.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy} */ (
    jspb.Message.getWrapperField(this, tensorflow_serving_sources_storage_path_file_system_storage_path_source_pb.FileSystemStoragePathSourceConfig.ServableVersionPolicy, 7));
};


/** @param {?proto.tensorflow.serving.FileSystemStoragePathSourceConfig.ServableVersionPolicy|undefined} value */
proto.tensorflow.serving.ModelConfig.prototype.setModelVersionPolicy = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.tensorflow.serving.ModelConfig.prototype.clearModelVersionPolicy = function() {
  this.setModelVersionPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.ModelConfig.prototype.hasModelVersionPolicy = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * map<string, int64> version_labels = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.tensorflow.serving.ModelConfig.prototype.getVersionLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


proto.tensorflow.serving.ModelConfig.prototype.clearVersionLabelsMap = function() {
  this.getVersionLabelsMap().clear();
};


/**
 * optional LoggingConfig logging_config = 6;
 * @return {?proto.tensorflow.serving.LoggingConfig}
 */
proto.tensorflow.serving.ModelConfig.prototype.getLoggingConfig = function() {
  return /** @type{?proto.tensorflow.serving.LoggingConfig} */ (
    jspb.Message.getWrapperField(this, tensorflow_serving_config_logging_config_pb.LoggingConfig, 6));
};


/** @param {?proto.tensorflow.serving.LoggingConfig|undefined} value */
proto.tensorflow.serving.ModelConfig.prototype.setLoggingConfig = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.tensorflow.serving.ModelConfig.prototype.clearLoggingConfig = function() {
  this.setLoggingConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.ModelConfig.prototype.hasLoggingConfig = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.serving.ModelConfigList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tensorflow.serving.ModelConfigList.repeatedFields_, null);
};
goog.inherits(proto.tensorflow.serving.ModelConfigList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.serving.ModelConfigList.displayName = 'proto.tensorflow.serving.ModelConfigList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tensorflow.serving.ModelConfigList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.serving.ModelConfigList.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.serving.ModelConfigList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.serving.ModelConfigList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.ModelConfigList.toObject = function(includeInstance, msg) {
  var f, obj = {
    configList: jspb.Message.toObjectList(msg.getConfigList(),
    proto.tensorflow.serving.ModelConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.serving.ModelConfigList}
 */
proto.tensorflow.serving.ModelConfigList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.serving.ModelConfigList;
  return proto.tensorflow.serving.ModelConfigList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.serving.ModelConfigList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.serving.ModelConfigList}
 */
proto.tensorflow.serving.ModelConfigList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tensorflow.serving.ModelConfig;
      reader.readMessage(value,proto.tensorflow.serving.ModelConfig.deserializeBinaryFromReader);
      msg.addConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.serving.ModelConfigList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.serving.ModelConfigList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.serving.ModelConfigList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.ModelConfigList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfigList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tensorflow.serving.ModelConfig.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ModelConfig config = 1;
 * @return {!Array<!proto.tensorflow.serving.ModelConfig>}
 */
proto.tensorflow.serving.ModelConfigList.prototype.getConfigList = function() {
  return /** @type{!Array<!proto.tensorflow.serving.ModelConfig>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tensorflow.serving.ModelConfig, 1));
};


/** @param {!Array<!proto.tensorflow.serving.ModelConfig>} value */
proto.tensorflow.serving.ModelConfigList.prototype.setConfigList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tensorflow.serving.ModelConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tensorflow.serving.ModelConfig}
 */
proto.tensorflow.serving.ModelConfigList.prototype.addConfig = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tensorflow.serving.ModelConfig, opt_index);
};


proto.tensorflow.serving.ModelConfigList.prototype.clearConfigList = function() {
  this.setConfigList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tensorflow.serving.ModelServerConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tensorflow.serving.ModelServerConfig.oneofGroups_);
};
goog.inherits(proto.tensorflow.serving.ModelServerConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.tensorflow.serving.ModelServerConfig.displayName = 'proto.tensorflow.serving.ModelServerConfig';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.tensorflow.serving.ModelServerConfig.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.tensorflow.serving.ModelServerConfig.ConfigCase = {
  CONFIG_NOT_SET: 0,
  MODEL_CONFIG_LIST: 1,
  CUSTOM_MODEL_CONFIG: 2
};

/**
 * @return {proto.tensorflow.serving.ModelServerConfig.ConfigCase}
 */
proto.tensorflow.serving.ModelServerConfig.prototype.getConfigCase = function() {
  return /** @type {proto.tensorflow.serving.ModelServerConfig.ConfigCase} */(jspb.Message.computeOneofCase(this, proto.tensorflow.serving.ModelServerConfig.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tensorflow.serving.ModelServerConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.tensorflow.serving.ModelServerConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tensorflow.serving.ModelServerConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.ModelServerConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelConfigList: (f = msg.getModelConfigList()) && proto.tensorflow.serving.ModelConfigList.toObject(includeInstance, f),
    customModelConfig: (f = msg.getCustomModelConfig()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tensorflow.serving.ModelServerConfig}
 */
proto.tensorflow.serving.ModelServerConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tensorflow.serving.ModelServerConfig;
  return proto.tensorflow.serving.ModelServerConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tensorflow.serving.ModelServerConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tensorflow.serving.ModelServerConfig}
 */
proto.tensorflow.serving.ModelServerConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tensorflow.serving.ModelConfigList;
      reader.readMessage(value,proto.tensorflow.serving.ModelConfigList.deserializeBinaryFromReader);
      msg.setModelConfigList(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setCustomModelConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tensorflow.serving.ModelServerConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tensorflow.serving.ModelServerConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tensorflow.serving.ModelServerConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tensorflow.serving.ModelServerConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelConfigList();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tensorflow.serving.ModelConfigList.serializeBinaryToWriter
    );
  }
  f = message.getCustomModelConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional ModelConfigList model_config_list = 1;
 * @return {?proto.tensorflow.serving.ModelConfigList}
 */
proto.tensorflow.serving.ModelServerConfig.prototype.getModelConfigList = function() {
  return /** @type{?proto.tensorflow.serving.ModelConfigList} */ (
    jspb.Message.getWrapperField(this, proto.tensorflow.serving.ModelConfigList, 1));
};


/** @param {?proto.tensorflow.serving.ModelConfigList|undefined} value */
proto.tensorflow.serving.ModelServerConfig.prototype.setModelConfigList = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.tensorflow.serving.ModelServerConfig.oneofGroups_[0], value);
};


proto.tensorflow.serving.ModelServerConfig.prototype.clearModelConfigList = function() {
  this.setModelConfigList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.ModelServerConfig.prototype.hasModelConfigList = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Any custom_model_config = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.tensorflow.serving.ModelServerConfig.prototype.getCustomModelConfig = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/** @param {?proto.google.protobuf.Any|undefined} value */
proto.tensorflow.serving.ModelServerConfig.prototype.setCustomModelConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.tensorflow.serving.ModelServerConfig.oneofGroups_[0], value);
};


proto.tensorflow.serving.ModelServerConfig.prototype.clearCustomModelConfig = function() {
  this.setCustomModelConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.tensorflow.serving.ModelServerConfig.prototype.hasCustomModelConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.tensorflow.serving.ModelType = {
  MODEL_TYPE_UNSPECIFIED: 0,
  TENSORFLOW: 1,
  OTHER: 2
};

goog.object.extend(exports, proto.tensorflow.serving);
