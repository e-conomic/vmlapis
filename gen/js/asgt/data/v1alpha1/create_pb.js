/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var asgt_type_data_pb = require('../../../asgt/type/data_pb.js');
var asgt_type_retention_policy_pb = require('../../../asgt/type/retention_policy_pb.js');
var asgt_type_target_value_pb = require('../../../asgt/type/target_value_pb.js');
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.AppendDataRequest', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.CreateRequest', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.Sample', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.Sample = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.Sample.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.Sample, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.Sample.displayName = 'proto.asgt.dataservice.v1alpha1.Sample';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.Sample.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.Sample.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.Sample.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.Sample} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.Sample.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: (f = msg.getData()) && asgt_type_data_pb.Data.toObject(includeInstance, f),
    targetValuesList: jspb.Message.toObjectList(msg.getTargetValuesList(),
    asgt_type_target_value_pb.TargetValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.Sample}
 */
proto.asgt.dataservice.v1alpha1.Sample.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.Sample;
  return proto.asgt.dataservice.v1alpha1.Sample.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.Sample} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.Sample}
 */
proto.asgt.dataservice.v1alpha1.Sample.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new asgt_type_data_pb.Data;
      reader.readMessage(value,asgt_type_data_pb.Data.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    case 2:
      var value = new asgt_type_target_value_pb.TargetValue;
      reader.readMessage(value,asgt_type_target_value_pb.TargetValue.deserializeBinaryFromReader);
      msg.addTargetValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.Sample.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.Sample.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.Sample} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.Sample.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      asgt_type_data_pb.Data.serializeBinaryToWriter
    );
  }
  f = message.getTargetValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      asgt_type_target_value_pb.TargetValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional asgt.type.Data data = 1;
 * @return {?proto.asgt.type.Data}
 */
proto.asgt.dataservice.v1alpha1.Sample.prototype.getData = function() {
  return /** @type{?proto.asgt.type.Data} */ (
    jspb.Message.getWrapperField(this, asgt_type_data_pb.Data, 1));
};


/** @param {?proto.asgt.type.Data|undefined} value */
proto.asgt.dataservice.v1alpha1.Sample.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.asgt.dataservice.v1alpha1.Sample.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.Sample.prototype.hasData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated asgt.type.TargetValue target_values = 2;
 * @return {!Array<!proto.asgt.type.TargetValue>}
 */
proto.asgt.dataservice.v1alpha1.Sample.prototype.getTargetValuesList = function() {
  return /** @type{!Array<!proto.asgt.type.TargetValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, asgt_type_target_value_pb.TargetValue, 2));
};


/** @param {!Array<!proto.asgt.type.TargetValue>} value */
proto.asgt.dataservice.v1alpha1.Sample.prototype.setTargetValuesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.asgt.type.TargetValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.type.TargetValue}
 */
proto.asgt.dataservice.v1alpha1.Sample.prototype.addTargetValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.asgt.type.TargetValue, opt_index);
};


proto.asgt.dataservice.v1alpha1.Sample.prototype.clearTargetValuesList = function() {
  this.setTargetValuesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.CreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.CreateRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.CreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.CreateRequest.displayName = 'proto.asgt.dataservice.v1alpha1.CreateRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.repeatedFields_ = [3,6,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.CreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.CreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    datasetName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    datasetType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 3),
    targetsList: jspb.Message.getRepeatedField(msg, 6),
    samplesList: jspb.Message.toObjectList(msg.getSamplesList(),
    proto.asgt.dataservice.v1alpha1.Sample.toObject, includeInstance),
    retentionPolicy: (f = msg.getRetentionPolicy()) && asgt_type_retention_policy_pb.RetentionPolicy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.CreateRequest}
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.CreateRequest;
  return proto.asgt.dataservice.v1alpha1.CreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.CreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.CreateRequest}
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addTargets(value);
      break;
    case 4:
      var value = new proto.asgt.dataservice.v1alpha1.Sample;
      reader.readMessage(value,proto.asgt.dataservice.v1alpha1.Sample.deserializeBinaryFromReader);
      msg.addSamples(value);
      break;
    case 5:
      var value = new asgt_type_retention_policy_pb.RetentionPolicy;
      reader.readMessage(value,asgt_type_retention_policy_pb.RetentionPolicy.deserializeBinaryFromReader);
      msg.setRetentionPolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.CreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.CreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatasetName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDatasetType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getTargetsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getSamplesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.asgt.dataservice.v1alpha1.Sample.serializeBinaryToWriter
    );
  }
  f = message.getRetentionPolicy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      asgt_type_retention_policy_pb.RetentionPolicy.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dataset_name = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.getDatasetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.setDatasetName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string dataset_type = 2;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.getDatasetType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.setDatasetType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string tags = 3;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * repeated string targets = 6;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.getTargetsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.setTargetsList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.addTargets = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.clearTargetsList = function() {
  this.setTargetsList([]);
};


/**
 * repeated Sample samples = 4;
 * @return {!Array<!proto.asgt.dataservice.v1alpha1.Sample>}
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.getSamplesList = function() {
  return /** @type{!Array<!proto.asgt.dataservice.v1alpha1.Sample>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.asgt.dataservice.v1alpha1.Sample, 4));
};


/** @param {!Array<!proto.asgt.dataservice.v1alpha1.Sample>} value */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.setSamplesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.asgt.dataservice.v1alpha1.Sample=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.dataservice.v1alpha1.Sample}
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.addSamples = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.asgt.dataservice.v1alpha1.Sample, opt_index);
};


proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.clearSamplesList = function() {
  this.setSamplesList([]);
};


/**
 * optional asgt.type.RetentionPolicy retention_policy = 5;
 * @return {?proto.asgt.type.RetentionPolicy}
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.getRetentionPolicy = function() {
  return /** @type{?proto.asgt.type.RetentionPolicy} */ (
    jspb.Message.getWrapperField(this, asgt_type_retention_policy_pb.RetentionPolicy, 5));
};


/** @param {?proto.asgt.type.RetentionPolicy|undefined} value */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.setRetentionPolicy = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.clearRetentionPolicy = function() {
  this.setRetentionPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.CreateRequest.prototype.hasRetentionPolicy = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.AppendDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.AppendDataRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.AppendDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.AppendDataRequest.displayName = 'proto.asgt.dataservice.v1alpha1.AppendDataRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.AppendDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.AppendDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    datasetName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    datasetType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    samplesList: jspb.Message.toObjectList(msg.getSamplesList(),
    proto.asgt.dataservice.v1alpha1.Sample.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.AppendDataRequest}
 */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.AppendDataRequest;
  return proto.asgt.dataservice.v1alpha1.AppendDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.AppendDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.AppendDataRequest}
 */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetType(value);
      break;
    case 3:
      var value = new proto.asgt.dataservice.v1alpha1.Sample;
      reader.readMessage(value,proto.asgt.dataservice.v1alpha1.Sample.deserializeBinaryFromReader);
      msg.addSamples(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.AppendDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.AppendDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatasetName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDatasetType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSamplesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.asgt.dataservice.v1alpha1.Sample.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dataset_name = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.prototype.getDatasetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.prototype.setDatasetName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string dataset_type = 2;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.prototype.getDatasetType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.prototype.setDatasetType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Sample samples = 3;
 * @return {!Array<!proto.asgt.dataservice.v1alpha1.Sample>}
 */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.prototype.getSamplesList = function() {
  return /** @type{!Array<!proto.asgt.dataservice.v1alpha1.Sample>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.asgt.dataservice.v1alpha1.Sample, 3));
};


/** @param {!Array<!proto.asgt.dataservice.v1alpha1.Sample>} value */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.prototype.setSamplesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.asgt.dataservice.v1alpha1.Sample=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.dataservice.v1alpha1.Sample}
 */
proto.asgt.dataservice.v1alpha1.AppendDataRequest.prototype.addSamples = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.asgt.dataservice.v1alpha1.Sample, opt_index);
};


proto.asgt.dataservice.v1alpha1.AppendDataRequest.prototype.clearSamplesList = function() {
  this.setSamplesList([]);
};


goog.object.extend(exports, proto.asgt.dataservice.v1alpha1);
