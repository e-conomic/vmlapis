/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var asgt_type_bank_transaction_pb = require('../../../asgt/type/bank_transaction_pb.js');
var asgt_type_invoice_line_pb = require('../../../asgt/type/invoice_line_pb.js');
var asgt_type_model_pb = require('../../../asgt/type/model_pb.js');
var asgt_type_prediction_pb = require('../../../asgt/type/prediction_pb.js');
var asgt_type_scanned_invoice_pb = require('../../../asgt/type/scanned_invoice_pb.js');
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.exportSymbol('proto.asgt.jester.v1alpha1.BankRequest', null, global);
goog.exportSymbol('proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest', null, global);
goog.exportSymbol('proto.asgt.jester.v1alpha1.ScannedInvoiceRequest', null, global);
goog.exportSymbol('proto.asgt.jester.v1alpha1.SuggestionOptions', null, global);
goog.exportSymbol('proto.asgt.jester.v1alpha1.SuggestionsResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.jester.v1alpha1.SuggestionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.jester.v1alpha1.SuggestionsResponse.repeatedFields_, null);
};
goog.inherits(proto.asgt.jester.v1alpha1.SuggestionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.jester.v1alpha1.SuggestionsResponse.displayName = 'proto.asgt.jester.v1alpha1.SuggestionsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.jester.v1alpha1.SuggestionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.jester.v1alpha1.SuggestionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.jester.v1alpha1.SuggestionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.jester.v1alpha1.SuggestionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.jester.v1alpha1.SuggestionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    predictionsList: jspb.Message.toObjectList(msg.getPredictionsList(),
    asgt_type_prediction_pb.Prediction.toObject, includeInstance),
    model: (f = msg.getModel()) && asgt_type_model_pb.Model.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.jester.v1alpha1.SuggestionsResponse}
 */
proto.asgt.jester.v1alpha1.SuggestionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.jester.v1alpha1.SuggestionsResponse;
  return proto.asgt.jester.v1alpha1.SuggestionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.jester.v1alpha1.SuggestionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.jester.v1alpha1.SuggestionsResponse}
 */
proto.asgt.jester.v1alpha1.SuggestionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new asgt_type_prediction_pb.Prediction;
      reader.readMessage(value,asgt_type_prediction_pb.Prediction.deserializeBinaryFromReader);
      msg.addPredictions(value);
      break;
    case 2:
      var value = new asgt_type_model_pb.Model;
      reader.readMessage(value,asgt_type_model_pb.Model.deserializeBinaryFromReader);
      msg.setModel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.jester.v1alpha1.SuggestionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.jester.v1alpha1.SuggestionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.jester.v1alpha1.SuggestionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.jester.v1alpha1.SuggestionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPredictionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      asgt_type_prediction_pb.Prediction.serializeBinaryToWriter
    );
  }
  f = message.getModel();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      asgt_type_model_pb.Model.serializeBinaryToWriter
    );
  }
};


/**
 * repeated asgt.type.Prediction predictions = 1;
 * @return {!Array<!proto.asgt.type.Prediction>}
 */
proto.asgt.jester.v1alpha1.SuggestionsResponse.prototype.getPredictionsList = function() {
  return /** @type{!Array<!proto.asgt.type.Prediction>} */ (
    jspb.Message.getRepeatedWrapperField(this, asgt_type_prediction_pb.Prediction, 1));
};


/** @param {!Array<!proto.asgt.type.Prediction>} value */
proto.asgt.jester.v1alpha1.SuggestionsResponse.prototype.setPredictionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.asgt.type.Prediction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.type.Prediction}
 */
proto.asgt.jester.v1alpha1.SuggestionsResponse.prototype.addPredictions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.asgt.type.Prediction, opt_index);
};


proto.asgt.jester.v1alpha1.SuggestionsResponse.prototype.clearPredictionsList = function() {
  this.setPredictionsList([]);
};


/**
 * optional asgt.type.Model model = 2;
 * @return {?proto.asgt.type.Model}
 */
proto.asgt.jester.v1alpha1.SuggestionsResponse.prototype.getModel = function() {
  return /** @type{?proto.asgt.type.Model} */ (
    jspb.Message.getWrapperField(this, asgt_type_model_pb.Model, 2));
};


/** @param {?proto.asgt.type.Model|undefined} value */
proto.asgt.jester.v1alpha1.SuggestionsResponse.prototype.setModel = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.asgt.jester.v1alpha1.SuggestionsResponse.prototype.clearModel = function() {
  this.setModel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.jester.v1alpha1.SuggestionsResponse.prototype.hasModel = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.jester.v1alpha1.SuggestionOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.asgt.jester.v1alpha1.SuggestionOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.jester.v1alpha1.SuggestionOptions.displayName = 'proto.asgt.jester.v1alpha1.SuggestionOptions';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.jester.v1alpha1.SuggestionOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.jester.v1alpha1.SuggestionOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.jester.v1alpha1.SuggestionOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.jester.v1alpha1.SuggestionOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    suggestionLimit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    minConfidence: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.jester.v1alpha1.SuggestionOptions}
 */
proto.asgt.jester.v1alpha1.SuggestionOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.jester.v1alpha1.SuggestionOptions;
  return proto.asgt.jester.v1alpha1.SuggestionOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.jester.v1alpha1.SuggestionOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.jester.v1alpha1.SuggestionOptions}
 */
proto.asgt.jester.v1alpha1.SuggestionOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSuggestionLimit(value);
      break;
    case 2:
      var value = /** @type {!proto.asgt.type.Confidence.Level} */ (reader.readEnum());
      msg.setMinConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.jester.v1alpha1.SuggestionOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.jester.v1alpha1.SuggestionOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.jester.v1alpha1.SuggestionOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.jester.v1alpha1.SuggestionOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuggestionLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMinConfidence();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional int32 suggestion_limit = 1;
 * @return {number}
 */
proto.asgt.jester.v1alpha1.SuggestionOptions.prototype.getSuggestionLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.asgt.jester.v1alpha1.SuggestionOptions.prototype.setSuggestionLimit = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional asgt.type.Confidence.Level min_confidence = 2;
 * @return {!proto.asgt.type.Confidence.Level}
 */
proto.asgt.jester.v1alpha1.SuggestionOptions.prototype.getMinConfidence = function() {
  return /** @type {!proto.asgt.type.Confidence.Level} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.asgt.type.Confidence.Level} value */
proto.asgt.jester.v1alpha1.SuggestionOptions.prototype.setMinConfidence = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.jester.v1alpha1.ScannedInvoiceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.displayName = 'proto.asgt.jester.v1alpha1.ScannedInvoiceRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.jester.v1alpha1.ScannedInvoiceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    asgt_type_scanned_invoice_pb.ScannedInvoice.toObject, includeInstance),
    datasetName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && proto.asgt.jester.v1alpha1.SuggestionOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.jester.v1alpha1.ScannedInvoiceRequest}
 */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.jester.v1alpha1.ScannedInvoiceRequest;
  return proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.jester.v1alpha1.ScannedInvoiceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.jester.v1alpha1.ScannedInvoiceRequest}
 */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new asgt_type_scanned_invoice_pb.ScannedInvoice;
      reader.readMessage(value,asgt_type_scanned_invoice_pb.ScannedInvoice.deserializeBinaryFromReader);
      msg.addInputs(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetName(value);
      break;
    case 3:
      var value = new proto.asgt.jester.v1alpha1.SuggestionOptions;
      reader.readMessage(value,proto.asgt.jester.v1alpha1.SuggestionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.jester.v1alpha1.ScannedInvoiceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      asgt_type_scanned_invoice_pb.ScannedInvoice.serializeBinaryToWriter
    );
  }
  f = message.getDatasetName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.asgt.jester.v1alpha1.SuggestionOptions.serializeBinaryToWriter
    );
  }
};


/**
 * repeated asgt.type.ScannedInvoice inputs = 1;
 * @return {!Array<!proto.asgt.type.ScannedInvoice>}
 */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.prototype.getInputsList = function() {
  return /** @type{!Array<!proto.asgt.type.ScannedInvoice>} */ (
    jspb.Message.getRepeatedWrapperField(this, asgt_type_scanned_invoice_pb.ScannedInvoice, 1));
};


/** @param {!Array<!proto.asgt.type.ScannedInvoice>} value */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.prototype.setInputsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.asgt.type.ScannedInvoice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.type.ScannedInvoice}
 */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.prototype.addInputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.asgt.type.ScannedInvoice, opt_index);
};


proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.prototype.clearInputsList = function() {
  this.setInputsList([]);
};


/**
 * optional string dataset_name = 2;
 * @return {string}
 */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.prototype.getDatasetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.prototype.setDatasetName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SuggestionOptions options = 3;
 * @return {?proto.asgt.jester.v1alpha1.SuggestionOptions}
 */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.prototype.getOptions = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.SuggestionOptions} */ (
    jspb.Message.getWrapperField(this, proto.asgt.jester.v1alpha1.SuggestionOptions, 3));
};


/** @param {?proto.asgt.jester.v1alpha1.SuggestionOptions|undefined} value */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.displayName = 'proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    asgt_type_invoice_line_pb.InvoiceLine.toObject, includeInstance),
    datasetName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && proto.asgt.jester.v1alpha1.SuggestionOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest}
 */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest;
  return proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest}
 */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new asgt_type_invoice_line_pb.InvoiceLine;
      reader.readMessage(value,asgt_type_invoice_line_pb.InvoiceLine.deserializeBinaryFromReader);
      msg.addInputs(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetName(value);
      break;
    case 3:
      var value = new proto.asgt.jester.v1alpha1.SuggestionOptions;
      reader.readMessage(value,proto.asgt.jester.v1alpha1.SuggestionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      asgt_type_invoice_line_pb.InvoiceLine.serializeBinaryToWriter
    );
  }
  f = message.getDatasetName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.asgt.jester.v1alpha1.SuggestionOptions.serializeBinaryToWriter
    );
  }
};


/**
 * repeated asgt.type.InvoiceLine inputs = 1;
 * @return {!Array<!proto.asgt.type.InvoiceLine>}
 */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.prototype.getInputsList = function() {
  return /** @type{!Array<!proto.asgt.type.InvoiceLine>} */ (
    jspb.Message.getRepeatedWrapperField(this, asgt_type_invoice_line_pb.InvoiceLine, 1));
};


/** @param {!Array<!proto.asgt.type.InvoiceLine>} value */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.prototype.setInputsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.asgt.type.InvoiceLine=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.type.InvoiceLine}
 */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.prototype.addInputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.asgt.type.InvoiceLine, opt_index);
};


proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.prototype.clearInputsList = function() {
  this.setInputsList([]);
};


/**
 * optional string dataset_name = 2;
 * @return {string}
 */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.prototype.getDatasetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.prototype.setDatasetName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SuggestionOptions options = 3;
 * @return {?proto.asgt.jester.v1alpha1.SuggestionOptions}
 */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.prototype.getOptions = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.SuggestionOptions} */ (
    jspb.Message.getWrapperField(this, proto.asgt.jester.v1alpha1.SuggestionOptions, 3));
};


/** @param {?proto.asgt.jester.v1alpha1.SuggestionOptions|undefined} value */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.jester.v1alpha1.BankRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.jester.v1alpha1.BankRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.jester.v1alpha1.BankRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.jester.v1alpha1.BankRequest.displayName = 'proto.asgt.jester.v1alpha1.BankRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.jester.v1alpha1.BankRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.jester.v1alpha1.BankRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.jester.v1alpha1.BankRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.jester.v1alpha1.BankRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.jester.v1alpha1.BankRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputsList: jspb.Message.toObjectList(msg.getInputsList(),
    asgt_type_bank_transaction_pb.BankTransaction.toObject, includeInstance),
    datasetName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && proto.asgt.jester.v1alpha1.SuggestionOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.jester.v1alpha1.BankRequest}
 */
proto.asgt.jester.v1alpha1.BankRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.jester.v1alpha1.BankRequest;
  return proto.asgt.jester.v1alpha1.BankRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.jester.v1alpha1.BankRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.jester.v1alpha1.BankRequest}
 */
proto.asgt.jester.v1alpha1.BankRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new asgt_type_bank_transaction_pb.BankTransaction;
      reader.readMessage(value,asgt_type_bank_transaction_pb.BankTransaction.deserializeBinaryFromReader);
      msg.addInputs(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetName(value);
      break;
    case 3:
      var value = new proto.asgt.jester.v1alpha1.SuggestionOptions;
      reader.readMessage(value,proto.asgt.jester.v1alpha1.SuggestionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.jester.v1alpha1.BankRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.jester.v1alpha1.BankRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.jester.v1alpha1.BankRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.jester.v1alpha1.BankRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      asgt_type_bank_transaction_pb.BankTransaction.serializeBinaryToWriter
    );
  }
  f = message.getDatasetName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.asgt.jester.v1alpha1.SuggestionOptions.serializeBinaryToWriter
    );
  }
};


/**
 * repeated asgt.type.BankTransaction inputs = 1;
 * @return {!Array<!proto.asgt.type.BankTransaction>}
 */
proto.asgt.jester.v1alpha1.BankRequest.prototype.getInputsList = function() {
  return /** @type{!Array<!proto.asgt.type.BankTransaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, asgt_type_bank_transaction_pb.BankTransaction, 1));
};


/** @param {!Array<!proto.asgt.type.BankTransaction>} value */
proto.asgt.jester.v1alpha1.BankRequest.prototype.setInputsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.asgt.type.BankTransaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.type.BankTransaction}
 */
proto.asgt.jester.v1alpha1.BankRequest.prototype.addInputs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.asgt.type.BankTransaction, opt_index);
};


proto.asgt.jester.v1alpha1.BankRequest.prototype.clearInputsList = function() {
  this.setInputsList([]);
};


/**
 * optional string dataset_name = 2;
 * @return {string}
 */
proto.asgt.jester.v1alpha1.BankRequest.prototype.getDatasetName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.jester.v1alpha1.BankRequest.prototype.setDatasetName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SuggestionOptions options = 3;
 * @return {?proto.asgt.jester.v1alpha1.SuggestionOptions}
 */
proto.asgt.jester.v1alpha1.BankRequest.prototype.getOptions = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.SuggestionOptions} */ (
    jspb.Message.getWrapperField(this, proto.asgt.jester.v1alpha1.SuggestionOptions, 3));
};


/** @param {?proto.asgt.jester.v1alpha1.SuggestionOptions|undefined} value */
proto.asgt.jester.v1alpha1.BankRequest.prototype.setOptions = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.asgt.jester.v1alpha1.BankRequest.prototype.clearOptions = function() {
  this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.jester.v1alpha1.BankRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.asgt.jester.v1alpha1);
