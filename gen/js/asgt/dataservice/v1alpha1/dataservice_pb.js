/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var asgt_jester_v1alpha1_jester_pb = require('../../../asgt/jester/v1alpha1/jester_pb.js');
var gen_bq_schema_bq_field_pb = require('../../../gen_bq_schema/bq_field_pb.js');
var gen_bq_schema_bq_table_pb = require('../../../gen_bq_schema/bq_table_pb.js');
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.BankEntry', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.BankFeedbackRequest', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.DeleteRequest', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.displayName = 'proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    consumer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    user: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 4),
    input: (f = msg.getInput()) && asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data.toObject(includeInstance, f),
    trueValues: (f = msg.getTrueValues()) && asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data.toObject(includeInstance, f),
    feedbackTime: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry;
  return proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 5:
      var value = new asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data.deserializeBinaryFromReader);
      msg.setInput(value);
      break;
    case 6:
      var value = new asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data.deserializeBinaryFromReader);
      msg.setTrueValues(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFeedbackTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConsumer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data.serializeBinaryToWriter
    );
  }
  f = message.getTrueValues();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data.serializeBinaryToWriter
    );
  }
  f = message.getFeedbackTime();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string consumer = 2;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.getConsumer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.setConsumer = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user = 3;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.setUser = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string tags = 4;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional asgt.jester.v1alpha1.ScannedInvoiceRequest.Data input = 5;
 * @return {?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Data}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.getInput = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Data} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data, 5));
};


/** @param {?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Data|undefined} value */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.setInput = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.clearInput = function() {
  this.setInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.hasInput = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional asgt.jester.v1alpha1.ScannedInvoiceRequest.Data true_values = 6;
 * @return {?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Data}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.getTrueValues = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Data} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data, 6));
};


/** @param {?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Data|undefined} value */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.setTrueValues = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.clearTrueValues = function() {
  this.setTrueValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.hasTrueValues = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 feedback_time = 7;
 * @return {number}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.getFeedbackTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceEntry.prototype.setFeedbackTime = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.displayName = 'proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    user: jspb.Message.getFieldWithDefault(msg, 2, ""),
    input: (f = msg.getInput()) && asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data.toObject(includeInstance, f),
    predictionsList: jspb.Message.toObjectList(msg.getPredictionsList(),
    asgt_jester_v1alpha1_jester_pb.Prediction.toObject, includeInstance),
    tagsList: jspb.Message.getRepeatedField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest;
  return proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 3:
      var value = new asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data.deserializeBinaryFromReader);
      msg.setInput(value);
      break;
    case 4:
      var value = new asgt_jester_v1alpha1_jester_pb.Prediction;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.Prediction.deserializeBinaryFromReader);
      msg.addPredictions(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data.serializeBinaryToWriter
    );
  }
  f = message.getPredictionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      asgt_jester_v1alpha1_jester_pb.Prediction.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user = 2;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.setUser = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional asgt.jester.v1alpha1.ScannedInvoiceRequest.Data input = 3;
 * @return {?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Data}
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.getInput = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Data} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data, 3));
};


/** @param {?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Data|undefined} value */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.setInput = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.clearInput = function() {
  this.setInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.hasInput = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated asgt.jester.v1alpha1.Prediction predictions = 4;
 * @return {!Array<!proto.asgt.jester.v1alpha1.Prediction>}
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.getPredictionsList = function() {
  return /** @type{!Array<!proto.asgt.jester.v1alpha1.Prediction>} */ (
    jspb.Message.getRepeatedWrapperField(this, asgt_jester_v1alpha1_jester_pb.Prediction, 4));
};


/** @param {!Array<!proto.asgt.jester.v1alpha1.Prediction>} value */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.setPredictionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.asgt.jester.v1alpha1.Prediction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.jester.v1alpha1.Prediction}
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.addPredictions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.asgt.jester.v1alpha1.Prediction, opt_index);
};


proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.clearPredictionsList = function() {
  this.setPredictionsList([]);
};


/**
 * repeated string tags = 5;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.PrepareScannedInvoiceFeedbackRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.displayName = 'proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 2),
    trueValues: (f = msg.getTrueValues()) && asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest;
  return proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 3:
      var value = new asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data.deserializeBinaryFromReader);
      msg.setTrueValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTrueValues();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string tags = 2;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional asgt.jester.v1alpha1.ScannedInvoiceRequest.Data true_values = 3;
 * @return {?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Data}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.prototype.getTrueValues = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Data} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Data, 3));
};


/** @param {?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Data|undefined} value */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.prototype.setTrueValues = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.prototype.clearTrueValues = function() {
  this.setTrueValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.ScannedInvoiceFeedbackRequest.prototype.hasTrueValues = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.displayName = 'proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    consumer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    user: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 4),
    input: (f = msg.getInput()) && asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data.toObject(includeInstance, f),
    trueValues: (f = msg.getTrueValues()) && asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data.toObject(includeInstance, f),
    feedbackTime: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry;
  return proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 5:
      var value = new asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data.deserializeBinaryFromReader);
      msg.setInput(value);
      break;
    case 6:
      var value = new asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data.deserializeBinaryFromReader);
      msg.setTrueValues(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFeedbackTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConsumer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data.serializeBinaryToWriter
    );
  }
  f = message.getTrueValues();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data.serializeBinaryToWriter
    );
  }
  f = message.getFeedbackTime();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string consumer = 2;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.getConsumer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.setConsumer = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user = 3;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.setUser = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string tags = 4;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data input = 5;
 * @return {?proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.getInput = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data, 5));
};


/** @param {?proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data|undefined} value */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.setInput = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.clearInput = function() {
  this.setInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.hasInput = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data true_values = 6;
 * @return {?proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.getTrueValues = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data, 6));
};


/** @param {?proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data|undefined} value */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.setTrueValues = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.clearTrueValues = function() {
  this.setTrueValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.hasTrueValues = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 feedback_time = 8;
 * @return {number}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.getFeedbackTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry.prototype.setFeedbackTime = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.displayName = 'proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    user: jspb.Message.getFieldWithDefault(msg, 2, ""),
    input: (f = msg.getInput()) && asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data.toObject(includeInstance, f),
    predictionsList: jspb.Message.toObjectList(msg.getPredictionsList(),
    asgt_jester_v1alpha1_jester_pb.Prediction.toObject, includeInstance),
    tagsList: jspb.Message.getRepeatedField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest;
  return proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 3:
      var value = new asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data.deserializeBinaryFromReader);
      msg.setInput(value);
      break;
    case 4:
      var value = new asgt_jester_v1alpha1_jester_pb.Prediction;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.Prediction.deserializeBinaryFromReader);
      msg.addPredictions(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data.serializeBinaryToWriter
    );
  }
  f = message.getPredictionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      asgt_jester_v1alpha1_jester_pb.Prediction.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user = 2;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.setUser = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data input = 3;
 * @return {?proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data}
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.getInput = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data, 3));
};


/** @param {?proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data|undefined} value */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.setInput = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.clearInput = function() {
  this.setInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.hasInput = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated asgt.jester.v1alpha1.Prediction predictions = 4;
 * @return {!Array<!proto.asgt.jester.v1alpha1.Prediction>}
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.getPredictionsList = function() {
  return /** @type{!Array<!proto.asgt.jester.v1alpha1.Prediction>} */ (
    jspb.Message.getRepeatedWrapperField(this, asgt_jester_v1alpha1_jester_pb.Prediction, 4));
};


/** @param {!Array<!proto.asgt.jester.v1alpha1.Prediction>} value */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.setPredictionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.asgt.jester.v1alpha1.Prediction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.jester.v1alpha1.Prediction}
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.addPredictions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.asgt.jester.v1alpha1.Prediction, opt_index);
};


proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.clearPredictionsList = function() {
  this.setPredictionsList([]);
};


/**
 * repeated string tags = 5;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.PrepareElectronicInvoiceLineFeedbackRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.displayName = 'proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 2),
    trueValues: (f = msg.getTrueValues()) && asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest;
  return proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 3:
      var value = new asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data.deserializeBinaryFromReader);
      msg.setTrueValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTrueValues();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string tags = 2;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data true_values = 3;
 * @return {?proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.prototype.getTrueValues = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.ElectronicInvoiceLineRequest.Data, 3));
};


/** @param {?proto.asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data|undefined} value */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.prototype.setTrueValues = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.prototype.clearTrueValues = function() {
  this.setTrueValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.ElectronicInvoiceLineFeedbackRequest.prototype.hasTrueValues = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.BankEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.BankEntry.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.BankEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.BankEntry.displayName = 'proto.asgt.dataservice.v1alpha1.BankEntry';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.BankEntry.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.BankEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.BankEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.BankEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    consumer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    user: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 4),
    input: (f = msg.getInput()) && asgt_jester_v1alpha1_jester_pb.BankRequest.Data.toObject(includeInstance, f),
    trueValues: (f = msg.getTrueValues()) && asgt_jester_v1alpha1_jester_pb.BankRequest.Data.toObject(includeInstance, f),
    feedbackTime: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.BankEntry}
 */
proto.asgt.dataservice.v1alpha1.BankEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.BankEntry;
  return proto.asgt.dataservice.v1alpha1.BankEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.BankEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.BankEntry}
 */
proto.asgt.dataservice.v1alpha1.BankEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 5:
      var value = new asgt_jester_v1alpha1_jester_pb.BankRequest.Data;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.BankRequest.Data.deserializeBinaryFromReader);
      msg.setInput(value);
      break;
    case 6:
      var value = new asgt_jester_v1alpha1_jester_pb.BankRequest.Data;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.BankRequest.Data.deserializeBinaryFromReader);
      msg.setTrueValues(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFeedbackTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.BankEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.BankEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.BankEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConsumer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      asgt_jester_v1alpha1_jester_pb.BankRequest.Data.serializeBinaryToWriter
    );
  }
  f = message.getTrueValues();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      asgt_jester_v1alpha1_jester_pb.BankRequest.Data.serializeBinaryToWriter
    );
  }
  f = message.getFeedbackTime();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string consumer = 2;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.getConsumer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.setConsumer = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user = 3;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.setUser = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string tags = 4;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.BankEntry.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional asgt.jester.v1alpha1.BankRequest.Data input = 5;
 * @return {?proto.asgt.jester.v1alpha1.BankRequest.Data}
 */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.getInput = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.BankRequest.Data} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.BankRequest.Data, 5));
};


/** @param {?proto.asgt.jester.v1alpha1.BankRequest.Data|undefined} value */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.setInput = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.asgt.dataservice.v1alpha1.BankEntry.prototype.clearInput = function() {
  this.setInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.hasInput = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional asgt.jester.v1alpha1.BankRequest.Data true_values = 6;
 * @return {?proto.asgt.jester.v1alpha1.BankRequest.Data}
 */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.getTrueValues = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.BankRequest.Data} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.BankRequest.Data, 6));
};


/** @param {?proto.asgt.jester.v1alpha1.BankRequest.Data|undefined} value */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.setTrueValues = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.asgt.dataservice.v1alpha1.BankEntry.prototype.clearTrueValues = function() {
  this.setTrueValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.hasTrueValues = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 feedback_time = 8;
 * @return {number}
 */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.getFeedbackTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.asgt.dataservice.v1alpha1.BankEntry.prototype.setFeedbackTime = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.displayName = 'proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    user: jspb.Message.getFieldWithDefault(msg, 2, ""),
    input: (f = msg.getInput()) && asgt_jester_v1alpha1_jester_pb.BankRequest.Data.toObject(includeInstance, f),
    predictionsList: jspb.Message.toObjectList(msg.getPredictionsList(),
    asgt_jester_v1alpha1_jester_pb.Prediction.toObject, includeInstance),
    tagsList: jspb.Message.getRepeatedField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest;
  return proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 3:
      var value = new asgt_jester_v1alpha1_jester_pb.BankRequest.Data;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.BankRequest.Data.deserializeBinaryFromReader);
      msg.setInput(value);
      break;
    case 4:
      var value = new asgt_jester_v1alpha1_jester_pb.Prediction;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.Prediction.deserializeBinaryFromReader);
      msg.addPredictions(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInput();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      asgt_jester_v1alpha1_jester_pb.BankRequest.Data.serializeBinaryToWriter
    );
  }
  f = message.getPredictionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      asgt_jester_v1alpha1_jester_pb.Prediction.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user = 2;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.setUser = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional asgt.jester.v1alpha1.BankRequest.Data input = 3;
 * @return {?proto.asgt.jester.v1alpha1.BankRequest.Data}
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.getInput = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.BankRequest.Data} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.BankRequest.Data, 3));
};


/** @param {?proto.asgt.jester.v1alpha1.BankRequest.Data|undefined} value */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.setInput = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.clearInput = function() {
  this.setInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.hasInput = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated asgt.jester.v1alpha1.Prediction predictions = 4;
 * @return {!Array<!proto.asgt.jester.v1alpha1.Prediction>}
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.getPredictionsList = function() {
  return /** @type{!Array<!proto.asgt.jester.v1alpha1.Prediction>} */ (
    jspb.Message.getRepeatedWrapperField(this, asgt_jester_v1alpha1_jester_pb.Prediction, 4));
};


/** @param {!Array<!proto.asgt.jester.v1alpha1.Prediction>} value */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.setPredictionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.asgt.jester.v1alpha1.Prediction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.jester.v1alpha1.Prediction}
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.addPredictions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.asgt.jester.v1alpha1.Prediction, opt_index);
};


proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.clearPredictionsList = function() {
  this.setPredictionsList([]);
};


/**
 * repeated string tags = 5;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.PrepareBankFeedbackRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.BankFeedbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.displayName = 'proto.asgt.dataservice.v1alpha1.BankFeedbackRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.BankFeedbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 2),
    trueValues: (f = msg.getTrueValues()) && asgt_jester_v1alpha1_jester_pb.BankRequest.Data.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.BankFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.BankFeedbackRequest;
  return proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.BankFeedbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.BankFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 3:
      var value = new asgt_jester_v1alpha1_jester_pb.BankRequest.Data;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.BankRequest.Data.deserializeBinaryFromReader);
      msg.setTrueValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.BankFeedbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTrueValues();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      asgt_jester_v1alpha1_jester_pb.BankRequest.Data.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string tags = 2;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional asgt.jester.v1alpha1.BankRequest.Data true_values = 3;
 * @return {?proto.asgt.jester.v1alpha1.BankRequest.Data}
 */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.prototype.getTrueValues = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.BankRequest.Data} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.BankRequest.Data, 3));
};


/** @param {?proto.asgt.jester.v1alpha1.BankRequest.Data|undefined} value */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.prototype.setTrueValues = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.prototype.clearTrueValues = function() {
  this.setTrueValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.BankFeedbackRequest.prototype.hasTrueValues = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.DeleteRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.DeleteRequest.displayName = 'proto.asgt.dataservice.v1alpha1.DeleteRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    user: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.DeleteRequest}
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.DeleteRequest;
  return proto.asgt.dataservice.v1alpha1.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.DeleteRequest}
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string model_type = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.getModelType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.setModelType = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user = 2;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.setUser = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string tags = 3;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


goog.object.extend(exports, proto.asgt.dataservice.v1alpha1);
