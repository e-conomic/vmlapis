/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var asgt_jester_v1alpha1_jester_pb = require('../../../asgt/jester/v1alpha1/jester_pb.js');
var gen_bq_schema_bq_field_pb = require('../../../gen_bq_schema/bq_field_pb.js');
var gen_bq_schema_bq_table_pb = require('../../../gen_bq_schema/bq_table_pb.js');
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.DeleteRequest', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.Entry', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.FeedbackRequest', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.FeedbackType', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.FeedbackValue', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.FeedbackValueList', null, global);
goog.exportSymbol('proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.Entry.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.Entry.displayName = 'proto.asgt.dataservice.v1alpha1.Entry';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.Entry.repeatedFields_ = [4,5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    consumer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    user: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 4),
    inputList: jspb.Message.toObjectList(msg.getInputList(),
    proto.asgt.dataservice.v1alpha1.FeedbackValue.toObject, includeInstance),
    trueValuesList: jspb.Message.toObjectList(msg.getTrueValuesList(),
    proto.asgt.dataservice.v1alpha1.FeedbackValue.toObject, includeInstance),
    predictionValuesList: jspb.Message.toObjectList(msg.getPredictionValuesList(),
    proto.asgt.dataservice.v1alpha1.FeedbackValueList.toObject, includeInstance),
    feedbackTime: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.Entry}
 */
proto.asgt.dataservice.v1alpha1.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.Entry;
  return proto.asgt.dataservice.v1alpha1.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.Entry}
 */
proto.asgt.dataservice.v1alpha1.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 5:
      var value = new proto.asgt.dataservice.v1alpha1.FeedbackValue;
      reader.readMessage(value,proto.asgt.dataservice.v1alpha1.FeedbackValue.deserializeBinaryFromReader);
      msg.addInput(value);
      break;
    case 6:
      var value = new proto.asgt.dataservice.v1alpha1.FeedbackValue;
      reader.readMessage(value,proto.asgt.dataservice.v1alpha1.FeedbackValue.deserializeBinaryFromReader);
      msg.addTrueValues(value);
      break;
    case 7:
      var value = new proto.asgt.dataservice.v1alpha1.FeedbackValueList;
      reader.readMessage(value,proto.asgt.dataservice.v1alpha1.FeedbackValueList.deserializeBinaryFromReader);
      msg.addPredictionValues(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFeedbackTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConsumer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getInputList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.asgt.dataservice.v1alpha1.FeedbackValue.serializeBinaryToWriter
    );
  }
  f = message.getTrueValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.asgt.dataservice.v1alpha1.FeedbackValue.serializeBinaryToWriter
    );
  }
  f = message.getPredictionValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.asgt.dataservice.v1alpha1.FeedbackValueList.serializeBinaryToWriter
    );
  }
  f = message.getFeedbackTime();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.Entry.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string consumer = 2;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.getConsumer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.Entry.prototype.setConsumer = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user = 3;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.Entry.prototype.setUser = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string tags = 4;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.Entry.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.Entry.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * repeated FeedbackValue input = 5;
 * @return {!Array<!proto.asgt.dataservice.v1alpha1.FeedbackValue>}
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.getInputList = function() {
  return /** @type{!Array<!proto.asgt.dataservice.v1alpha1.FeedbackValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.asgt.dataservice.v1alpha1.FeedbackValue, 5));
};


/** @param {!Array<!proto.asgt.dataservice.v1alpha1.FeedbackValue>} value */
proto.asgt.dataservice.v1alpha1.Entry.prototype.setInputList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.dataservice.v1alpha1.FeedbackValue}
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.addInput = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.asgt.dataservice.v1alpha1.FeedbackValue, opt_index);
};


proto.asgt.dataservice.v1alpha1.Entry.prototype.clearInputList = function() {
  this.setInputList([]);
};


/**
 * repeated FeedbackValue true_values = 6;
 * @return {!Array<!proto.asgt.dataservice.v1alpha1.FeedbackValue>}
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.getTrueValuesList = function() {
  return /** @type{!Array<!proto.asgt.dataservice.v1alpha1.FeedbackValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.asgt.dataservice.v1alpha1.FeedbackValue, 6));
};


/** @param {!Array<!proto.asgt.dataservice.v1alpha1.FeedbackValue>} value */
proto.asgt.dataservice.v1alpha1.Entry.prototype.setTrueValuesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.dataservice.v1alpha1.FeedbackValue}
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.addTrueValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.asgt.dataservice.v1alpha1.FeedbackValue, opt_index);
};


proto.asgt.dataservice.v1alpha1.Entry.prototype.clearTrueValuesList = function() {
  this.setTrueValuesList([]);
};


/**
 * repeated FeedbackValueList prediction_values = 7;
 * @return {!Array<!proto.asgt.dataservice.v1alpha1.FeedbackValueList>}
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.getPredictionValuesList = function() {
  return /** @type{!Array<!proto.asgt.dataservice.v1alpha1.FeedbackValueList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.asgt.dataservice.v1alpha1.FeedbackValueList, 7));
};


/** @param {!Array<!proto.asgt.dataservice.v1alpha1.FeedbackValueList>} value */
proto.asgt.dataservice.v1alpha1.Entry.prototype.setPredictionValuesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackValueList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.dataservice.v1alpha1.FeedbackValueList}
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.addPredictionValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.asgt.dataservice.v1alpha1.FeedbackValueList, opt_index);
};


proto.asgt.dataservice.v1alpha1.Entry.prototype.clearPredictionValuesList = function() {
  this.setPredictionValuesList([]);
};


/**
 * optional uint64 feedback_time = 8;
 * @return {number}
 */
proto.asgt.dataservice.v1alpha1.Entry.prototype.getFeedbackTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.asgt.dataservice.v1alpha1.Entry.prototype.setFeedbackTime = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.FeedbackType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.asgt.dataservice.v1alpha1.FeedbackType.oneofGroups_);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.FeedbackType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.FeedbackType.displayName = 'proto.asgt.dataservice.v1alpha1.FeedbackType';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.TypeCase = {
  TYPE_NOT_SET: 0,
  FEEDBACK_STRING: 2,
  FEEDBACK_INT: 3,
  FEEDBACK_FLOAT: 4
};

/**
 * @return {proto.asgt.dataservice.v1alpha1.FeedbackType.TypeCase}
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.getTypeCase = function() {
  return /** @type {proto.asgt.dataservice.v1alpha1.FeedbackType.TypeCase} */(jspb.Message.computeOneofCase(this, proto.asgt.dataservice.v1alpha1.FeedbackType.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.FeedbackType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.toObject = function(includeInstance, msg) {
  var f, obj = {
    feedbackString: jspb.Message.getFieldWithDefault(msg, 2, ""),
    feedbackInt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    feedbackFloat: (f = msg.getFeedbackFloat()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.FeedbackType}
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.FeedbackType;
  return proto.asgt.dataservice.v1alpha1.FeedbackType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.FeedbackType}
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeedbackString(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFeedbackInt(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setFeedbackFloat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.FeedbackType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getFeedbackFloat();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string feedback_string = 2;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.getFeedbackString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.setFeedbackString = function(value) {
  jspb.Message.setOneofField(this, 2, proto.asgt.dataservice.v1alpha1.FeedbackType.oneofGroups_[0], value);
};


proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.clearFeedbackString = function() {
  jspb.Message.setOneofField(this, 2, proto.asgt.dataservice.v1alpha1.FeedbackType.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.hasFeedbackString = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 feedback_int = 3;
 * @return {number}
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.getFeedbackInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.setFeedbackInt = function(value) {
  jspb.Message.setOneofField(this, 3, proto.asgt.dataservice.v1alpha1.FeedbackType.oneofGroups_[0], value);
};


proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.clearFeedbackInt = function() {
  jspb.Message.setOneofField(this, 3, proto.asgt.dataservice.v1alpha1.FeedbackType.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.hasFeedbackInt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.FloatValue feedback_float = 4;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.getFeedbackFloat = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 4));
};


/** @param {?proto.google.protobuf.FloatValue|undefined} value */
proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.setFeedbackFloat = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.asgt.dataservice.v1alpha1.FeedbackType.oneofGroups_[0], value);
};


proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.clearFeedbackFloat = function() {
  this.setFeedbackFloat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.FeedbackType.prototype.hasFeedbackFloat = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.FeedbackValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.FeedbackValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.FeedbackValue.displayName = 'proto.asgt.dataservice.v1alpha1.FeedbackValue';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValue.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.FeedbackValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.FeedbackValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    target: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: (f = msg.getValue()) && proto.asgt.dataservice.v1alpha1.FeedbackType.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.FeedbackValue}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.FeedbackValue;
  return proto.asgt.dataservice.v1alpha1.FeedbackValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.FeedbackValue}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTarget(value);
      break;
    case 2:
      var value = new proto.asgt.dataservice.v1alpha1.FeedbackType;
      reader.readMessage(value,proto.asgt.dataservice.v1alpha1.FeedbackType.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.FeedbackValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.FeedbackValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTarget();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.asgt.dataservice.v1alpha1.FeedbackType.serializeBinaryToWriter
    );
  }
};


/**
 * optional string target = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValue.prototype.getTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.FeedbackValue.prototype.setTarget = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional FeedbackType value = 2;
 * @return {?proto.asgt.dataservice.v1alpha1.FeedbackType}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValue.prototype.getValue = function() {
  return /** @type{?proto.asgt.dataservice.v1alpha1.FeedbackType} */ (
    jspb.Message.getWrapperField(this, proto.asgt.dataservice.v1alpha1.FeedbackType, 2));
};


/** @param {?proto.asgt.dataservice.v1alpha1.FeedbackType|undefined} value */
proto.asgt.dataservice.v1alpha1.FeedbackValue.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.asgt.dataservice.v1alpha1.FeedbackValue.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValue.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.FeedbackValueList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.FeedbackValueList.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.FeedbackValueList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.FeedbackValueList.displayName = 'proto.asgt.dataservice.v1alpha1.FeedbackValueList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.FeedbackValueList.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValueList.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.FeedbackValueList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackValueList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.FeedbackValueList.toObject = function(includeInstance, msg) {
  var f, obj = {
    target: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    proto.asgt.dataservice.v1alpha1.FeedbackType.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.FeedbackValueList}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValueList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.FeedbackValueList;
  return proto.asgt.dataservice.v1alpha1.FeedbackValueList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackValueList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.FeedbackValueList}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValueList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTarget(value);
      break;
    case 2:
      var value = new proto.asgt.dataservice.v1alpha1.FeedbackType;
      reader.readMessage(value,proto.asgt.dataservice.v1alpha1.FeedbackType.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValueList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.FeedbackValueList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackValueList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.FeedbackValueList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTarget();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.asgt.dataservice.v1alpha1.FeedbackType.serializeBinaryToWriter
    );
  }
};


/**
 * optional string target = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValueList.prototype.getTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.FeedbackValueList.prototype.setTarget = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated FeedbackType value = 2;
 * @return {!Array<!proto.asgt.dataservice.v1alpha1.FeedbackType>}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValueList.prototype.getValueList = function() {
  return /** @type{!Array<!proto.asgt.dataservice.v1alpha1.FeedbackType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.asgt.dataservice.v1alpha1.FeedbackType, 2));
};


/** @param {!Array<!proto.asgt.dataservice.v1alpha1.FeedbackType>} value */
proto.asgt.dataservice.v1alpha1.FeedbackValueList.prototype.setValueList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.dataservice.v1alpha1.FeedbackType}
 */
proto.asgt.dataservice.v1alpha1.FeedbackValueList.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.asgt.dataservice.v1alpha1.FeedbackType, opt_index);
};


proto.asgt.dataservice.v1alpha1.FeedbackValueList.prototype.clearValueList = function() {
  this.setValueList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.repeatedFields_, proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.oneofGroups_);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.displayName = 'proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.repeatedFields_ = [6,7];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.InputCase = {
  INPUT_NOT_SET: 0,
  SCANNED_INVOICE_INPUT: 3,
  ELECTRONIC_INVOICE_LINE_INPUT: 4,
  BANK_INPUT: 5
};

/**
 * @return {proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.InputCase}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.getInputCase = function() {
  return /** @type {proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.InputCase} */(jspb.Message.computeOneofCase(this, proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    user: jspb.Message.getFieldWithDefault(msg, 2, ""),
    scannedInvoiceInput: (f = msg.getScannedInvoiceInput()) && asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Input.toObject(includeInstance, f),
    electronicInvoiceLineInput: (f = msg.getElectronicInvoiceLineInput()) && asgt_jester_v1alpha1_jester_pb.ElectronicInvoicLineRequest.Input.toObject(includeInstance, f),
    bankInput: (f = msg.getBankInput()) && asgt_jester_v1alpha1_jester_pb.BankRequest.Input.toObject(includeInstance, f),
    predictionsList: jspb.Message.toObjectList(msg.getPredictionsList(),
    asgt_jester_v1alpha1_jester_pb.Prediction.toObject, includeInstance),
    tagsList: jspb.Message.getRepeatedField(msg, 7)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest;
  return proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 3:
      var value = new asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Input;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Input.deserializeBinaryFromReader);
      msg.setScannedInvoiceInput(value);
      break;
    case 4:
      var value = new asgt_jester_v1alpha1_jester_pb.ElectronicInvoicLineRequest.Input;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.ElectronicInvoicLineRequest.Input.deserializeBinaryFromReader);
      msg.setElectronicInvoiceLineInput(value);
      break;
    case 5:
      var value = new asgt_jester_v1alpha1_jester_pb.BankRequest.Input;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.BankRequest.Input.deserializeBinaryFromReader);
      msg.setBankInput(value);
      break;
    case 6:
      var value = new asgt_jester_v1alpha1_jester_pb.Prediction;
      reader.readMessage(value,asgt_jester_v1alpha1_jester_pb.Prediction.deserializeBinaryFromReader);
      msg.addPredictions(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getScannedInvoiceInput();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Input.serializeBinaryToWriter
    );
  }
  f = message.getElectronicInvoiceLineInput();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      asgt_jester_v1alpha1_jester_pb.ElectronicInvoicLineRequest.Input.serializeBinaryToWriter
    );
  }
  f = message.getBankInput();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      asgt_jester_v1alpha1_jester_pb.BankRequest.Input.serializeBinaryToWriter
    );
  }
  f = message.getPredictionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      asgt_jester_v1alpha1_jester_pb.Prediction.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user = 2;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.setUser = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional asgt.jester.v1alpha1.ScannedInvoiceRequest.Input scanned_invoice_input = 3;
 * @return {?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Input}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.getScannedInvoiceInput = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Input} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.ScannedInvoiceRequest.Input, 3));
};


/** @param {?proto.asgt.jester.v1alpha1.ScannedInvoiceRequest.Input|undefined} value */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.setScannedInvoiceInput = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.oneofGroups_[0], value);
};


proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.clearScannedInvoiceInput = function() {
  this.setScannedInvoiceInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.hasScannedInvoiceInput = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional asgt.jester.v1alpha1.ElectronicInvoicLineRequest.Input electronic_invoice_line_input = 4;
 * @return {?proto.asgt.jester.v1alpha1.ElectronicInvoicLineRequest.Input}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.getElectronicInvoiceLineInput = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.ElectronicInvoicLineRequest.Input} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.ElectronicInvoicLineRequest.Input, 4));
};


/** @param {?proto.asgt.jester.v1alpha1.ElectronicInvoicLineRequest.Input|undefined} value */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.setElectronicInvoiceLineInput = function(value) {
  jspb.Message.setOneofWrapperField(this, 4, proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.oneofGroups_[0], value);
};


proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.clearElectronicInvoiceLineInput = function() {
  this.setElectronicInvoiceLineInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.hasElectronicInvoiceLineInput = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional asgt.jester.v1alpha1.BankRequest.Input bank_input = 5;
 * @return {?proto.asgt.jester.v1alpha1.BankRequest.Input}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.getBankInput = function() {
  return /** @type{?proto.asgt.jester.v1alpha1.BankRequest.Input} */ (
    jspb.Message.getWrapperField(this, asgt_jester_v1alpha1_jester_pb.BankRequest.Input, 5));
};


/** @param {?proto.asgt.jester.v1alpha1.BankRequest.Input|undefined} value */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.setBankInput = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.oneofGroups_[0], value);
};


proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.clearBankInput = function() {
  this.setBankInput(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.hasBankInput = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated asgt.jester.v1alpha1.Prediction predictions = 6;
 * @return {!Array<!proto.asgt.jester.v1alpha1.Prediction>}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.getPredictionsList = function() {
  return /** @type{!Array<!proto.asgt.jester.v1alpha1.Prediction>} */ (
    jspb.Message.getRepeatedWrapperField(this, asgt_jester_v1alpha1_jester_pb.Prediction, 6));
};


/** @param {!Array<!proto.asgt.jester.v1alpha1.Prediction>} value */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.setPredictionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.asgt.jester.v1alpha1.Prediction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.asgt.jester.v1alpha1.Prediction}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.addPredictions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.asgt.jester.v1alpha1.Prediction, opt_index);
};


proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.clearPredictionsList = function() {
  this.setPredictionsList([]);
};


/**
 * repeated string tags = 7;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.PrepareFeedbackRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.FeedbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.FeedbackRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.FeedbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.FeedbackRequest.displayName = 'proto.asgt.dataservice.v1alpha1.FeedbackRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.FeedbackRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.FeedbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.FeedbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.FeedbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 2),
    trueValuesMap: (f = msg.getTrueValuesMap()) ? f.toObject(includeInstance, proto.asgt.dataservice.v1alpha1.FeedbackValue.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.FeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.FeedbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.FeedbackRequest;
  return proto.asgt.dataservice.v1alpha1.FeedbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.FeedbackRequest}
 */
proto.asgt.dataservice.v1alpha1.FeedbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 3:
      var value = msg.getTrueValuesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.asgt.dataservice.v1alpha1.FeedbackValue.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.FeedbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.FeedbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.FeedbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.FeedbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTrueValuesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.asgt.dataservice.v1alpha1.FeedbackValue.serializeBinaryToWriter);
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.asgt.dataservice.v1alpha1.FeedbackRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.asgt.dataservice.v1alpha1.FeedbackRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string tags = 2;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.FeedbackRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.FeedbackRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.FeedbackRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.FeedbackRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * map<string, FeedbackValue> true_values = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.asgt.dataservice.v1alpha1.FeedbackValue>}
 */
proto.asgt.dataservice.v1alpha1.FeedbackRequest.prototype.getTrueValuesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.asgt.dataservice.v1alpha1.FeedbackValue>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.asgt.dataservice.v1alpha1.FeedbackValue));
};


proto.asgt.dataservice.v1alpha1.FeedbackRequest.prototype.clearTrueValuesMap = function() {
  this.getTrueValuesMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.asgt.dataservice.v1alpha1.DeleteRequest.repeatedFields_, null);
};
goog.inherits(proto.asgt.dataservice.v1alpha1.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.asgt.dataservice.v1alpha1.DeleteRequest.displayName = 'proto.asgt.dataservice.v1alpha1.DeleteRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.asgt.dataservice.v1alpha1.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.asgt.dataservice.v1alpha1.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tagsList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.asgt.dataservice.v1alpha1.DeleteRequest}
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.asgt.dataservice.v1alpha1.DeleteRequest;
  return proto.asgt.dataservice.v1alpha1.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.asgt.dataservice.v1alpha1.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.asgt.dataservice.v1alpha1.DeleteRequest}
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.asgt.dataservice.v1alpha1.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.asgt.dataservice.v1alpha1.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string tags = 1;
 * @return {!Array<string>}
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.asgt.dataservice.v1alpha1.DeleteRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


goog.object.extend(exports, proto.asgt.dataservice.v1alpha1);
