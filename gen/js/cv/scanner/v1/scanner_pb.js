// source: cv/scanner/v1/scanner.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_api_http_pb = require('../../../google/api/http_pb.js');
goog.object.extend(proto, google_api_http_pb);
var ssn_type_candidate_pb = require('../../../ssn/type/candidate_pb.js');
goog.object.extend(proto, ssn_type_candidate_pb);
goog.exportSymbol('proto.cv.scanner.v1.Document', null, global);
goog.exportSymbol('proto.cv.scanner.v1.DocumentSource', null, global);
goog.exportSymbol('proto.cv.scanner.v1.Feature', null, global);
goog.exportSymbol('proto.cv.scanner.v1.Feature.Type', null, global);
goog.exportSymbol('proto.cv.scanner.v1.ScanCVRequest', null, global);
goog.exportSymbol('proto.cv.scanner.v1.ScanCVResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cv.scanner.v1.ScanCVRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cv.scanner.v1.ScanCVRequest.repeatedFields_, null);
};
goog.inherits(proto.cv.scanner.v1.ScanCVRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cv.scanner.v1.ScanCVRequest.displayName = 'proto.cv.scanner.v1.ScanCVRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cv.scanner.v1.ScanCVResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cv.scanner.v1.ScanCVResponse.repeatedFields_, null);
};
goog.inherits(proto.cv.scanner.v1.ScanCVResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cv.scanner.v1.ScanCVResponse.displayName = 'proto.cv.scanner.v1.ScanCVResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cv.scanner.v1.Feature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cv.scanner.v1.Feature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cv.scanner.v1.Feature.displayName = 'proto.cv.scanner.v1.Feature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cv.scanner.v1.Document = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cv.scanner.v1.Document, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cv.scanner.v1.Document.displayName = 'proto.cv.scanner.v1.Document';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cv.scanner.v1.DocumentSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cv.scanner.v1.DocumentSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cv.scanner.v1.DocumentSource.displayName = 'proto.cv.scanner.v1.DocumentSource';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cv.scanner.v1.ScanCVRequest.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cv.scanner.v1.ScanCVRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.cv.scanner.v1.ScanCVRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cv.scanner.v1.ScanCVRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cv.scanner.v1.ScanCVRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    document: (f = msg.getDocument()) && proto.cv.scanner.v1.Document.toObject(includeInstance, f),
    featuresList: jspb.Message.toObjectList(msg.getFeaturesList(),
    proto.cv.scanner.v1.Feature.toObject, includeInstance),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cv.scanner.v1.ScanCVRequest}
 */
proto.cv.scanner.v1.ScanCVRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cv.scanner.v1.ScanCVRequest;
  return proto.cv.scanner.v1.ScanCVRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cv.scanner.v1.ScanCVRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cv.scanner.v1.ScanCVRequest}
 */
proto.cv.scanner.v1.ScanCVRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cv.scanner.v1.Document;
      reader.readMessage(value,proto.cv.scanner.v1.Document.deserializeBinaryFromReader);
      msg.setDocument(value);
      break;
    case 2:
      var value = new proto.cv.scanner.v1.Feature;
      reader.readMessage(value,proto.cv.scanner.v1.Feature.deserializeBinaryFromReader);
      msg.addFeatures(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cv.scanner.v1.ScanCVRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cv.scanner.v1.ScanCVRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cv.scanner.v1.ScanCVRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cv.scanner.v1.ScanCVRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cv.scanner.v1.Document.serializeBinaryToWriter
    );
  }
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.cv.scanner.v1.Feature.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional Document document = 1;
 * @return {?proto.cv.scanner.v1.Document}
 */
proto.cv.scanner.v1.ScanCVRequest.prototype.getDocument = function() {
  return /** @type{?proto.cv.scanner.v1.Document} */ (
    jspb.Message.getWrapperField(this, proto.cv.scanner.v1.Document, 1));
};


/**
 * @param {?proto.cv.scanner.v1.Document|undefined} value
 * @return {!proto.cv.scanner.v1.ScanCVRequest} returns this
*/
proto.cv.scanner.v1.ScanCVRequest.prototype.setDocument = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cv.scanner.v1.ScanCVRequest} returns this
 */
proto.cv.scanner.v1.ScanCVRequest.prototype.clearDocument = function() {
  return this.setDocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cv.scanner.v1.ScanCVRequest.prototype.hasDocument = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Feature features = 2;
 * @return {!Array<!proto.cv.scanner.v1.Feature>}
 */
proto.cv.scanner.v1.ScanCVRequest.prototype.getFeaturesList = function() {
  return /** @type{!Array<!proto.cv.scanner.v1.Feature>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cv.scanner.v1.Feature, 2));
};


/**
 * @param {!Array<!proto.cv.scanner.v1.Feature>} value
 * @return {!proto.cv.scanner.v1.ScanCVRequest} returns this
*/
proto.cv.scanner.v1.ScanCVRequest.prototype.setFeaturesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cv.scanner.v1.Feature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cv.scanner.v1.Feature}
 */
proto.cv.scanner.v1.ScanCVRequest.prototype.addFeatures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cv.scanner.v1.Feature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVRequest} returns this
 */
proto.cv.scanner.v1.ScanCVRequest.prototype.clearFeaturesList = function() {
  return this.setFeaturesList([]);
};


/**
 * repeated string tags = 3;
 * @return {!Array<string>}
 */
proto.cv.scanner.v1.ScanCVRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.cv.scanner.v1.ScanCVRequest} returns this
 */
proto.cv.scanner.v1.ScanCVRequest.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.cv.scanner.v1.ScanCVRequest} returns this
 */
proto.cv.scanner.v1.ScanCVRequest.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVRequest} returns this
 */
proto.cv.scanner.v1.ScanCVRequest.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cv.scanner.v1.ScanCVResponse.repeatedFields_ = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cv.scanner.v1.ScanCVResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cv.scanner.v1.ScanCVResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cv.scanner.v1.ScanCVResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstNameList: jspb.Message.toObjectList(msg.getFirstNameList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    lastNameList: jspb.Message.toObjectList(msg.getLastNameList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    dateOfBirthList: jspb.Message.toObjectList(msg.getDateOfBirthList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    phoneList: jspb.Message.toObjectList(msg.getPhoneList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    emailList: jspb.Message.toObjectList(msg.getEmailList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    countryList: jspb.Message.toObjectList(msg.getCountryList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    nationalityList: jspb.Message.toObjectList(msg.getNationalityList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    postalCodeList: jspb.Message.toObjectList(msg.getPostalCodeList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    postalAreaList: jspb.Message.toObjectList(msg.getPostalAreaList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    municipalityList: jspb.Message.toObjectList(msg.getMunicipalityList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    countyList: jspb.Message.toObjectList(msg.getCountyList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    adressList: jspb.Message.toObjectList(msg.getAdressList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    empoloyerNameList: jspb.Message.toObjectList(msg.getEmpoloyerNameList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    positionTitleList: jspb.Message.toObjectList(msg.getPositionTitleList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    dateList: jspb.Message.toObjectList(msg.getDateList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    institutionTypeList: jspb.Message.toObjectList(msg.getInstitutionTypeList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    areaOfEducationList: jspb.Message.toObjectList(msg.getAreaOfEducationList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    degreeList: jspb.Message.toObjectList(msg.getDegreeList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    averageGradeList: jspb.Message.toObjectList(msg.getAverageGradeList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    nameList: jspb.Message.toObjectList(msg.getNameList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance),
    levelList: jspb.Message.toObjectList(msg.getLevelList(),
    ssn_type_candidate_pb.Candidate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cv.scanner.v1.ScanCVResponse}
 */
proto.cv.scanner.v1.ScanCVResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cv.scanner.v1.ScanCVResponse;
  return proto.cv.scanner.v1.ScanCVResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cv.scanner.v1.ScanCVResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cv.scanner.v1.ScanCVResponse}
 */
proto.cv.scanner.v1.ScanCVResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addFirstName(value);
      break;
    case 2:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addLastName(value);
      break;
    case 3:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addDateOfBirth(value);
      break;
    case 4:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addPhone(value);
      break;
    case 5:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addEmail(value);
      break;
    case 6:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addCountry(value);
      break;
    case 7:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addNationality(value);
      break;
    case 8:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addPostalCode(value);
      break;
    case 9:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addPostalArea(value);
      break;
    case 10:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addMunicipality(value);
      break;
    case 11:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addCounty(value);
      break;
    case 12:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addAdress(value);
      break;
    case 13:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addEmpoloyerName(value);
      break;
    case 14:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addPositionTitle(value);
      break;
    case 15:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addDate(value);
      break;
    case 16:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addInstitutionType(value);
      break;
    case 17:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addAreaOfEducation(value);
      break;
    case 19:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addDegree(value);
      break;
    case 20:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addAverageGrade(value);
      break;
    case 21:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addName(value);
      break;
    case 22:
      var value = new ssn_type_candidate_pb.Candidate;
      reader.readMessage(value,ssn_type_candidate_pb.Candidate.deserializeBinaryFromReader);
      msg.addLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cv.scanner.v1.ScanCVResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cv.scanner.v1.ScanCVResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cv.scanner.v1.ScanCVResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstNameList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getLastNameList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getDateOfBirthList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getPhoneList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getEmailList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getCountryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getNationalityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getPostalCodeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getPostalAreaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getMunicipalityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getCountyList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getAdressList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getEmpoloyerNameList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getPositionTitleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getDateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getInstitutionTypeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getAreaOfEducationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getDegreeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getAverageGradeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getNameList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
  f = message.getLevelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      ssn_type_candidate_pb.Candidate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ssn.type.Candidate first_name = 1;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getFirstNameList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 1));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setFirstNameList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addFirstName = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearFirstNameList = function() {
  return this.setFirstNameList([]);
};


/**
 * repeated ssn.type.Candidate last_name = 2;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getLastNameList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 2));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setLastNameList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addLastName = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearLastNameList = function() {
  return this.setLastNameList([]);
};


/**
 * repeated ssn.type.Candidate date_of_birth = 3;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getDateOfBirthList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 3));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setDateOfBirthList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addDateOfBirth = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearDateOfBirthList = function() {
  return this.setDateOfBirthList([]);
};


/**
 * repeated ssn.type.Candidate phone = 4;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getPhoneList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 4));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setPhoneList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addPhone = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearPhoneList = function() {
  return this.setPhoneList([]);
};


/**
 * repeated ssn.type.Candidate email = 5;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getEmailList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 5));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setEmailList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addEmail = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearEmailList = function() {
  return this.setEmailList([]);
};


/**
 * repeated ssn.type.Candidate country = 6;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getCountryList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 6));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setCountryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addCountry = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearCountryList = function() {
  return this.setCountryList([]);
};


/**
 * repeated ssn.type.Candidate nationality = 7;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getNationalityList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 7));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setNationalityList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addNationality = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearNationalityList = function() {
  return this.setNationalityList([]);
};


/**
 * repeated ssn.type.Candidate postal_code = 8;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getPostalCodeList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 8));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setPostalCodeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addPostalCode = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearPostalCodeList = function() {
  return this.setPostalCodeList([]);
};


/**
 * repeated ssn.type.Candidate postal_area = 9;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getPostalAreaList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 9));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setPostalAreaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addPostalArea = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearPostalAreaList = function() {
  return this.setPostalAreaList([]);
};


/**
 * repeated ssn.type.Candidate municipality = 10;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getMunicipalityList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 10));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setMunicipalityList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addMunicipality = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearMunicipalityList = function() {
  return this.setMunicipalityList([]);
};


/**
 * repeated ssn.type.Candidate county = 11;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getCountyList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 11));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setCountyList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addCounty = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearCountyList = function() {
  return this.setCountyList([]);
};


/**
 * repeated ssn.type.Candidate adress = 12;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getAdressList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 12));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setAdressList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addAdress = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearAdressList = function() {
  return this.setAdressList([]);
};


/**
 * repeated ssn.type.Candidate empoloyer_name = 13;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getEmpoloyerNameList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 13));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setEmpoloyerNameList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addEmpoloyerName = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearEmpoloyerNameList = function() {
  return this.setEmpoloyerNameList([]);
};


/**
 * repeated ssn.type.Candidate position_title = 14;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getPositionTitleList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 14));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setPositionTitleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addPositionTitle = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearPositionTitleList = function() {
  return this.setPositionTitleList([]);
};


/**
 * repeated ssn.type.Candidate date = 15;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getDateList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 15));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setDateList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addDate = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearDateList = function() {
  return this.setDateList([]);
};


/**
 * repeated ssn.type.Candidate institution_type = 16;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getInstitutionTypeList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 16));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setInstitutionTypeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addInstitutionType = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearInstitutionTypeList = function() {
  return this.setInstitutionTypeList([]);
};


/**
 * repeated ssn.type.Candidate area_of_education = 17;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getAreaOfEducationList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 17));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setAreaOfEducationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addAreaOfEducation = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearAreaOfEducationList = function() {
  return this.setAreaOfEducationList([]);
};


/**
 * repeated ssn.type.Candidate degree = 19;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getDegreeList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 19));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setDegreeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addDegree = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearDegreeList = function() {
  return this.setDegreeList([]);
};


/**
 * repeated ssn.type.Candidate average_grade = 20;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getAverageGradeList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 20));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setAverageGradeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addAverageGrade = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearAverageGradeList = function() {
  return this.setAverageGradeList([]);
};


/**
 * repeated ssn.type.Candidate name = 21;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getNameList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 21));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setNameList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addName = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearNameList = function() {
  return this.setNameList([]);
};


/**
 * repeated ssn.type.Candidate level = 22;
 * @return {!Array<!proto.ssn.type.Candidate>}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.getLevelList = function() {
  return /** @type{!Array<!proto.ssn.type.Candidate>} */ (
    jspb.Message.getRepeatedWrapperField(this, ssn_type_candidate_pb.Candidate, 22));
};


/**
 * @param {!Array<!proto.ssn.type.Candidate>} value
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
*/
proto.cv.scanner.v1.ScanCVResponse.prototype.setLevelList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.ssn.type.Candidate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ssn.type.Candidate}
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.addLevel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.ssn.type.Candidate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cv.scanner.v1.ScanCVResponse} returns this
 */
proto.cv.scanner.v1.ScanCVResponse.prototype.clearLevelList = function() {
  return this.setLevelList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cv.scanner.v1.Feature.prototype.toObject = function(opt_includeInstance) {
  return proto.cv.scanner.v1.Feature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cv.scanner.v1.Feature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cv.scanner.v1.Feature.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxResults: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cv.scanner.v1.Feature}
 */
proto.cv.scanner.v1.Feature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cv.scanner.v1.Feature;
  return proto.cv.scanner.v1.Feature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cv.scanner.v1.Feature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cv.scanner.v1.Feature}
 */
proto.cv.scanner.v1.Feature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.cv.scanner.v1.Feature.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cv.scanner.v1.Feature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cv.scanner.v1.Feature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cv.scanner.v1.Feature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cv.scanner.v1.Feature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMaxResults();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.cv.scanner.v1.Feature.Type = {
  FIRST_NAME: 0,
  LAST_NAME: 1,
  DATE_OF_BIRTH: 2,
  PHONE: 3,
  EMAIL: 4,
  COUNTRY: 5,
  NATIONALITY: 6,
  POSTAL_CODE: 7,
  POSTAL_AREA: 8,
  MUNICIPALITY: 9,
  COUNTY: 10,
  ADDRESS: 11,
  EMPLOYER_NAME: 12,
  POSITION_TITLE: 13,
  DATE: 14,
  INSTITUTE_NAME: 15,
  INSTITUTE_TYPE: 16,
  AREA_OF_EDUCATION: 17,
  DEGREE: 18,
  AVERAGE_GRADE: 19,
  NAME: 20,
  LEVEL: 21
};

/**
 * optional Type type = 1;
 * @return {!proto.cv.scanner.v1.Feature.Type}
 */
proto.cv.scanner.v1.Feature.prototype.getType = function() {
  return /** @type {!proto.cv.scanner.v1.Feature.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.cv.scanner.v1.Feature.Type} value
 * @return {!proto.cv.scanner.v1.Feature} returns this
 */
proto.cv.scanner.v1.Feature.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 max_results = 2;
 * @return {number}
 */
proto.cv.scanner.v1.Feature.prototype.getMaxResults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cv.scanner.v1.Feature} returns this
 */
proto.cv.scanner.v1.Feature.prototype.setMaxResults = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cv.scanner.v1.Document.prototype.toObject = function(opt_includeInstance) {
  return proto.cv.scanner.v1.Document.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cv.scanner.v1.Document} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cv.scanner.v1.Document.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: msg.getContent_asB64(),
    source: (f = msg.getSource()) && proto.cv.scanner.v1.DocumentSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cv.scanner.v1.Document}
 */
proto.cv.scanner.v1.Document.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cv.scanner.v1.Document;
  return proto.cv.scanner.v1.Document.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cv.scanner.v1.Document} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cv.scanner.v1.Document}
 */
proto.cv.scanner.v1.Document.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContent(value);
      break;
    case 2:
      var value = new proto.cv.scanner.v1.DocumentSource;
      reader.readMessage(value,proto.cv.scanner.v1.DocumentSource.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cv.scanner.v1.Document.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cv.scanner.v1.Document.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cv.scanner.v1.Document} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cv.scanner.v1.Document.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cv.scanner.v1.DocumentSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes content = 1;
 * @return {!(string|Uint8Array)}
 */
proto.cv.scanner.v1.Document.prototype.getContent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes content = 1;
 * This is a type-conversion wrapper around `getContent()`
 * @return {string}
 */
proto.cv.scanner.v1.Document.prototype.getContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContent()));
};


/**
 * optional bytes content = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContent()`
 * @return {!Uint8Array}
 */
proto.cv.scanner.v1.Document.prototype.getContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.cv.scanner.v1.Document} returns this
 */
proto.cv.scanner.v1.Document.prototype.setContent = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional DocumentSource source = 2;
 * @return {?proto.cv.scanner.v1.DocumentSource}
 */
proto.cv.scanner.v1.Document.prototype.getSource = function() {
  return /** @type{?proto.cv.scanner.v1.DocumentSource} */ (
    jspb.Message.getWrapperField(this, proto.cv.scanner.v1.DocumentSource, 2));
};


/**
 * @param {?proto.cv.scanner.v1.DocumentSource|undefined} value
 * @return {!proto.cv.scanner.v1.Document} returns this
*/
proto.cv.scanner.v1.Document.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cv.scanner.v1.Document} returns this
 */
proto.cv.scanner.v1.Document.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cv.scanner.v1.Document.prototype.hasSource = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cv.scanner.v1.DocumentSource.prototype.toObject = function(opt_includeInstance) {
  return proto.cv.scanner.v1.DocumentSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cv.scanner.v1.DocumentSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cv.scanner.v1.DocumentSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    httpUri: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cv.scanner.v1.DocumentSource}
 */
proto.cv.scanner.v1.DocumentSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cv.scanner.v1.DocumentSource;
  return proto.cv.scanner.v1.DocumentSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cv.scanner.v1.DocumentSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cv.scanner.v1.DocumentSource}
 */
proto.cv.scanner.v1.DocumentSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHttpUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cv.scanner.v1.DocumentSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cv.scanner.v1.DocumentSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cv.scanner.v1.DocumentSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cv.scanner.v1.DocumentSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHttpUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string http_uri = 1;
 * @return {string}
 */
proto.cv.scanner.v1.DocumentSource.prototype.getHttpUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cv.scanner.v1.DocumentSource} returns this
 */
proto.cv.scanner.v1.DocumentSource.prototype.setHttpUri = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.cv.scanner.v1);
