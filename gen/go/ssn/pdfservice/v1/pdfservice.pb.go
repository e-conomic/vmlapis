// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: ssn/pdfservice/v1/pdfservice.proto

package pdfservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RasterizePdfRequest_Format int32

const (
	RasterizePdfRequest_PNG  RasterizePdfRequest_Format = 0
	RasterizePdfRequest_JPEG RasterizePdfRequest_Format = 1
	RasterizePdfRequest_WEBP RasterizePdfRequest_Format = 2
)

// Enum value maps for RasterizePdfRequest_Format.
var (
	RasterizePdfRequest_Format_name = map[int32]string{
		0: "PNG",
		1: "JPEG",
		2: "WEBP",
	}
	RasterizePdfRequest_Format_value = map[string]int32{
		"PNG":  0,
		"JPEG": 1,
		"WEBP": 2,
	}
)

func (x RasterizePdfRequest_Format) Enum() *RasterizePdfRequest_Format {
	p := new(RasterizePdfRequest_Format)
	*p = x
	return p
}

func (x RasterizePdfRequest_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RasterizePdfRequest_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_ssn_pdfservice_v1_pdfservice_proto_enumTypes[0].Descriptor()
}

func (RasterizePdfRequest_Format) Type() protoreflect.EnumType {
	return &file_ssn_pdfservice_v1_pdfservice_proto_enumTypes[0]
}

func (x RasterizePdfRequest_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RasterizePdfRequest_Format.Descriptor instead.
func (RasterizePdfRequest_Format) EnumDescriptor() ([]byte, []int) {
	return file_ssn_pdfservice_v1_pdfservice_proto_rawDescGZIP(), []int{0, 0}
}

type RasterizePdfRequest_ColorSpace int32

const (
	RasterizePdfRequest_GRAY  RasterizePdfRequest_ColorSpace = 0
	RasterizePdfRequest_COLOR RasterizePdfRequest_ColorSpace = 1
)

// Enum value maps for RasterizePdfRequest_ColorSpace.
var (
	RasterizePdfRequest_ColorSpace_name = map[int32]string{
		0: "GRAY",
		1: "COLOR",
	}
	RasterizePdfRequest_ColorSpace_value = map[string]int32{
		"GRAY":  0,
		"COLOR": 1,
	}
)

func (x RasterizePdfRequest_ColorSpace) Enum() *RasterizePdfRequest_ColorSpace {
	p := new(RasterizePdfRequest_ColorSpace)
	*p = x
	return p
}

func (x RasterizePdfRequest_ColorSpace) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RasterizePdfRequest_ColorSpace) Descriptor() protoreflect.EnumDescriptor {
	return file_ssn_pdfservice_v1_pdfservice_proto_enumTypes[1].Descriptor()
}

func (RasterizePdfRequest_ColorSpace) Type() protoreflect.EnumType {
	return &file_ssn_pdfservice_v1_pdfservice_proto_enumTypes[1]
}

func (x RasterizePdfRequest_ColorSpace) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RasterizePdfRequest_ColorSpace.Descriptor instead.
func (RasterizePdfRequest_ColorSpace) EnumDescriptor() ([]byte, []int) {
	return file_ssn_pdfservice_v1_pdfservice_proto_rawDescGZIP(), []int{0, 1}
}

type RasterizePdfRequest_PageOption int32

const (
	RasterizePdfRequest_FIRST_LAST RasterizePdfRequest_PageOption = 0
	RasterizePdfRequest_FIRST      RasterizePdfRequest_PageOption = 1
	RasterizePdfRequest_LAST       RasterizePdfRequest_PageOption = 2
	RasterizePdfRequest_ALL        RasterizePdfRequest_PageOption = 3
)

// Enum value maps for RasterizePdfRequest_PageOption.
var (
	RasterizePdfRequest_PageOption_name = map[int32]string{
		0: "FIRST_LAST",
		1: "FIRST",
		2: "LAST",
		3: "ALL",
	}
	RasterizePdfRequest_PageOption_value = map[string]int32{
		"FIRST_LAST": 0,
		"FIRST":      1,
		"LAST":       2,
		"ALL":        3,
	}
)

func (x RasterizePdfRequest_PageOption) Enum() *RasterizePdfRequest_PageOption {
	p := new(RasterizePdfRequest_PageOption)
	*p = x
	return p
}

func (x RasterizePdfRequest_PageOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RasterizePdfRequest_PageOption) Descriptor() protoreflect.EnumDescriptor {
	return file_ssn_pdfservice_v1_pdfservice_proto_enumTypes[2].Descriptor()
}

func (RasterizePdfRequest_PageOption) Type() protoreflect.EnumType {
	return &file_ssn_pdfservice_v1_pdfservice_proto_enumTypes[2]
}

func (x RasterizePdfRequest_PageOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RasterizePdfRequest_PageOption.Descriptor instead.
func (RasterizePdfRequest_PageOption) EnumDescriptor() ([]byte, []int) {
	return file_ssn_pdfservice_v1_pdfservice_proto_rawDescGZIP(), []int{0, 2}
}

type RasterizePdfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []byte                         `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Dpi    uint32                         `protobuf:"varint,2,opt,name=dpi,proto3" json:"dpi,omitempty"`
	Format RasterizePdfRequest_Format     `protobuf:"varint,3,opt,name=format,proto3,enum=ssn.pdfservice.v1.RasterizePdfRequest_Format" json:"format,omitempty"`
	Color  RasterizePdfRequest_ColorSpace `protobuf:"varint,4,opt,name=color,proto3,enum=ssn.pdfservice.v1.RasterizePdfRequest_ColorSpace" json:"color,omitempty"`
	Pages  RasterizePdfRequest_PageOption `protobuf:"varint,5,opt,name=pages,proto3,enum=ssn.pdfservice.v1.RasterizePdfRequest_PageOption" json:"pages,omitempty"`
}

func (x *RasterizePdfRequest) Reset() {
	*x = RasterizePdfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssn_pdfservice_v1_pdfservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RasterizePdfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RasterizePdfRequest) ProtoMessage() {}

func (x *RasterizePdfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssn_pdfservice_v1_pdfservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RasterizePdfRequest.ProtoReflect.Descriptor instead.
func (*RasterizePdfRequest) Descriptor() ([]byte, []int) {
	return file_ssn_pdfservice_v1_pdfservice_proto_rawDescGZIP(), []int{0}
}

func (x *RasterizePdfRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RasterizePdfRequest) GetDpi() uint32 {
	if x != nil {
		return x.Dpi
	}
	return 0
}

func (x *RasterizePdfRequest) GetFormat() RasterizePdfRequest_Format {
	if x != nil {
		return x.Format
	}
	return RasterizePdfRequest_PNG
}

func (x *RasterizePdfRequest) GetColor() RasterizePdfRequest_ColorSpace {
	if x != nil {
		return x.Color
	}
	return RasterizePdfRequest_GRAY
}

func (x *RasterizePdfRequest) GetPages() RasterizePdfRequest_PageOption {
	if x != nil {
		return x.Pages
	}
	return RasterizePdfRequest_FIRST_LAST
}

type RasterizePdfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  uint32  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Data   []byte  `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Width  uint32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height uint32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Scale  float64 `protobuf:"fixed64,5,opt,name=scale,proto3" json:"scale,omitempty"` // Compared to a 72 dpi page
}

func (x *RasterizePdfResponse) Reset() {
	*x = RasterizePdfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssn_pdfservice_v1_pdfservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RasterizePdfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RasterizePdfResponse) ProtoMessage() {}

func (x *RasterizePdfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssn_pdfservice_v1_pdfservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RasterizePdfResponse.ProtoReflect.Descriptor instead.
func (*RasterizePdfResponse) Descriptor() ([]byte, []int) {
	return file_ssn_pdfservice_v1_pdfservice_proto_rawDescGZIP(), []int{1}
}

func (x *RasterizePdfResponse) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RasterizePdfResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RasterizePdfResponse) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *RasterizePdfResponse) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *RasterizePdfResponse) GetScale() float64 {
	if x != nil {
		return x.Scale
	}
	return 0
}

var File_ssn_pdfservice_v1_pdfservice_proto protoreflect.FileDescriptor

var file_ssn_pdfservice_v1_pdfservice_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x73, 0x6e, 0x2f, 0x70, 0x64, 0x66, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x64, 0x66, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x73, 0x73, 0x6e, 0x2e, 0x70, 0x64, 0x66, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x9a, 0x03, 0x0a, 0x13, 0x52, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x69, 0x7a, 0x65, 0x50, 0x64, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x70, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x64, 0x70, 0x69, 0x12, 0x45, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x73, 0x73, 0x6e, 0x2e, 0x70, 0x64, 0x66, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x69, 0x7a, 0x65, 0x50, 0x64, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x47, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x73, 0x73,
	0x6e, 0x2e, 0x70, 0x64, 0x66, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x50, 0x64, 0x66, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x73, 0x73, 0x6e, 0x2e, 0x70, 0x64, 0x66, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69,
	0x7a, 0x65, 0x50, 0x64, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x22, 0x25,
	0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4e, 0x47, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x50, 0x45, 0x47, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x57,
	0x45, 0x42, 0x50, 0x10, 0x02, 0x22, 0x21, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x52, 0x41, 0x59, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x10, 0x01, 0x22, 0x3a, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f,
	0x4c, 0x41, 0x53, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x49, 0x52, 0x53, 0x54, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x41, 0x53, 0x54, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x41,
	0x4c, 0x4c, 0x10, 0x03, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x52, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69,
	0x7a, 0x65, 0x50, 0x64, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x32, 0x6f, 0x0a, 0x0a, 0x50,
	0x64, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x61, 0x0a, 0x0c, 0x52, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x50, 0x64, 0x66, 0x12, 0x26, 0x2e, 0x73, 0x73, 0x6e, 0x2e,
	0x70, 0x64, 0x66, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x50, 0x64, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x73, 0x73, 0x6e, 0x2e, 0x70, 0x64, 0x66, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x65, 0x50,
	0x64, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x53, 0x42, 0x0f,
	0x50, 0x64, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a,
	0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x2d, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x2f, 0x76, 0x6d, 0x6c, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x73, 0x6e, 0x2f, 0x70, 0x64, 0x66, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x64, 0x66, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ssn_pdfservice_v1_pdfservice_proto_rawDescOnce sync.Once
	file_ssn_pdfservice_v1_pdfservice_proto_rawDescData = file_ssn_pdfservice_v1_pdfservice_proto_rawDesc
)

func file_ssn_pdfservice_v1_pdfservice_proto_rawDescGZIP() []byte {
	file_ssn_pdfservice_v1_pdfservice_proto_rawDescOnce.Do(func() {
		file_ssn_pdfservice_v1_pdfservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_ssn_pdfservice_v1_pdfservice_proto_rawDescData)
	})
	return file_ssn_pdfservice_v1_pdfservice_proto_rawDescData
}

var file_ssn_pdfservice_v1_pdfservice_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_ssn_pdfservice_v1_pdfservice_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ssn_pdfservice_v1_pdfservice_proto_goTypes = []interface{}{
	(RasterizePdfRequest_Format)(0),     // 0: ssn.pdfservice.v1.RasterizePdfRequest.Format
	(RasterizePdfRequest_ColorSpace)(0), // 1: ssn.pdfservice.v1.RasterizePdfRequest.ColorSpace
	(RasterizePdfRequest_PageOption)(0), // 2: ssn.pdfservice.v1.RasterizePdfRequest.PageOption
	(*RasterizePdfRequest)(nil),         // 3: ssn.pdfservice.v1.RasterizePdfRequest
	(*RasterizePdfResponse)(nil),        // 4: ssn.pdfservice.v1.RasterizePdfResponse
}
var file_ssn_pdfservice_v1_pdfservice_proto_depIdxs = []int32{
	0, // 0: ssn.pdfservice.v1.RasterizePdfRequest.format:type_name -> ssn.pdfservice.v1.RasterizePdfRequest.Format
	1, // 1: ssn.pdfservice.v1.RasterizePdfRequest.color:type_name -> ssn.pdfservice.v1.RasterizePdfRequest.ColorSpace
	2, // 2: ssn.pdfservice.v1.RasterizePdfRequest.pages:type_name -> ssn.pdfservice.v1.RasterizePdfRequest.PageOption
	3, // 3: ssn.pdfservice.v1.PdfService.RasterizePdf:input_type -> ssn.pdfservice.v1.RasterizePdfRequest
	4, // 4: ssn.pdfservice.v1.PdfService.RasterizePdf:output_type -> ssn.pdfservice.v1.RasterizePdfResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_ssn_pdfservice_v1_pdfservice_proto_init() }
func file_ssn_pdfservice_v1_pdfservice_proto_init() {
	if File_ssn_pdfservice_v1_pdfservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ssn_pdfservice_v1_pdfservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RasterizePdfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssn_pdfservice_v1_pdfservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RasterizePdfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ssn_pdfservice_v1_pdfservice_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ssn_pdfservice_v1_pdfservice_proto_goTypes,
		DependencyIndexes: file_ssn_pdfservice_v1_pdfservice_proto_depIdxs,
		EnumInfos:         file_ssn_pdfservice_v1_pdfservice_proto_enumTypes,
		MessageInfos:      file_ssn_pdfservice_v1_pdfservice_proto_msgTypes,
	}.Build()
	File_ssn_pdfservice_v1_pdfservice_proto = out.File
	file_ssn_pdfservice_v1_pdfservice_proto_rawDesc = nil
	file_ssn_pdfservice_v1_pdfservice_proto_goTypes = nil
	file_ssn_pdfservice_v1_pdfservice_proto_depIdxs = nil
}
