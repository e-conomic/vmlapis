// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ssn/featuregen/v1/featuregen.proto

package featuregen

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _type "github.com/e-conomic/vmlapis/gen/go/ssn/type"
import example "github.com/tensorflow/tensorflow/tensorflow/go/core/example"
import date "google.golang.org/genproto/googleapis/type/date"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FeatureGenRequest struct {
	TruthLabels          *TruthLabels          `protobuf:"bytes,1,opt,name=truth_labels,json=truthLabels,proto3" json:"truth_labels,omitempty"`
	TextAnnotation       *_type.TextAnnotation `protobuf:"bytes,2,opt,name=text_annotation,json=textAnnotation,proto3" json:"text_annotation,omitempty"`
	Origin               string                `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FeatureGenRequest) Reset()         { *m = FeatureGenRequest{} }
func (m *FeatureGenRequest) String() string { return proto.CompactTextString(m) }
func (*FeatureGenRequest) ProtoMessage()    {}
func (*FeatureGenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_featuregen_f7a7574c62972bb1, []int{0}
}
func (m *FeatureGenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureGenRequest.Unmarshal(m, b)
}
func (m *FeatureGenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureGenRequest.Marshal(b, m, deterministic)
}
func (dst *FeatureGenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureGenRequest.Merge(dst, src)
}
func (m *FeatureGenRequest) XXX_Size() int {
	return xxx_messageInfo_FeatureGenRequest.Size(m)
}
func (m *FeatureGenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureGenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureGenRequest proto.InternalMessageInfo

func (m *FeatureGenRequest) GetTruthLabels() *TruthLabels {
	if m != nil {
		return m.TruthLabels
	}
	return nil
}

func (m *FeatureGenRequest) GetTextAnnotation() *_type.TextAnnotation {
	if m != nil {
		return m.TextAnnotation
	}
	return nil
}

func (m *FeatureGenRequest) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

type FeatureGenResponse struct {
	Example              *example.Example `protobuf:"bytes,1,opt,name=example,proto3" json:"example,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *FeatureGenResponse) Reset()         { *m = FeatureGenResponse{} }
func (m *FeatureGenResponse) String() string { return proto.CompactTextString(m) }
func (*FeatureGenResponse) ProtoMessage()    {}
func (*FeatureGenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_featuregen_f7a7574c62972bb1, []int{1}
}
func (m *FeatureGenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureGenResponse.Unmarshal(m, b)
}
func (m *FeatureGenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureGenResponse.Marshal(b, m, deterministic)
}
func (dst *FeatureGenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureGenResponse.Merge(dst, src)
}
func (m *FeatureGenResponse) XXX_Size() int {
	return xxx_messageInfo_FeatureGenResponse.Size(m)
}
func (m *FeatureGenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureGenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureGenResponse proto.InternalMessageInfo

func (m *FeatureGenResponse) GetExample() *example.Example {
	if m != nil {
		return m.Example
	}
	return nil
}

type TruthLabels struct {
	TotalInclVat                float32    `protobuf:"fixed32,1,opt,name=total_incl_vat,json=totalInclVat,proto3" json:"total_incl_vat,omitempty"`
	TotalVat                    float32    `protobuf:"fixed32,2,opt,name=total_vat,json=totalVat,proto3" json:"total_vat,omitempty"`
	TotalExclVat                float32    `protobuf:"fixed32,3,opt,name=total_excl_vat,json=totalExclVat,proto3" json:"total_excl_vat,omitempty"`
	OrderDate                   *date.Date `protobuf:"bytes,4,opt,name=order_date,json=orderDate,proto3" json:"order_date,omitempty"`
	PaymentDueDate              *date.Date `protobuf:"bytes,5,opt,name=payment_due_date,json=paymentDueDate,proto3" json:"payment_due_date,omitempty"`
	DocumentType                string     `protobuf:"bytes,6,opt,name=document_type,json=documentType,proto3" json:"document_type,omitempty"`
	Currency                    string     `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	CreditCardNumber            string     `protobuf:"bytes,8,opt,name=credit_card_number,json=creditCardNumber,proto3" json:"credit_card_number,omitempty"`
	PaymentMethod               string     `protobuf:"bytes,9,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	OcrLineDkType               string     `protobuf:"bytes,10,opt,name=ocr_line_dk_type,json=ocrLineDkType,proto3" json:"ocr_line_dk_type,omitempty"`
	OcrLineDkPaymentId          string     `protobuf:"bytes,11,opt,name=ocr_line_dk_payment_id,json=ocrLineDkPaymentId,proto3" json:"ocr_line_dk_payment_id,omitempty"`
	OcrLineDkCreditorId         string     `protobuf:"bytes,12,opt,name=ocr_line_dk_creditor_id,json=ocrLineDkCreditorId,proto3" json:"ocr_line_dk_creditor_id,omitempty"`
	OcrLineSePaymentId          string     `protobuf:"bytes,13,opt,name=ocr_line_se_payment_id,json=ocrLineSePaymentId,proto3" json:"ocr_line_se_payment_id,omitempty"`
	OcrLineSeBankgiroCreditorId string     `protobuf:"bytes,14,opt,name=ocr_line_se_bankgiro_creditor_id,json=ocrLineSeBankgiroCreditorId,proto3" json:"ocr_line_se_bankgiro_creditor_id,omitempty"`
	OcrLineSePlusgiroCreditorId string     `protobuf:"bytes,15,opt,name=ocr_line_se_plusgiro_creditor_id,json=ocrLineSePlusgiroCreditorId,proto3" json:"ocr_line_se_plusgiro_creditor_id,omitempty"`
	OcrLineNoPaymentId          string     `protobuf:"bytes,16,opt,name=ocr_line_no_payment_id,json=ocrLineNoPaymentId,proto3" json:"ocr_line_no_payment_id,omitempty"`
	OcrLineFiPaymentId          string     `protobuf:"bytes,17,opt,name=ocr_line_fi_payment_id,json=ocrLineFiPaymentId,proto3" json:"ocr_line_fi_payment_id,omitempty"`
	SupplierName                string     `protobuf:"bytes,18,opt,name=supplier_name,json=supplierName,proto3" json:"supplier_name,omitempty"`
	SupplierCorporateId         string     `protobuf:"bytes,19,opt,name=supplier_corporate_id,json=supplierCorporateId,proto3" json:"supplier_corporate_id,omitempty"`
	SupplierCountryCode         string     `protobuf:"bytes,20,opt,name=supplier_country_code,json=supplierCountryCode,proto3" json:"supplier_country_code,omitempty"`
	InvoiceNumber               string     `protobuf:"bytes,21,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}   `json:"-"`
	XXX_unrecognized            []byte     `json:"-"`
	XXX_sizecache               int32      `json:"-"`
}

func (m *TruthLabels) Reset()         { *m = TruthLabels{} }
func (m *TruthLabels) String() string { return proto.CompactTextString(m) }
func (*TruthLabels) ProtoMessage()    {}
func (*TruthLabels) Descriptor() ([]byte, []int) {
	return fileDescriptor_featuregen_f7a7574c62972bb1, []int{2}
}
func (m *TruthLabels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TruthLabels.Unmarshal(m, b)
}
func (m *TruthLabels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TruthLabels.Marshal(b, m, deterministic)
}
func (dst *TruthLabels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TruthLabels.Merge(dst, src)
}
func (m *TruthLabels) XXX_Size() int {
	return xxx_messageInfo_TruthLabels.Size(m)
}
func (m *TruthLabels) XXX_DiscardUnknown() {
	xxx_messageInfo_TruthLabels.DiscardUnknown(m)
}

var xxx_messageInfo_TruthLabels proto.InternalMessageInfo

func (m *TruthLabels) GetTotalInclVat() float32 {
	if m != nil {
		return m.TotalInclVat
	}
	return 0
}

func (m *TruthLabels) GetTotalVat() float32 {
	if m != nil {
		return m.TotalVat
	}
	return 0
}

func (m *TruthLabels) GetTotalExclVat() float32 {
	if m != nil {
		return m.TotalExclVat
	}
	return 0
}

func (m *TruthLabels) GetOrderDate() *date.Date {
	if m != nil {
		return m.OrderDate
	}
	return nil
}

func (m *TruthLabels) GetPaymentDueDate() *date.Date {
	if m != nil {
		return m.PaymentDueDate
	}
	return nil
}

func (m *TruthLabels) GetDocumentType() string {
	if m != nil {
		return m.DocumentType
	}
	return ""
}

func (m *TruthLabels) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *TruthLabels) GetCreditCardNumber() string {
	if m != nil {
		return m.CreditCardNumber
	}
	return ""
}

func (m *TruthLabels) GetPaymentMethod() string {
	if m != nil {
		return m.PaymentMethod
	}
	return ""
}

func (m *TruthLabels) GetOcrLineDkType() string {
	if m != nil {
		return m.OcrLineDkType
	}
	return ""
}

func (m *TruthLabels) GetOcrLineDkPaymentId() string {
	if m != nil {
		return m.OcrLineDkPaymentId
	}
	return ""
}

func (m *TruthLabels) GetOcrLineDkCreditorId() string {
	if m != nil {
		return m.OcrLineDkCreditorId
	}
	return ""
}

func (m *TruthLabels) GetOcrLineSePaymentId() string {
	if m != nil {
		return m.OcrLineSePaymentId
	}
	return ""
}

func (m *TruthLabels) GetOcrLineSeBankgiroCreditorId() string {
	if m != nil {
		return m.OcrLineSeBankgiroCreditorId
	}
	return ""
}

func (m *TruthLabels) GetOcrLineSePlusgiroCreditorId() string {
	if m != nil {
		return m.OcrLineSePlusgiroCreditorId
	}
	return ""
}

func (m *TruthLabels) GetOcrLineNoPaymentId() string {
	if m != nil {
		return m.OcrLineNoPaymentId
	}
	return ""
}

func (m *TruthLabels) GetOcrLineFiPaymentId() string {
	if m != nil {
		return m.OcrLineFiPaymentId
	}
	return ""
}

func (m *TruthLabels) GetSupplierName() string {
	if m != nil {
		return m.SupplierName
	}
	return ""
}

func (m *TruthLabels) GetSupplierCorporateId() string {
	if m != nil {
		return m.SupplierCorporateId
	}
	return ""
}

func (m *TruthLabels) GetSupplierCountryCode() string {
	if m != nil {
		return m.SupplierCountryCode
	}
	return ""
}

func (m *TruthLabels) GetInvoiceNumber() string {
	if m != nil {
		return m.InvoiceNumber
	}
	return ""
}

func init() {
	proto.RegisterType((*FeatureGenRequest)(nil), "ssn.featuregen.v1.FeatureGenRequest")
	proto.RegisterType((*FeatureGenResponse)(nil), "ssn.featuregen.v1.FeatureGenResponse")
	proto.RegisterType((*TruthLabels)(nil), "ssn.featuregen.v1.TruthLabels")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FeatureGenClient is the client API for FeatureGen service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FeatureGenClient interface {
	GenerateFeatures(ctx context.Context, in *FeatureGenRequest, opts ...grpc.CallOption) (*FeatureGenResponse, error)
}

type featureGenClient struct {
	cc *grpc.ClientConn
}

func NewFeatureGenClient(cc *grpc.ClientConn) FeatureGenClient {
	return &featureGenClient{cc}
}

func (c *featureGenClient) GenerateFeatures(ctx context.Context, in *FeatureGenRequest, opts ...grpc.CallOption) (*FeatureGenResponse, error) {
	out := new(FeatureGenResponse)
	err := c.cc.Invoke(ctx, "/ssn.featuregen.v1.FeatureGen/GenerateFeatures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FeatureGenServer is the server API for FeatureGen service.
type FeatureGenServer interface {
	GenerateFeatures(context.Context, *FeatureGenRequest) (*FeatureGenResponse, error)
}

func RegisterFeatureGenServer(s *grpc.Server, srv FeatureGenServer) {
	s.RegisterService(&_FeatureGen_serviceDesc, srv)
}

func _FeatureGen_GenerateFeatures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FeatureGenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureGenServer).GenerateFeatures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ssn.featuregen.v1.FeatureGen/GenerateFeatures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureGenServer).GenerateFeatures(ctx, req.(*FeatureGenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FeatureGen_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ssn.featuregen.v1.FeatureGen",
	HandlerType: (*FeatureGenServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateFeatures",
			Handler:    _FeatureGen_GenerateFeatures_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ssn/featuregen/v1/featuregen.proto",
}

func init() {
	proto.RegisterFile("ssn/featuregen/v1/featuregen.proto", fileDescriptor_featuregen_f7a7574c62972bb1)
}

var fileDescriptor_featuregen_f7a7574c62972bb1 = []byte{
	// 698 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0x4d, 0x4f, 0x1b, 0x3b,
	0x14, 0x86, 0x15, 0xb8, 0x17, 0x88, 0xf3, 0x41, 0x62, 0x2e, 0xdc, 0x51, 0x90, 0x10, 0x0a, 0xa0,
	0xb2, 0x68, 0x27, 0x85, 0x76, 0xd7, 0x15, 0x84, 0x0f, 0x21, 0x51, 0x84, 0x52, 0xd4, 0x45, 0x37,
	0x96, 0x33, 0x3e, 0x04, 0x8b, 0x19, 0x7b, 0xea, 0xf1, 0xa4, 0xc9, 0xcf, 0xea, 0xff, 0xea, 0x8f,
	0xa8, 0xc6, 0x9e, 0x0f, 0x27, 0x14, 0x75, 0x95, 0xf8, 0x9c, 0xe7, 0x7d, 0xcf, 0xeb, 0xb1, 0x65,
	0xd4, 0x4f, 0x12, 0x31, 0x78, 0x04, 0xaa, 0x53, 0x05, 0x13, 0x10, 0x83, 0xe9, 0x89, 0xb3, 0xf2,
	0x63, 0x25, 0xb5, 0xc4, 0xdd, 0x24, 0x11, 0xbe, 0x53, 0x9d, 0x9e, 0xf4, 0x76, 0x26, 0x52, 0x4e,
	0x42, 0x18, 0xe8, 0x79, 0x0c, 0x03, 0x46, 0x35, 0x58, 0xb4, 0xb7, 0x97, 0xd9, 0x99, 0xa2, 0x86,
	0x99, 0x26, 0x54, 0x08, 0xa9, 0xa9, 0xe6, 0x32, 0xb7, 0xea, 0x1d, 0x69, 0x10, 0x89, 0x54, 0x8f,
	0xa1, 0xfc, 0x31, 0x08, 0xa4, 0x82, 0x01, 0xcc, 0x68, 0x14, 0x87, 0xe5, 0xaf, 0xc5, 0xfa, 0x3f,
	0x6b, 0xa8, 0x7b, 0x65, 0x07, 0x5e, 0x83, 0x18, 0xc1, 0xf7, 0x14, 0x12, 0x8d, 0xcf, 0x50, 0x53,
	0xab, 0x54, 0x3f, 0x91, 0x90, 0x8e, 0x21, 0x4c, 0xbc, 0xda, 0x7e, 0xed, 0xb8, 0x71, 0xba, 0xe7,
	0xbf, 0x88, 0xe7, 0x3f, 0x64, 0xd8, 0xad, 0xa1, 0x46, 0x0d, 0x5d, 0x2d, 0xf0, 0x19, 0xda, 0x5c,
	0x0a, 0xe6, 0xad, 0x18, 0x17, 0xcf, 0xb8, 0x64, 0xc9, 0xfd, 0x07, 0x98, 0xe9, 0xb3, 0xb2, 0x3f,
	0x6a, 0xeb, 0x85, 0x35, 0xde, 0x41, 0x6b, 0x52, 0xf1, 0x09, 0x17, 0xde, 0xea, 0x7e, 0xed, 0xb8,
	0x3e, 0xca, 0x57, 0xfd, 0x21, 0xc2, 0x6e, 0xe4, 0x24, 0x96, 0x22, 0x01, 0xfc, 0x0e, 0xad, 0xe7,
	0x5b, 0xcb, 0xe3, 0x6e, 0xf9, 0xd5, 0x27, 0xf0, 0x2f, 0x6d, 0x6b, 0x54, 0x30, 0xfd, 0x5f, 0xeb,
	0xa8, 0xe1, 0x84, 0xc7, 0x87, 0xa8, 0xad, 0xa5, 0xa6, 0x21, 0xe1, 0x22, 0x08, 0xc9, 0x94, 0x6a,
	0xe3, 0xb2, 0x32, 0x6a, 0x9a, 0xea, 0x8d, 0x08, 0xc2, 0xaf, 0x54, 0xe3, 0x5d, 0x54, 0xb7, 0x54,
	0x06, 0xac, 0x18, 0x60, 0xc3, 0x14, 0xb2, 0x66, 0x69, 0x01, 0xb3, 0xdc, 0x62, 0xd5, 0xb1, 0xb8,
	0x9c, 0x59, 0x8b, 0xf7, 0x08, 0x49, 0xc5, 0x40, 0x91, 0xec, 0x30, 0xbd, 0x7f, 0x4c, 0xd4, 0xae,
	0x6f, 0x4f, 0xd9, 0x7e, 0x96, 0x0b, 0xaa, 0x61, 0x54, 0x37, 0x50, 0xf6, 0x17, 0x7f, 0x42, 0x9d,
	0x98, 0xce, 0x23, 0x10, 0x9a, 0xb0, 0x14, 0xac, 0xee, 0xdf, 0xd7, 0x74, 0xed, 0x1c, 0xbd, 0x48,
	0xc1, 0x88, 0x0f, 0x50, 0x8b, 0xc9, 0x20, 0x35, 0xea, 0x8c, 0xf2, 0xd6, 0xcc, 0xb7, 0x6c, 0x16,
	0xc5, 0x87, 0x79, 0x0c, 0xb8, 0x87, 0x36, 0x82, 0x54, 0x29, 0x10, 0xc1, 0xdc, 0x5b, 0x37, 0xfd,
	0x72, 0x8d, 0xdf, 0x22, 0x1c, 0x28, 0x60, 0x5c, 0x93, 0x80, 0x2a, 0x46, 0x44, 0x1a, 0x8d, 0x41,
	0x79, 0x1b, 0x86, 0xea, 0xd8, 0xce, 0x90, 0x2a, 0x76, 0x67, 0xea, 0xf8, 0x08, 0x15, 0x01, 0x48,
	0x04, 0xfa, 0x49, 0x32, 0xaf, 0x6e, 0xc8, 0x56, 0x5e, 0xfd, 0x6c, 0x8a, 0xf8, 0x0d, 0xea, 0xc8,
	0x40, 0x91, 0x90, 0x0b, 0x20, 0xec, 0xd9, 0x06, 0x43, 0x16, 0x94, 0x81, 0xba, 0xe5, 0x02, 0x2e,
	0x9e, 0x4d, 0xb2, 0x53, 0xb4, 0xe3, 0x82, 0x85, 0x37, 0x67, 0x5e, 0xc3, 0xe0, 0xb8, 0xc4, 0xef,
	0x6d, 0xeb, 0x86, 0xe1, 0x8f, 0xe8, 0x7f, 0x57, 0x63, 0x33, 0x4a, 0x95, 0x89, 0x9a, 0x46, 0xb4,
	0x55, 0x8a, 0x86, 0x79, 0xef, 0x86, 0x2d, 0x4c, 0x4a, 0xc0, 0x9d, 0xd4, 0x5a, 0x98, 0xf4, 0x05,
	0xaa, 0x49, 0x97, 0x68, 0xdf, 0xd5, 0x8c, 0xa9, 0x78, 0x9e, 0x70, 0x25, 0x17, 0x46, 0xb6, 0x8d,
	0x7a, 0xb7, 0x54, 0x9f, 0xe7, 0x90, 0x33, 0x7a, 0xc9, 0x26, 0x0e, 0xd3, 0xe4, 0x85, 0xcd, 0xe6,
	0x92, 0xcd, 0x7d, 0x0e, 0xbd, 0xb2, 0x03, 0x21, 0xdd, 0x1d, 0x74, 0x16, 0x76, 0x70, 0x27, 0xab,
	0x1d, 0xb8, 0x9a, 0x47, 0xee, 0x6a, 0xba, 0x0b, 0x9a, 0x2b, 0x5e, 0x69, 0x0e, 0x50, 0x2b, 0x49,
	0xe3, 0x38, 0xe4, 0xa0, 0x88, 0xa0, 0x11, 0x78, 0xd8, 0x5e, 0xa9, 0xa2, 0x78, 0x47, 0xa3, 0xec,
	0xe0, 0xb6, 0x4b, 0x28, 0x90, 0x2a, 0x96, 0x8a, 0x6a, 0xc8, 0x7c, 0xb7, 0xec, 0x11, 0x14, 0xcd,
	0x61, 0xd1, 0x33, 0x61, 0x5c, 0x4d, 0x2a, 0xb4, 0x9a, 0x93, 0x40, 0x32, 0xf0, 0xfe, 0x5b, 0xd6,
	0x98, 0xde, 0x50, 0x32, 0xc8, 0x2e, 0x1c, 0x17, 0x53, 0xc9, 0x03, 0x28, 0xae, 0xe6, 0xb6, 0xbd,
	0x47, 0x79, 0xd5, 0xde, 0xcb, 0xd3, 0x08, 0xa1, 0xea, 0xcd, 0xc0, 0x04, 0x75, 0xae, 0x41, 0x40,
	0x36, 0x36, 0xaf, 0x26, 0xf8, 0xf0, 0x0f, 0xaf, 0xdb, 0x8b, 0x97, 0xb1, 0x77, 0xf4, 0x17, 0xca,
	0x3e, 0x46, 0xe7, 0xcd, 0x6f, 0xa8, 0x62, 0xc6, 0x6b, 0xe6, 0xad, 0xfd, 0xf0, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0xcf, 0x89, 0x80, 0xb6, 0x03, 0x06, 0x00, 0x00,
}
