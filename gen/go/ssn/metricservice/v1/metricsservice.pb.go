// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: ssn/metricservice/v1/metricsservice.proto

package metricsservice

import (
	v1 "github.com/e-conomic/vmlapis/gen/go/ssn/dataservice/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CalculateMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredictionValues *v1.PredictionValues `protobuf:"bytes,3,opt,name=prediction_values,json=predictionValues,proto3" json:"prediction_values,omitempty"`
	TrueValues       *v1.TrueValues       `protobuf:"bytes,4,opt,name=true_values,json=trueValues,proto3" json:"true_values,omitempty"`
}

func (x *CalculateMetricsRequest) Reset() {
	*x = CalculateMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssn_metricservice_v1_metricsservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateMetricsRequest) ProtoMessage() {}

func (x *CalculateMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssn_metricservice_v1_metricsservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateMetricsRequest.ProtoReflect.Descriptor instead.
func (*CalculateMetricsRequest) Descriptor() ([]byte, []int) {
	return file_ssn_metricservice_v1_metricsservice_proto_rawDescGZIP(), []int{0}
}

func (x *CalculateMetricsRequest) GetPredictionValues() *v1.PredictionValues {
	if x != nil {
		return x.PredictionValues
	}
	return nil
}

func (x *CalculateMetricsRequest) GetTrueValues() *v1.TrueValues {
	if x != nil {
		return x.TrueValues
	}
	return nil
}

type CalculateMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentSimilarity float32 `protobuf:"fixed32,1,opt,name=document_similarity,json=documentSimilarity,proto3" json:"document_similarity,omitempty"`
}

func (x *CalculateMetricsResponse) Reset() {
	*x = CalculateMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssn_metricservice_v1_metricsservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateMetricsResponse) ProtoMessage() {}

func (x *CalculateMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssn_metricservice_v1_metricsservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateMetricsResponse.ProtoReflect.Descriptor instead.
func (*CalculateMetricsResponse) Descriptor() ([]byte, []int) {
	return file_ssn_metricservice_v1_metricsservice_proto_rawDescGZIP(), []int{1}
}

func (x *CalculateMetricsResponse) GetDocumentSimilarity() float32 {
	if x != nil {
		return x.DocumentSimilarity
	}
	return 0
}

var File_ssn_metricservice_v1_metricsservice_proto protoreflect.FileDescriptor

var file_ssn_metricservice_v1_metricsservice_proto_rawDesc = []byte{
	0x0a, 0x29, 0x73, 0x73, 0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x73, 0x73, 0x6e,
	0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x24, 0x73, 0x73, 0x6e, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x17, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x51, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73,
	0x73, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x52, 0x10, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x74, 0x72, 0x75, 0x65, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x73, 0x6e, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x75, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x0a, 0x74, 0x72, 0x75, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x18, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69,
	0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x6d, 0x69, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x32, 0x85, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x10, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x2e, 0x2e, 0x73, 0x73, 0x6e, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x73, 0x6e, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xf5, 0x01, 0x0a, 0x1e, 0x61,
	0x69, 0x2e, 0x76, 0x69, 0x73, 0x6d, 0x61, 0x2e, 0x73, 0x73, 0x6e, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x13, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x65, 0x2d, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x2f, 0x76, 0x6d, 0x6c, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x73, 0x6e, 0x2f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0xa2, 0x02,
	0x03, 0x53, 0x4d, 0x58, 0xaa, 0x02, 0x15, 0x53, 0x73, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x15, 0x53,
	0x73, 0x6e, 0x5c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x21, 0x53, 0x73, 0x6e, 0x5c, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x17, 0x53, 0x73, 0x6e, 0x3a, 0x3a,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ssn_metricservice_v1_metricsservice_proto_rawDescOnce sync.Once
	file_ssn_metricservice_v1_metricsservice_proto_rawDescData = file_ssn_metricservice_v1_metricsservice_proto_rawDesc
)

func file_ssn_metricservice_v1_metricsservice_proto_rawDescGZIP() []byte {
	file_ssn_metricservice_v1_metricsservice_proto_rawDescOnce.Do(func() {
		file_ssn_metricservice_v1_metricsservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_ssn_metricservice_v1_metricsservice_proto_rawDescData)
	})
	return file_ssn_metricservice_v1_metricsservice_proto_rawDescData
}

var file_ssn_metricservice_v1_metricsservice_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ssn_metricservice_v1_metricsservice_proto_goTypes = []interface{}{
	(*CalculateMetricsRequest)(nil),  // 0: ssn.metricsservice.v1.CalculateMetricsRequest
	(*CalculateMetricsResponse)(nil), // 1: ssn.metricsservice.v1.CalculateMetricsResponse
	(*v1.PredictionValues)(nil),      // 2: ssn.dataservice.v1.PredictionValues
	(*v1.TrueValues)(nil),            // 3: ssn.dataservice.v1.TrueValues
}
var file_ssn_metricservice_v1_metricsservice_proto_depIdxs = []int32{
	2, // 0: ssn.metricsservice.v1.CalculateMetricsRequest.prediction_values:type_name -> ssn.dataservice.v1.PredictionValues
	3, // 1: ssn.metricsservice.v1.CalculateMetricsRequest.true_values:type_name -> ssn.dataservice.v1.TrueValues
	0, // 2: ssn.metricsservice.v1.MetricsService.CalculateMetrics:input_type -> ssn.metricsservice.v1.CalculateMetricsRequest
	1, // 3: ssn.metricsservice.v1.MetricsService.CalculateMetrics:output_type -> ssn.metricsservice.v1.CalculateMetricsResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ssn_metricservice_v1_metricsservice_proto_init() }
func file_ssn_metricservice_v1_metricsservice_proto_init() {
	if File_ssn_metricservice_v1_metricsservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ssn_metricservice_v1_metricsservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssn_metricservice_v1_metricsservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ssn_metricservice_v1_metricsservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ssn_metricservice_v1_metricsservice_proto_goTypes,
		DependencyIndexes: file_ssn_metricservice_v1_metricsservice_proto_depIdxs,
		MessageInfos:      file_ssn_metricservice_v1_metricsservice_proto_msgTypes,
	}.Build()
	File_ssn_metricservice_v1_metricsservice_proto = out.File
	file_ssn_metricservice_v1_metricsservice_proto_rawDesc = nil
	file_ssn_metricservice_v1_metricsservice_proto_goTypes = nil
	file_ssn_metricservice_v1_metricsservice_proto_depIdxs = nil
}
