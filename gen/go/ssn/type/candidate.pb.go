// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ssn/type/candidate.proto

package _type

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Confidence_Level int32

const (
	Confidence_UNKNOWN   Confidence_Level = 0
	Confidence_VERY_LOW  Confidence_Level = 1
	Confidence_LOW       Confidence_Level = 2
	Confidence_MID       Confidence_Level = 3
	Confidence_HIGH      Confidence_Level = 4
	Confidence_VERY_HIGH Confidence_Level = 5
)

var Confidence_Level_name = map[int32]string{
	0: "UNKNOWN",
	1: "VERY_LOW",
	2: "LOW",
	3: "MID",
	4: "HIGH",
	5: "VERY_HIGH",
}
var Confidence_Level_value = map[string]int32{
	"UNKNOWN":   0,
	"VERY_LOW":  1,
	"LOW":       2,
	"MID":       3,
	"HIGH":      4,
	"VERY_HIGH": 5,
}

func (x Confidence_Level) String() string {
	return proto.EnumName(Confidence_Level_name, int32(x))
}
func (Confidence_Level) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_candidate_37041af3a015e0ad, []int{0, 0}
}

type Confidence struct {
	// A bucketized representation of confidence, which is intended to give clients
	// highly stable results across model upgrades.
	Level Confidence_Level `protobuf:"varint,1,opt,name=level,proto3,enum=ssn.type.Confidence_Level" json:"level,omitempty"`
	// The confidence value
	Value                *wrappers.FloatValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Confidence) Reset()         { *m = Confidence{} }
func (m *Confidence) String() string { return proto.CompactTextString(m) }
func (*Confidence) ProtoMessage()    {}
func (*Confidence) Descriptor() ([]byte, []int) {
	return fileDescriptor_candidate_37041af3a015e0ad, []int{0}
}
func (m *Confidence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Confidence.Unmarshal(m, b)
}
func (m *Confidence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Confidence.Marshal(b, m, deterministic)
}
func (dst *Confidence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Confidence.Merge(dst, src)
}
func (m *Confidence) XXX_Size() int {
	return xxx_messageInfo_Confidence.Size(m)
}
func (m *Confidence) XXX_DiscardUnknown() {
	xxx_messageInfo_Confidence.DiscardUnknown(m)
}

var xxx_messageInfo_Confidence proto.InternalMessageInfo

func (m *Confidence) GetLevel() Confidence_Level {
	if m != nil {
		return m.Level
	}
	return Confidence_UNKNOWN
}

func (m *Confidence) GetValue() *wrappers.FloatValue {
	if m != nil {
		return m.Value
	}
	return nil
}

type Candidate struct {
	// Normalized value 01-01-2019
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// The text as found on the document "1. Jan"
	// useful for overlays
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// Confidence
	Confidence *Confidence `protobuf:"bytes,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	// The bounding box for the block.
	// The vertices are in the order of top-left, top-right, bottom-right,
	// bottom-left. When a rotation of the bounding box is detected the rotation
	// is represented as around the top-left corner as defined when the text is
	// read in the 'natural' orientation.
	// For example:
	//
	// * when the text is horizontal it might look like:
	//
	//         0----1
	//         |    |
	//         3----2
	//
	// * when it's rotated 180 degrees around the top-left corner it becomes:
	//
	//         2----3
	//         |    |
	//         1----0
	//
	//   and the vertex order will still be (0, 1, 2, 3).
	BoundingBox          *BoundingPoly `protobuf:"bytes,4,opt,name=bounding_box,json=boundingBox,proto3" json:"bounding_box,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Candidate) Reset()         { *m = Candidate{} }
func (m *Candidate) String() string { return proto.CompactTextString(m) }
func (*Candidate) ProtoMessage()    {}
func (*Candidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_candidate_37041af3a015e0ad, []int{1}
}
func (m *Candidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candidate.Unmarshal(m, b)
}
func (m *Candidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candidate.Marshal(b, m, deterministic)
}
func (dst *Candidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candidate.Merge(dst, src)
}
func (m *Candidate) XXX_Size() int {
	return xxx_messageInfo_Candidate.Size(m)
}
func (m *Candidate) XXX_DiscardUnknown() {
	xxx_messageInfo_Candidate.DiscardUnknown(m)
}

var xxx_messageInfo_Candidate proto.InternalMessageInfo

func (m *Candidate) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Candidate) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Candidate) GetConfidence() *Confidence {
	if m != nil {
		return m.Confidence
	}
	return nil
}

func (m *Candidate) GetBoundingBox() *BoundingPoly {
	if m != nil {
		return m.BoundingBox
	}
	return nil
}

func init() {
	proto.RegisterType((*Confidence)(nil), "ssn.type.Confidence")
	proto.RegisterType((*Candidate)(nil), "ssn.type.Candidate")
	proto.RegisterEnum("ssn.type.Confidence_Level", Confidence_Level_name, Confidence_Level_value)
}

func init() { proto.RegisterFile("ssn/type/candidate.proto", fileDescriptor_candidate_37041af3a015e0ad) }

var fileDescriptor_candidate_37041af3a015e0ad = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4e, 0xc2, 0x40,
	0x10, 0xc6, 0x2d, 0xb4, 0x40, 0x07, 0x34, 0xcd, 0x84, 0x68, 0x83, 0x89, 0x21, 0x9c, 0x38, 0x6d,
	0x15, 0xbd, 0x78, 0x05, 0xff, 0x40, 0xe4, 0x8f, 0x69, 0x22, 0x44, 0x2f, 0xa4, 0xa5, 0x4b, 0x43,
	0x52, 0x77, 0x9b, 0x76, 0x41, 0x78, 0x21, 0x9f, 0xc3, 0x47, 0x33, 0xbb, 0xa5, 0xe0, 0xc1, 0xdb,
	0xec, 0x7e, 0xbf, 0x99, 0xf9, 0xbe, 0x01, 0x3b, 0x4d, 0x99, 0x23, 0x76, 0x31, 0x75, 0x16, 0x1e,
	0x0b, 0x56, 0x81, 0x27, 0x28, 0x89, 0x13, 0x2e, 0x38, 0x56, 0xd2, 0x94, 0x11, 0xa9, 0x34, 0xae,
	0x42, 0xce, 0xc3, 0x88, 0x3a, 0xea, 0xdf, 0x5f, 0x2f, 0x9d, 0xaf, 0xc4, 0x8b, 0x63, 0x9a, 0xa4,
	0x19, 0xd9, 0xb8, 0x38, 0xcc, 0x08, 0x29, 0xff, 0xa4, 0x22, 0xd9, 0x65, 0x42, 0xeb, 0x47, 0x03,
	0xe8, 0x71, 0xb6, 0x5c, 0x05, 0x94, 0x2d, 0x28, 0x5e, 0x83, 0x11, 0xd1, 0x0d, 0x8d, 0x6c, 0xad,
	0xa9, 0xb5, 0xcf, 0x3a, 0x0d, 0x92, 0x6f, 0x20, 0x47, 0x88, 0x0c, 0x25, 0xe1, 0x66, 0x20, 0xde,
	0x80, 0xb1, 0xf1, 0xa2, 0x35, 0xb5, 0x0b, 0x4d, 0xad, 0x5d, 0xed, 0x5c, 0x92, 0xcc, 0x09, 0xc9,
	0x9d, 0x90, 0xa7, 0x88, 0x7b, 0x62, 0x2a, 0x11, 0x37, 0x23, 0x5b, 0x23, 0x30, 0xd4, 0x08, 0xac,
	0x42, 0xf9, 0x6d, 0xfc, 0x32, 0x9e, 0xcc, 0xc6, 0xd6, 0x09, 0xd6, 0xa0, 0x32, 0x7d, 0x74, 0xdf,
	0xe7, 0xc3, 0xc9, 0xcc, 0xd2, 0xb0, 0x0c, 0x45, 0x59, 0x14, 0x64, 0x31, 0x1a, 0x3c, 0x58, 0x45,
	0xac, 0x80, 0xde, 0x1f, 0x3c, 0xf7, 0x2d, 0x1d, 0x4f, 0xc1, 0x54, 0xa4, 0x7a, 0x1a, 0xad, 0x6f,
	0x0d, 0xcc, 0x5e, 0x7e, 0x19, 0xac, 0xe7, 0x7e, 0x64, 0x02, 0x73, 0xbf, 0x12, 0x11, 0x74, 0x41,
	0xb7, 0x42, 0x99, 0x34, 0x5d, 0x55, 0xe3, 0x1d, 0xc0, 0xe2, 0x10, 0xca, 0x2e, 0x2a, 0xfb, 0xf5,
	0xff, 0x02, 0xbb, 0x7f, 0x38, 0xbc, 0x87, 0x9a, 0xcf, 0xd7, 0x2c, 0x58, 0xb1, 0x70, 0xee, 0xf3,
	0xad, 0xad, 0xab, 0xbe, 0xf3, 0x63, 0x5f, 0x77, 0xaf, 0xbe, 0xf2, 0x68, 0xe7, 0x56, 0x73, 0xb6,
	0xcb, 0xb7, 0xdd, 0xd2, 0x87, 0x2e, 0x09, 0xbf, 0xa4, 0x6e, 0x73, 0xfb, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0x9b, 0x3d, 0xb6, 0x6b, 0xd9, 0x01, 0x00, 0x00,
}
