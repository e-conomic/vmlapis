// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gen_bq_schema/bq_table.proto

package gen_bq_schema

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BigQueryMessageOptions struct {
	// Specifies a name of table in BigQuery for the message.
	//
	// If not blank, indicates the message is a type of record to be stored into BigQuery.
	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// If true, BigQuery field names will default to a field's JSON name,
	// not its original/proto field name.
	UseJsonNames         bool     `protobuf:"varint,2,opt,name=use_json_names,json=useJsonNames,proto3" json:"use_json_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BigQueryMessageOptions) Reset()         { *m = BigQueryMessageOptions{} }
func (m *BigQueryMessageOptions) String() string { return proto.CompactTextString(m) }
func (*BigQueryMessageOptions) ProtoMessage()    {}
func (*BigQueryMessageOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_bq_table_0cdf91c979892fc6, []int{0}
}
func (m *BigQueryMessageOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BigQueryMessageOptions.Unmarshal(m, b)
}
func (m *BigQueryMessageOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BigQueryMessageOptions.Marshal(b, m, deterministic)
}
func (dst *BigQueryMessageOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BigQueryMessageOptions.Merge(dst, src)
}
func (m *BigQueryMessageOptions) XXX_Size() int {
	return xxx_messageInfo_BigQueryMessageOptions.Size(m)
}
func (m *BigQueryMessageOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_BigQueryMessageOptions.DiscardUnknown(m)
}

var xxx_messageInfo_BigQueryMessageOptions proto.InternalMessageInfo

func (m *BigQueryMessageOptions) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *BigQueryMessageOptions) GetUseJsonNames() bool {
	if m != nil {
		return m.UseJsonNames
	}
	return false
}

var E_BigqueryOpts = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*BigQueryMessageOptions)(nil),
	Field:         1021,
	Name:          "gen_bq_schema.bigquery_opts",
	Tag:           "bytes,1021,opt,name=bigquery_opts,json=bigqueryOpts",
	Filename:      "gen_bq_schema/bq_table.proto",
}

func init() {
	proto.RegisterType((*BigQueryMessageOptions)(nil), "gen_bq_schema.BigQueryMessageOptions")
	proto.RegisterExtension(E_BigqueryOpts)
}

func init() {
	proto.RegisterFile("gen_bq_schema/bq_table.proto", fileDescriptor_bq_table_0cdf91c979892fc6)
}

var fileDescriptor_bq_table_0cdf91c979892fc6 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x31, 0x4b, 0x04, 0x31,
	0x10, 0x85, 0x89, 0x85, 0x7a, 0xf1, 0xce, 0x22, 0x85, 0x2c, 0xa2, 0x18, 0x44, 0x61, 0xab, 0x2c,
	0x68, 0x67, 0x69, 0x29, 0xe8, 0xe1, 0xf6, 0x12, 0x92, 0x73, 0x8c, 0x91, 0xdd, 0x4c, 0x36, 0x93,
	0x14, 0xfe, 0x78, 0x41, 0x2e, 0xc7, 0x15, 0x0b, 0xd7, 0xce, 0x7b, 0xf3, 0xcd, 0x37, 0xfc, 0xca,
	0x41, 0xd0, 0x76, 0xd2, 0xb4, 0xf9, 0x86, 0xd1, 0x74, 0x76, 0xd2, 0xd9, 0xd8, 0x01, 0x54, 0x4c,
	0x98, 0x51, 0xac, 0x66, 0xe9, 0xa5, 0x74, 0x88, 0x6e, 0x80, 0xae, 0x86, 0xb6, 0x7c, 0x75, 0x9f,
	0x40, 0x9b, 0xe4, 0x63, 0xc6, 0xb4, 0x5b, 0xb8, 0xfd, 0xe0, 0x17, 0xcf, 0xde, 0xbd, 0x17, 0x48,
	0xbf, 0xaf, 0x40, 0x64, 0x1c, 0xac, 0x63, 0xf6, 0x18, 0x48, 0x5c, 0x73, 0x5e, 0xc9, 0x3a, 0x98,
	0x11, 0x1a, 0x26, 0x59, 0xbb, 0xe8, 0x17, 0x75, 0xf2, 0x66, 0x46, 0x10, 0x77, 0xfc, 0xbc, 0x10,
	0xe8, 0x1f, 0xc2, 0x50, 0x1b, 0xd4, 0x1c, 0x49, 0xd6, 0x9e, 0xf6, 0xcb, 0x42, 0xf0, 0x42, 0x18,
	0xb6, 0x25, 0x7a, 0x1a, 0xf8, 0xca, 0x7a, 0x37, 0x6d, 0xf1, 0x1a, 0x63, 0x26, 0x71, 0xa3, 0x76,
	0x4a, 0x6a, 0xaf, 0xa4, 0xe6, 0x67, 0x9b, 0xbf, 0x13, 0xc9, 0xda, 0xb3, 0x87, 0x7b, 0x35, 0xfb,
	0x44, 0x1d, 0x96, 0xec, 0x97, 0x7b, 0xfa, 0x3a, 0x66, 0xb2, 0xc7, 0x15, 0xfa, 0xf8, 0x1f, 0x00,
	0x00, 0xff, 0xff, 0xcb, 0xee, 0xa6, 0xe7, 0x24, 0x01, 0x00, 0x00,
}
