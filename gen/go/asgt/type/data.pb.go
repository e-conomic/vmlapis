// Code generated by protoc-gen-go. DO NOT EDIT.
// source: asgt/type/data.proto

package _type

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Invoice struct {
	IssueDate *timestamp.Timestamp `protobuf:"bytes,1,opt,name=issue_date,json=issueDate,proto3" json:"issue_date,omitempty"`
	// supplier of the invoice
	Supplier *Supplier `protobuf:"bytes,2,opt,name=supplier,proto3" json:"supplier,omitempty"`
	// reference to the customer
	CustomerRef *wrappers.StringValue `protobuf:"bytes,3,opt,name=customer_ref,json=customerRef,proto3" json:"customer_ref,omitempty"`
	// invoice text from the SmartScan product
	Text *wrappers.StringValue `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	// name of the currency as a string
	Currency *wrappers.StringValue `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	// total of the invoice
	Total                *wrappers.FloatValue `protobuf:"bytes,7,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Invoice) Reset()         { *m = Invoice{} }
func (m *Invoice) String() string { return proto.CompactTextString(m) }
func (*Invoice) ProtoMessage()    {}
func (*Invoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_data_d33be47dbcf4d6bd, []int{0}
}
func (m *Invoice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Invoice.Unmarshal(m, b)
}
func (m *Invoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Invoice.Marshal(b, m, deterministic)
}
func (dst *Invoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Invoice.Merge(dst, src)
}
func (m *Invoice) XXX_Size() int {
	return xxx_messageInfo_Invoice.Size(m)
}
func (m *Invoice) XXX_DiscardUnknown() {
	xxx_messageInfo_Invoice.DiscardUnknown(m)
}

var xxx_messageInfo_Invoice proto.InternalMessageInfo

func (m *Invoice) GetIssueDate() *timestamp.Timestamp {
	if m != nil {
		return m.IssueDate
	}
	return nil
}

func (m *Invoice) GetSupplier() *Supplier {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *Invoice) GetCustomerRef() *wrappers.StringValue {
	if m != nil {
		return m.CustomerRef
	}
	return nil
}

func (m *Invoice) GetText() *wrappers.StringValue {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Invoice) GetCurrency() *wrappers.StringValue {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *Invoice) GetTotal() *wrappers.FloatValue {
	if m != nil {
		return m.Total
	}
	return nil
}

type InvoiceLine struct {
	// text of the invoice line
	Text *wrappers.StringValue `protobuf:"bytes,8,opt,name=text,proto3" json:"text,omitempty"`
	// id of the product (item)
	ItemId               *wrappers.StringValue `protobuf:"bytes,9,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *InvoiceLine) Reset()         { *m = InvoiceLine{} }
func (m *InvoiceLine) String() string { return proto.CompactTextString(m) }
func (*InvoiceLine) ProtoMessage()    {}
func (*InvoiceLine) Descriptor() ([]byte, []int) {
	return fileDescriptor_data_d33be47dbcf4d6bd, []int{1}
}
func (m *InvoiceLine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvoiceLine.Unmarshal(m, b)
}
func (m *InvoiceLine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvoiceLine.Marshal(b, m, deterministic)
}
func (dst *InvoiceLine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvoiceLine.Merge(dst, src)
}
func (m *InvoiceLine) XXX_Size() int {
	return xxx_messageInfo_InvoiceLine.Size(m)
}
func (m *InvoiceLine) XXX_DiscardUnknown() {
	xxx_messageInfo_InvoiceLine.DiscardUnknown(m)
}

var xxx_messageInfo_InvoiceLine proto.InternalMessageInfo

func (m *InvoiceLine) GetText() *wrappers.StringValue {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *InvoiceLine) GetItemId() *wrappers.StringValue {
	if m != nil {
		return m.ItemId
	}
	return nil
}

type Supplier struct {
	//  id of the supplier; not nullable
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// name of the supplier
	Name *wrappers.StringValue `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// global id of the supplier
	GlobalId             *wrappers.StringValue `protobuf:"bytes,5,opt,name=global_id,json=globalId,proto3" json:"global_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Supplier) Reset()         { *m = Supplier{} }
func (m *Supplier) String() string { return proto.CompactTextString(m) }
func (*Supplier) ProtoMessage()    {}
func (*Supplier) Descriptor() ([]byte, []int) {
	return fileDescriptor_data_d33be47dbcf4d6bd, []int{2}
}
func (m *Supplier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Supplier.Unmarshal(m, b)
}
func (m *Supplier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Supplier.Marshal(b, m, deterministic)
}
func (dst *Supplier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Supplier.Merge(dst, src)
}
func (m *Supplier) XXX_Size() int {
	return xxx_messageInfo_Supplier.Size(m)
}
func (m *Supplier) XXX_DiscardUnknown() {
	xxx_messageInfo_Supplier.DiscardUnknown(m)
}

var xxx_messageInfo_Supplier proto.InternalMessageInfo

func (m *Supplier) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Supplier) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Supplier) GetGlobalId() *wrappers.StringValue {
	if m != nil {
		return m.GlobalId
	}
	return nil
}

type Transaction struct {
	// text of the bank transaction
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// amount of the transaction
	Amount               float32  `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_data_d33be47dbcf4d6bd, []int{3}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (dst *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(dst, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Transaction) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type Data struct {
	// Transaction-level information; at this time used only with bank transactions
	Transaction *Transaction `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	// Invoice-level information for e-invoices and scanned invoices and receipts
	Invoice *Invoice `protobuf:"bytes,2,opt,name=invoice,proto3" json:"invoice,omitempty"`
	// Line-level information for e-invoices; use one sample per invoice line
	InvoiceLine          *InvoiceLine `protobuf:"bytes,3,opt,name=invoice_line,json=invoiceLine,proto3" json:"invoice_line,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_data_d33be47dbcf4d6bd, []int{4}
}
func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (dst *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(dst, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *Data) GetInvoice() *Invoice {
	if m != nil {
		return m.Invoice
	}
	return nil
}

func (m *Data) GetInvoiceLine() *InvoiceLine {
	if m != nil {
		return m.InvoiceLine
	}
	return nil
}

func init() {
	proto.RegisterType((*Invoice)(nil), "asgt.type.Invoice")
	proto.RegisterType((*InvoiceLine)(nil), "asgt.type.InvoiceLine")
	proto.RegisterType((*Supplier)(nil), "asgt.type.Supplier")
	proto.RegisterType((*Transaction)(nil), "asgt.type.Transaction")
	proto.RegisterType((*Data)(nil), "asgt.type.Data")
}

func init() { proto.RegisterFile("asgt/type/data.proto", fileDescriptor_data_d33be47dbcf4d6bd) }

var fileDescriptor_data_d33be47dbcf4d6bd = []byte{
	// 439 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x8a, 0xdb, 0x30,
	0x10, 0xc6, 0x89, 0x9b, 0x75, 0xe2, 0xf1, 0xd2, 0x83, 0x5a, 0x82, 0x49, 0x4b, 0x5b, 0x7c, 0xea,
	0xa1, 0xd8, 0xfd, 0x43, 0x61, 0x73, 0x2a, 0x94, 0xa5, 0x10, 0xe8, 0x49, 0xbb, 0xf4, 0xd0, 0x4b,
	0x50, 0xec, 0x89, 0x11, 0xd8, 0x92, 0x91, 0xc7, 0xdb, 0xee, 0x13, 0xf4, 0x59, 0xfa, 0x40, 0x7d,
	0x9f, 0x62, 0x49, 0xce, 0x86, 0xcd, 0xc5, 0x37, 0x4b, 0xfa, 0x7d, 0x33, 0x9f, 0xbf, 0x19, 0x78,
	0x2e, 0xba, 0x8a, 0x72, 0xba, 0x6f, 0x31, 0x2f, 0x05, 0x89, 0xac, 0x35, 0x9a, 0x34, 0x8b, 0x86,
	0xdb, 0x6c, 0xb8, 0x5d, 0xbf, 0xae, 0xb4, 0xae, 0x6a, 0xcc, 0xed, 0xc3, 0xbe, 0x3f, 0xe4, 0x24,
	0x1b, 0xec, 0x48, 0x34, 0xad, 0x63, 0xd7, 0xaf, 0x1e, 0x03, 0xbf, 0x8c, 0x68, 0x5b, 0x34, 0x9d,
	0x7b, 0x4f, 0xff, 0x05, 0xb0, 0xd8, 0xaa, 0x3b, 0x2d, 0x0b, 0x64, 0x1b, 0x00, 0xd9, 0x75, 0x3d,
	0xee, 0x4a, 0x41, 0x98, 0xcc, 0xde, 0xcc, 0xde, 0xc6, 0x1f, 0xd7, 0x99, 0x2b, 0x90, 0x8d, 0x05,
	0xb2, 0xdb, 0xb1, 0x03, 0x8f, 0x2c, 0x7d, 0x2d, 0x08, 0x59, 0x0e, 0xcb, 0xae, 0x6f, 0xdb, 0x5a,
	0xa2, 0x49, 0x02, 0x2b, 0x7c, 0x96, 0x1d, 0x5d, 0x66, 0x37, 0xfe, 0x89, 0x1f, 0x21, 0xf6, 0x05,
	0x2e, 0x8b, 0xbe, 0x23, 0xdd, 0xa0, 0xd9, 0x19, 0x3c, 0x24, 0x4f, 0xac, 0xe8, 0xe5, 0x59, 0xb7,
	0x1b, 0x32, 0x52, 0x55, 0x3f, 0x44, 0xdd, 0x23, 0x8f, 0x47, 0x05, 0xc7, 0x03, 0x7b, 0x0f, 0x73,
	0xc2, 0xdf, 0x94, 0xcc, 0x27, 0x08, 0x2d, 0xc9, 0xae, 0x60, 0x59, 0xf4, 0xc6, 0xa0, 0x2a, 0xee,
	0x93, 0x70, 0x82, 0xea, 0x48, 0xb3, 0x0f, 0x70, 0x41, 0x9a, 0x44, 0x9d, 0x2c, 0xac, 0xec, 0xc5,
	0x99, 0xec, 0x5b, 0xad, 0x05, 0x39, 0x95, 0x23, 0xd3, 0x3b, 0x88, 0x7d, 0xac, 0xdf, 0xa5, 0xc2,
	0xa3, 0xdb, 0xe5, 0x64, 0xb7, 0x9f, 0x61, 0x21, 0x09, 0x9b, 0x9d, 0x2c, 0x93, 0x68, 0x82, 0x28,
	0x1c, 0xe0, 0x6d, 0x99, 0xfe, 0x99, 0xc1, 0x72, 0x8c, 0x9b, 0x3d, 0x85, 0x40, 0x96, 0x76, 0x90,
	0x11, 0x0f, 0x64, 0x39, 0xb8, 0x50, 0xa2, 0xc1, 0x69, 0x99, 0x0d, 0x24, 0xdb, 0x40, 0x54, 0xd5,
	0x7a, 0x2f, 0xea, 0xc1, 0xc7, 0xc5, 0x94, 0xd0, 0x1c, 0xbe, 0x2d, 0xd3, 0x0d, 0xc4, 0xb7, 0x46,
	0xa8, 0x4e, 0x14, 0x24, 0xb5, 0x62, 0xcc, 0x27, 0xe0, 0xdc, 0xb8, 0x7f, 0x5c, 0x41, 0x28, 0x1a,
	0xdd, 0x2b, 0xb2, 0x3b, 0x13, 0x70, 0x7f, 0x4a, 0xff, 0xce, 0x60, 0x7e, 0x2d, 0x48, 0xb0, 0x2b,
	0x88, 0xe9, 0xa1, 0x86, 0x5f, 0xc9, 0xd5, 0xc9, 0x66, 0x9d, 0x74, 0xe0, 0xa7, 0x28, 0x7b, 0x07,
	0x0b, 0xe9, 0xf2, 0xf7, 0xfb, 0xc8, 0x4e, 0x54, 0x7e, 0x32, 0x7c, 0x44, 0xd8, 0x06, 0x2e, 0xfd,
	0xe7, 0xae, 0x96, 0x0a, 0xfd, 0x36, 0xae, 0xce, 0x25, 0xc3, 0x30, 0x79, 0x2c, 0x1f, 0x0e, 0x5f,
	0xc3, 0x9f, 0xf3, 0x01, 0xd8, 0x87, 0x36, 0x8e, 0x4f, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x6d,
	0x77, 0x37, 0x3c, 0xb3, 0x03, 0x00, 0x00,
}
