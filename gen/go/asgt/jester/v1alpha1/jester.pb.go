// Code generated by protoc-gen-go. DO NOT EDIT.
// source: asgt/jester/v1alpha1/jester.proto

package jester

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Confidence_Level int32

const (
	Confidence_UNKNOWN   Confidence_Level = 0
	Confidence_VERY_LOW  Confidence_Level = 1
	Confidence_LOW       Confidence_Level = 2
	Confidence_MID       Confidence_Level = 3
	Confidence_HIGH      Confidence_Level = 4
	Confidence_VERY_HIGH Confidence_Level = 5
)

var Confidence_Level_name = map[int32]string{
	0: "UNKNOWN",
	1: "VERY_LOW",
	2: "LOW",
	3: "MID",
	4: "HIGH",
	5: "VERY_HIGH",
}
var Confidence_Level_value = map[string]int32{
	"UNKNOWN":   0,
	"VERY_LOW":  1,
	"LOW":       2,
	"MID":       3,
	"HIGH":      4,
	"VERY_HIGH": 5,
}

func (x Confidence_Level) String() string {
	return proto.EnumName(Confidence_Level_name, int32(x))
}
func (Confidence_Level) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jester_5b895ab887d20878, []int{0, 0}
}

// Common types
type Confidence struct {
	// A bucketized representation of confidence, which is intended to give clients
	// highly stable results across model upgrades.
	Level Confidence_Level `protobuf:"varint,1,opt,name=level,proto3,enum=asgt.jester.v1alpha1.Confidence_Level" json:"level,omitempty"`
	// The confidence value
	Value                *wrappers.FloatValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Confidence) Reset()         { *m = Confidence{} }
func (m *Confidence) String() string { return proto.CompactTextString(m) }
func (*Confidence) ProtoMessage()    {}
func (*Confidence) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_5b895ab887d20878, []int{0}
}
func (m *Confidence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Confidence.Unmarshal(m, b)
}
func (m *Confidence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Confidence.Marshal(b, m, deterministic)
}
func (dst *Confidence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Confidence.Merge(dst, src)
}
func (m *Confidence) XXX_Size() int {
	return xxx_messageInfo_Confidence.Size(m)
}
func (m *Confidence) XXX_DiscardUnknown() {
	xxx_messageInfo_Confidence.DiscardUnknown(m)
}

var xxx_messageInfo_Confidence proto.InternalMessageInfo

func (m *Confidence) GetLevel() Confidence_Level {
	if m != nil {
		return m.Level
	}
	return Confidence_UNKNOWN
}

func (m *Confidence) GetValue() *wrappers.FloatValue {
	if m != nil {
		return m.Value
	}
	return nil
}

type Prediction struct {
	Target               string                  `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Candidates           []*Prediction_Candidate `protobuf:"bytes,2,rep,name=candidates,proto3" json:"candidates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Prediction) Reset()         { *m = Prediction{} }
func (m *Prediction) String() string { return proto.CompactTextString(m) }
func (*Prediction) ProtoMessage()    {}
func (*Prediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_5b895ab887d20878, []int{1}
}
func (m *Prediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prediction.Unmarshal(m, b)
}
func (m *Prediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prediction.Marshal(b, m, deterministic)
}
func (dst *Prediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prediction.Merge(dst, src)
}
func (m *Prediction) XXX_Size() int {
	return xxx_messageInfo_Prediction.Size(m)
}
func (m *Prediction) XXX_DiscardUnknown() {
	xxx_messageInfo_Prediction.DiscardUnknown(m)
}

var xxx_messageInfo_Prediction proto.InternalMessageInfo

func (m *Prediction) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *Prediction) GetCandidates() []*Prediction_Candidate {
	if m != nil {
		return m.Candidates
	}
	return nil
}

type Prediction_Candidate struct {
	Label                string      `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Confidence           *Confidence `protobuf:"bytes,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Prediction_Candidate) Reset()         { *m = Prediction_Candidate{} }
func (m *Prediction_Candidate) String() string { return proto.CompactTextString(m) }
func (*Prediction_Candidate) ProtoMessage()    {}
func (*Prediction_Candidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_5b895ab887d20878, []int{1, 0}
}
func (m *Prediction_Candidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prediction_Candidate.Unmarshal(m, b)
}
func (m *Prediction_Candidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prediction_Candidate.Marshal(b, m, deterministic)
}
func (dst *Prediction_Candidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prediction_Candidate.Merge(dst, src)
}
func (m *Prediction_Candidate) XXX_Size() int {
	return xxx_messageInfo_Prediction_Candidate.Size(m)
}
func (m *Prediction_Candidate) XXX_DiscardUnknown() {
	xxx_messageInfo_Prediction_Candidate.DiscardUnknown(m)
}

var xxx_messageInfo_Prediction_Candidate proto.InternalMessageInfo

func (m *Prediction_Candidate) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Prediction_Candidate) GetConfidence() *Confidence {
	if m != nil {
		return m.Confidence
	}
	return nil
}

// AutoSuggest
type SuggestionsResponse struct {
	Predictions          []*Prediction `protobuf:"bytes,1,rep,name=predictions,proto3" json:"predictions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SuggestionsResponse) Reset()         { *m = SuggestionsResponse{} }
func (m *SuggestionsResponse) String() string { return proto.CompactTextString(m) }
func (*SuggestionsResponse) ProtoMessage()    {}
func (*SuggestionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_5b895ab887d20878, []int{2}
}
func (m *SuggestionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestionsResponse.Unmarshal(m, b)
}
func (m *SuggestionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestionsResponse.Marshal(b, m, deterministic)
}
func (dst *SuggestionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestionsResponse.Merge(dst, src)
}
func (m *SuggestionsResponse) XXX_Size() int {
	return xxx_messageInfo_SuggestionsResponse.Size(m)
}
func (m *SuggestionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestionsResponse proto.InternalMessageInfo

func (m *SuggestionsResponse) GetPredictions() []*Prediction {
	if m != nil {
		return m.Predictions
	}
	return nil
}

type SuggestionOptions struct {
	SuggestionLimit      int32            `protobuf:"varint,1,opt,name=suggestion_limit,json=suggestionLimit,proto3" json:"suggestion_limit,omitempty"`
	MinConfidence        Confidence_Level `protobuf:"varint,2,opt,name=min_confidence,json=minConfidence,proto3,enum=asgt.jester.v1alpha1.Confidence_Level" json:"min_confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SuggestionOptions) Reset()         { *m = SuggestionOptions{} }
func (m *SuggestionOptions) String() string { return proto.CompactTextString(m) }
func (*SuggestionOptions) ProtoMessage()    {}
func (*SuggestionOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_5b895ab887d20878, []int{3}
}
func (m *SuggestionOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestionOptions.Unmarshal(m, b)
}
func (m *SuggestionOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestionOptions.Marshal(b, m, deterministic)
}
func (dst *SuggestionOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestionOptions.Merge(dst, src)
}
func (m *SuggestionOptions) XXX_Size() int {
	return xxx_messageInfo_SuggestionOptions.Size(m)
}
func (m *SuggestionOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestionOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestionOptions proto.InternalMessageInfo

func (m *SuggestionOptions) GetSuggestionLimit() int32 {
	if m != nil {
		return m.SuggestionLimit
	}
	return 0
}

func (m *SuggestionOptions) GetMinConfidence() Confidence_Level {
	if m != nil {
		return m.MinConfidence
	}
	return Confidence_UNKNOWN
}

// Scanned Invoice
type ScannedInvoiceRequest struct {
	Inputs               []*ScannedInvoiceRequest_Data `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	DatasetName          string                        `protobuf:"bytes,2,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`
	Options              *SuggestionOptions            `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ScannedInvoiceRequest) Reset()         { *m = ScannedInvoiceRequest{} }
func (m *ScannedInvoiceRequest) String() string { return proto.CompactTextString(m) }
func (*ScannedInvoiceRequest) ProtoMessage()    {}
func (*ScannedInvoiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_5b895ab887d20878, []int{4}
}
func (m *ScannedInvoiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScannedInvoiceRequest.Unmarshal(m, b)
}
func (m *ScannedInvoiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScannedInvoiceRequest.Marshal(b, m, deterministic)
}
func (dst *ScannedInvoiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScannedInvoiceRequest.Merge(dst, src)
}
func (m *ScannedInvoiceRequest) XXX_Size() int {
	return xxx_messageInfo_ScannedInvoiceRequest.Size(m)
}
func (m *ScannedInvoiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScannedInvoiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScannedInvoiceRequest proto.InternalMessageInfo

func (m *ScannedInvoiceRequest) GetInputs() []*ScannedInvoiceRequest_Data {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *ScannedInvoiceRequest) GetDatasetName() string {
	if m != nil {
		return m.DatasetName
	}
	return ""
}

func (m *ScannedInvoiceRequest) GetOptions() *SuggestionOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type ScannedInvoiceRequest_Data struct {
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScannedInvoiceRequest_Data) Reset()         { *m = ScannedInvoiceRequest_Data{} }
func (m *ScannedInvoiceRequest_Data) String() string { return proto.CompactTextString(m) }
func (*ScannedInvoiceRequest_Data) ProtoMessage()    {}
func (*ScannedInvoiceRequest_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_5b895ab887d20878, []int{4, 0}
}
func (m *ScannedInvoiceRequest_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScannedInvoiceRequest_Data.Unmarshal(m, b)
}
func (m *ScannedInvoiceRequest_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScannedInvoiceRequest_Data.Marshal(b, m, deterministic)
}
func (dst *ScannedInvoiceRequest_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScannedInvoiceRequest_Data.Merge(dst, src)
}
func (m *ScannedInvoiceRequest_Data) XXX_Size() int {
	return xxx_messageInfo_ScannedInvoiceRequest_Data.Size(m)
}
func (m *ScannedInvoiceRequest_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_ScannedInvoiceRequest_Data.DiscardUnknown(m)
}

var xxx_messageInfo_ScannedInvoiceRequest_Data proto.InternalMessageInfo

func (m *ScannedInvoiceRequest_Data) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// Electronic Invoice Line
type ElectronicInvoiceLineRequest struct {
	Inputs               []*ElectronicInvoiceLineRequest_Data `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	DatasetName          string                               `protobuf:"bytes,2,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`
	Options              *SuggestionOptions                   `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ElectronicInvoiceLineRequest) Reset()         { *m = ElectronicInvoiceLineRequest{} }
func (m *ElectronicInvoiceLineRequest) String() string { return proto.CompactTextString(m) }
func (*ElectronicInvoiceLineRequest) ProtoMessage()    {}
func (*ElectronicInvoiceLineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_5b895ab887d20878, []int{5}
}
func (m *ElectronicInvoiceLineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectronicInvoiceLineRequest.Unmarshal(m, b)
}
func (m *ElectronicInvoiceLineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectronicInvoiceLineRequest.Marshal(b, m, deterministic)
}
func (dst *ElectronicInvoiceLineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectronicInvoiceLineRequest.Merge(dst, src)
}
func (m *ElectronicInvoiceLineRequest) XXX_Size() int {
	return xxx_messageInfo_ElectronicInvoiceLineRequest.Size(m)
}
func (m *ElectronicInvoiceLineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectronicInvoiceLineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ElectronicInvoiceLineRequest proto.InternalMessageInfo

func (m *ElectronicInvoiceLineRequest) GetInputs() []*ElectronicInvoiceLineRequest_Data {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *ElectronicInvoiceLineRequest) GetDatasetName() string {
	if m != nil {
		return m.DatasetName
	}
	return ""
}

func (m *ElectronicInvoiceLineRequest) GetOptions() *SuggestionOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type ElectronicInvoiceLineRequest_Data struct {
	IssueDate            *timestamp.Timestamp  `protobuf:"bytes,1,opt,name=issue_date,json=issueDate,proto3" json:"issue_date,omitempty"`
	Currency             *wrappers.StringValue `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	SupplierId           string                `protobuf:"bytes,3,opt,name=supplier_id,json=supplierId,proto3" json:"supplier_id,omitempty"`
	SupplierName         *wrappers.StringValue `protobuf:"bytes,4,opt,name=supplier_name,json=supplierName,proto3" json:"supplier_name,omitempty"`
	SupplierGlobalId     *wrappers.StringValue `protobuf:"bytes,5,opt,name=supplier_global_id,json=supplierGlobalId,proto3" json:"supplier_global_id,omitempty"`
	CustomerRef          *wrappers.StringValue `protobuf:"bytes,6,opt,name=customer_ref,json=customerRef,proto3" json:"customer_ref,omitempty"`
	Total                *wrappers.Int32Value  `protobuf:"bytes,7,opt,name=total,proto3" json:"total,omitempty"`
	LineText             *wrappers.StringValue `protobuf:"bytes,8,opt,name=line_text,json=lineText,proto3" json:"line_text,omitempty"`
	LineId               *wrappers.StringValue `protobuf:"bytes,9,opt,name=line_id,json=lineId,proto3" json:"line_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ElectronicInvoiceLineRequest_Data) Reset()         { *m = ElectronicInvoiceLineRequest_Data{} }
func (m *ElectronicInvoiceLineRequest_Data) String() string { return proto.CompactTextString(m) }
func (*ElectronicInvoiceLineRequest_Data) ProtoMessage()    {}
func (*ElectronicInvoiceLineRequest_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_5b895ab887d20878, []int{5, 0}
}
func (m *ElectronicInvoiceLineRequest_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectronicInvoiceLineRequest_Data.Unmarshal(m, b)
}
func (m *ElectronicInvoiceLineRequest_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectronicInvoiceLineRequest_Data.Marshal(b, m, deterministic)
}
func (dst *ElectronicInvoiceLineRequest_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectronicInvoiceLineRequest_Data.Merge(dst, src)
}
func (m *ElectronicInvoiceLineRequest_Data) XXX_Size() int {
	return xxx_messageInfo_ElectronicInvoiceLineRequest_Data.Size(m)
}
func (m *ElectronicInvoiceLineRequest_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectronicInvoiceLineRequest_Data.DiscardUnknown(m)
}

var xxx_messageInfo_ElectronicInvoiceLineRequest_Data proto.InternalMessageInfo

func (m *ElectronicInvoiceLineRequest_Data) GetIssueDate() *timestamp.Timestamp {
	if m != nil {
		return m.IssueDate
	}
	return nil
}

func (m *ElectronicInvoiceLineRequest_Data) GetCurrency() *wrappers.StringValue {
	if m != nil {
		return m.Currency
	}
	return nil
}

func (m *ElectronicInvoiceLineRequest_Data) GetSupplierId() string {
	if m != nil {
		return m.SupplierId
	}
	return ""
}

func (m *ElectronicInvoiceLineRequest_Data) GetSupplierName() *wrappers.StringValue {
	if m != nil {
		return m.SupplierName
	}
	return nil
}

func (m *ElectronicInvoiceLineRequest_Data) GetSupplierGlobalId() *wrappers.StringValue {
	if m != nil {
		return m.SupplierGlobalId
	}
	return nil
}

func (m *ElectronicInvoiceLineRequest_Data) GetCustomerRef() *wrappers.StringValue {
	if m != nil {
		return m.CustomerRef
	}
	return nil
}

func (m *ElectronicInvoiceLineRequest_Data) GetTotal() *wrappers.Int32Value {
	if m != nil {
		return m.Total
	}
	return nil
}

func (m *ElectronicInvoiceLineRequest_Data) GetLineText() *wrappers.StringValue {
	if m != nil {
		return m.LineText
	}
	return nil
}

func (m *ElectronicInvoiceLineRequest_Data) GetLineId() *wrappers.StringValue {
	if m != nil {
		return m.LineId
	}
	return nil
}

// Bank
type BankRequest struct {
	Inputs               []*BankRequest_Data `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	DatasetName          string              `protobuf:"bytes,2,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`
	Options              *SuggestionOptions  `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BankRequest) Reset()         { *m = BankRequest{} }
func (m *BankRequest) String() string { return proto.CompactTextString(m) }
func (*BankRequest) ProtoMessage()    {}
func (*BankRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_5b895ab887d20878, []int{6}
}
func (m *BankRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankRequest.Unmarshal(m, b)
}
func (m *BankRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankRequest.Marshal(b, m, deterministic)
}
func (dst *BankRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankRequest.Merge(dst, src)
}
func (m *BankRequest) XXX_Size() int {
	return xxx_messageInfo_BankRequest.Size(m)
}
func (m *BankRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BankRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BankRequest proto.InternalMessageInfo

func (m *BankRequest) GetInputs() []*BankRequest_Data {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *BankRequest) GetDatasetName() string {
	if m != nil {
		return m.DatasetName
	}
	return ""
}

func (m *BankRequest) GetOptions() *SuggestionOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type BankRequest_Data struct {
	AccountNumber        int32                `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	Amount               *wrappers.FloatValue `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	EntryType            int32                `protobuf:"varint,3,opt,name=entry_type,json=entryType,proto3" json:"entry_type,omitempty"`
	Text                 string               `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	TimeStamp            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BankRequest_Data) Reset()         { *m = BankRequest_Data{} }
func (m *BankRequest_Data) String() string { return proto.CompactTextString(m) }
func (*BankRequest_Data) ProtoMessage()    {}
func (*BankRequest_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_5b895ab887d20878, []int{6, 0}
}
func (m *BankRequest_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankRequest_Data.Unmarshal(m, b)
}
func (m *BankRequest_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankRequest_Data.Marshal(b, m, deterministic)
}
func (dst *BankRequest_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankRequest_Data.Merge(dst, src)
}
func (m *BankRequest_Data) XXX_Size() int {
	return xxx_messageInfo_BankRequest_Data.Size(m)
}
func (m *BankRequest_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_BankRequest_Data.DiscardUnknown(m)
}

var xxx_messageInfo_BankRequest_Data proto.InternalMessageInfo

func (m *BankRequest_Data) GetAccountNumber() int32 {
	if m != nil {
		return m.AccountNumber
	}
	return 0
}

func (m *BankRequest_Data) GetAmount() *wrappers.FloatValue {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *BankRequest_Data) GetEntryType() int32 {
	if m != nil {
		return m.EntryType
	}
	return 0
}

func (m *BankRequest_Data) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *BankRequest_Data) GetTimeStamp() *timestamp.Timestamp {
	if m != nil {
		return m.TimeStamp
	}
	return nil
}

func init() {
	proto.RegisterType((*Confidence)(nil), "asgt.jester.v1alpha1.Confidence")
	proto.RegisterType((*Prediction)(nil), "asgt.jester.v1alpha1.Prediction")
	proto.RegisterType((*Prediction_Candidate)(nil), "asgt.jester.v1alpha1.Prediction.Candidate")
	proto.RegisterType((*SuggestionsResponse)(nil), "asgt.jester.v1alpha1.SuggestionsResponse")
	proto.RegisterType((*SuggestionOptions)(nil), "asgt.jester.v1alpha1.SuggestionOptions")
	proto.RegisterType((*ScannedInvoiceRequest)(nil), "asgt.jester.v1alpha1.ScannedInvoiceRequest")
	proto.RegisterType((*ScannedInvoiceRequest_Data)(nil), "asgt.jester.v1alpha1.ScannedInvoiceRequest.Data")
	proto.RegisterType((*ElectronicInvoiceLineRequest)(nil), "asgt.jester.v1alpha1.ElectronicInvoiceLineRequest")
	proto.RegisterType((*ElectronicInvoiceLineRequest_Data)(nil), "asgt.jester.v1alpha1.ElectronicInvoiceLineRequest.Data")
	proto.RegisterType((*BankRequest)(nil), "asgt.jester.v1alpha1.BankRequest")
	proto.RegisterType((*BankRequest_Data)(nil), "asgt.jester.v1alpha1.BankRequest.Data")
	proto.RegisterEnum("asgt.jester.v1alpha1.Confidence_Level", Confidence_Level_name, Confidence_Level_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JesterClient is the client API for Jester service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JesterClient interface {
	ScannedInvoiceSuggestions(ctx context.Context, in *ScannedInvoiceRequest, opts ...grpc.CallOption) (*SuggestionsResponse, error)
	ElectronicInvoicLineSuggestions(ctx context.Context, in *ElectronicInvoiceLineRequest, opts ...grpc.CallOption) (*SuggestionsResponse, error)
	BankSuggestions(ctx context.Context, in *BankRequest, opts ...grpc.CallOption) (*SuggestionsResponse, error)
}

type jesterClient struct {
	cc *grpc.ClientConn
}

func NewJesterClient(cc *grpc.ClientConn) JesterClient {
	return &jesterClient{cc}
}

func (c *jesterClient) ScannedInvoiceSuggestions(ctx context.Context, in *ScannedInvoiceRequest, opts ...grpc.CallOption) (*SuggestionsResponse, error) {
	out := new(SuggestionsResponse)
	err := c.cc.Invoke(ctx, "/asgt.jester.v1alpha1.Jester/ScannedInvoiceSuggestions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jesterClient) ElectronicInvoicLineSuggestions(ctx context.Context, in *ElectronicInvoiceLineRequest, opts ...grpc.CallOption) (*SuggestionsResponse, error) {
	out := new(SuggestionsResponse)
	err := c.cc.Invoke(ctx, "/asgt.jester.v1alpha1.Jester/ElectronicInvoicLineSuggestions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jesterClient) BankSuggestions(ctx context.Context, in *BankRequest, opts ...grpc.CallOption) (*SuggestionsResponse, error) {
	out := new(SuggestionsResponse)
	err := c.cc.Invoke(ctx, "/asgt.jester.v1alpha1.Jester/BankSuggestions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JesterServer is the server API for Jester service.
type JesterServer interface {
	ScannedInvoiceSuggestions(context.Context, *ScannedInvoiceRequest) (*SuggestionsResponse, error)
	ElectronicInvoicLineSuggestions(context.Context, *ElectronicInvoiceLineRequest) (*SuggestionsResponse, error)
	BankSuggestions(context.Context, *BankRequest) (*SuggestionsResponse, error)
}

func RegisterJesterServer(s *grpc.Server, srv JesterServer) {
	s.RegisterService(&_Jester_serviceDesc, srv)
}

func _Jester_ScannedInvoiceSuggestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScannedInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JesterServer).ScannedInvoiceSuggestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asgt.jester.v1alpha1.Jester/ScannedInvoiceSuggestions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JesterServer).ScannedInvoiceSuggestions(ctx, req.(*ScannedInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jester_ElectronicInvoicLineSuggestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ElectronicInvoiceLineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JesterServer).ElectronicInvoicLineSuggestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asgt.jester.v1alpha1.Jester/ElectronicInvoicLineSuggestions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JesterServer).ElectronicInvoicLineSuggestions(ctx, req.(*ElectronicInvoiceLineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jester_BankSuggestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JesterServer).BankSuggestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asgt.jester.v1alpha1.Jester/BankSuggestions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JesterServer).BankSuggestions(ctx, req.(*BankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Jester_serviceDesc = grpc.ServiceDesc{
	ServiceName: "asgt.jester.v1alpha1.Jester",
	HandlerType: (*JesterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ScannedInvoiceSuggestions",
			Handler:    _Jester_ScannedInvoiceSuggestions_Handler,
		},
		{
			MethodName: "ElectronicInvoicLineSuggestions",
			Handler:    _Jester_ElectronicInvoicLineSuggestions_Handler,
		},
		{
			MethodName: "BankSuggestions",
			Handler:    _Jester_BankSuggestions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "asgt/jester/v1alpha1/jester.proto",
}

func init() {
	proto.RegisterFile("asgt/jester/v1alpha1/jester.proto", fileDescriptor_jester_5b895ab887d20878)
}

var fileDescriptor_jester_5b895ab887d20878 = []byte{
	// 996 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x55, 0x4f, 0x73, 0xdb, 0xc4,
	0x1b, 0xfe, 0x29, 0xfe, 0x13, 0xeb, 0x55, 0x92, 0xfa, 0xb7, 0xb4, 0x8c, 0x71, 0x03, 0x71, 0x34,
	0xd3, 0x92, 0x06, 0x46, 0x26, 0xce, 0x30, 0xd0, 0x0c, 0x03, 0x34, 0x4d, 0x69, 0x1c, 0x12, 0x87,
	0x51, 0x42, 0x3b, 0xe5, 0xa2, 0x59, 0x4b, 0x1b, 0xb3, 0x54, 0x5a, 0x09, 0x69, 0x65, 0x9a, 0x19,
	0x4e, 0x1c, 0xb8, 0x71, 0x60, 0xb8, 0xf1, 0x21, 0xf8, 0x24, 0x1c, 0x98, 0x01, 0xbe, 0x01, 0x17,
	0x8e, 0x7c, 0x03, 0x66, 0x57, 0x2b, 0x59, 0xb8, 0x4e, 0xe3, 0x9c, 0x7a, 0xd3, 0xbe, 0x7a, 0x9e,
	0x77, 0x9f, 0xf7, 0xd9, 0x77, 0xdf, 0x85, 0x75, 0x9c, 0x8c, 0x78, 0xf7, 0x2b, 0x92, 0x70, 0x12,
	0x77, 0xc7, 0x5b, 0xd8, 0x8f, 0xbe, 0xc4, 0x5b, 0x6a, 0x6d, 0x45, 0x71, 0xc8, 0x43, 0x74, 0x5d,
	0x40, 0x2c, 0x15, 0xca, 0x21, 0xed, 0xd5, 0x51, 0x18, 0x8e, 0x7c, 0xd2, 0xc5, 0x11, 0xed, 0x62,
	0xc6, 0x42, 0x8e, 0x39, 0x0d, 0x59, 0x92, 0x71, 0xda, 0x6b, 0xea, 0xaf, 0x5c, 0x0d, 0xd3, 0xb3,
	0x2e, 0xa7, 0x01, 0x49, 0x38, 0x0e, 0x22, 0x05, 0x78, 0x63, 0x1a, 0xf0, 0x4d, 0x8c, 0xa3, 0x88,
	0xc4, 0x2a, 0x81, 0xf9, 0xab, 0x06, 0x70, 0x3f, 0x64, 0x67, 0xd4, 0x23, 0xcc, 0x25, 0xe8, 0x03,
	0xa8, 0xf9, 0x64, 0x4c, 0xfc, 0x96, 0xd6, 0xd1, 0x36, 0x56, 0x7a, 0xb7, 0xad, 0x59, 0x9a, 0xac,
	0x09, 0xc1, 0x3a, 0x14, 0x68, 0x3b, 0x23, 0xa1, 0x2d, 0xa8, 0x8d, 0xb1, 0x9f, 0x92, 0xd6, 0x42,
	0x47, 0xdb, 0x30, 0x7a, 0x37, 0xad, 0x6c, 0x73, 0x2b, 0xdf, 0xdc, 0xfa, 0xc4, 0x0f, 0x31, 0x7f,
	0x24, 0x20, 0x76, 0x86, 0x34, 0x8f, 0xa0, 0x26, 0x53, 0x20, 0x03, 0x16, 0x3f, 0x1f, 0x7c, 0x3a,
	0x38, 0x7e, 0x3c, 0x68, 0xfe, 0x0f, 0x2d, 0x41, 0xe3, 0xd1, 0x03, 0xfb, 0x89, 0x73, 0x78, 0xfc,
	0xb8, 0xa9, 0xa1, 0x45, 0xa8, 0x88, 0x8f, 0x05, 0xf1, 0x71, 0xd4, 0xdf, 0x6b, 0x56, 0x50, 0x03,
	0xaa, 0xfb, 0xfd, 0x87, 0xfb, 0xcd, 0x2a, 0x5a, 0x06, 0x5d, 0x22, 0xe5, 0xb2, 0x66, 0xfe, 0xa9,
	0x01, 0x7c, 0x16, 0x13, 0x8f, 0xba, 0xc2, 0x25, 0xf4, 0x2a, 0xd4, 0x39, 0x8e, 0x47, 0x84, 0xcb,
	0x7a, 0x74, 0x5b, 0xad, 0xd0, 0x01, 0x80, 0x8b, 0x99, 0x47, 0x3d, 0xcc, 0x49, 0xd2, 0x5a, 0xe8,
	0x54, 0x36, 0x8c, 0xde, 0xe6, 0xec, 0x5a, 0x27, 0xd9, 0xac, 0xfb, 0x39, 0xc5, 0x2e, 0xb1, 0xdb,
	0x2e, 0xe8, 0xc5, 0x0f, 0x74, 0x1d, 0x6a, 0x3e, 0x1e, 0x2a, 0xff, 0x74, 0x3b, 0x5b, 0xa0, 0x8f,
	0x01, 0xdc, 0xc2, 0x32, 0x65, 0x4e, 0xe7, 0x32, 0x6b, 0xed, 0x12, 0xc7, 0x7c, 0x02, 0xaf, 0x9c,
	0xa4, 0xa3, 0x11, 0x49, 0xe4, 0xe1, 0xdb, 0x24, 0x89, 0x42, 0x96, 0x10, 0xb4, 0x0b, 0x46, 0x54,
	0xe8, 0x4b, 0x5a, 0x9a, 0x2c, 0xa4, 0x73, 0x59, 0x21, 0x76, 0x99, 0x64, 0xfe, 0xa0, 0xc1, 0xff,
	0x27, 0xb9, 0x8f, 0x23, 0x19, 0x45, 0x77, 0xa0, 0x99, 0x14, 0x41, 0xc7, 0xa7, 0x01, 0xcd, 0x3c,
	0xac, 0xd9, 0xd7, 0x26, 0xf1, 0x43, 0x11, 0x46, 0x47, 0xb0, 0x12, 0x50, 0xe6, 0x4c, 0x55, 0x38,
	0x7f, 0xf3, 0x2c, 0x07, 0x94, 0x4d, 0x82, 0xe6, 0x3f, 0x1a, 0xdc, 0x38, 0x71, 0x31, 0x63, 0xc4,
	0xeb, 0xb3, 0x71, 0x48, 0x5d, 0x62, 0x93, 0xaf, 0x53, 0x92, 0x70, 0xb4, 0x0f, 0x75, 0xca, 0xa2,
	0x94, 0xe7, 0x85, 0xbe, 0x33, 0x7b, 0x83, 0x99, 0x64, 0x6b, 0x0f, 0x73, 0x6c, 0x2b, 0x3e, 0x5a,
	0x87, 0x25, 0x0f, 0x73, 0x9c, 0x10, 0xee, 0x30, 0x1c, 0x64, 0x82, 0x75, 0xdb, 0x50, 0xb1, 0x01,
	0x0e, 0x08, 0xba, 0x07, 0x8b, 0x61, 0xe6, 0x45, 0xab, 0x22, 0x0f, 0xec, 0xcd, 0x0b, 0x76, 0x9b,
	0xb6, 0xce, 0xce, 0x79, 0xed, 0x0d, 0xa8, 0x8a, 0x5d, 0x51, 0x07, 0x0c, 0x8f, 0x24, 0x6e, 0x4c,
	0x65, 0x5c, 0xb5, 0x46, 0x39, 0x64, 0xfe, 0x5d, 0x83, 0xd5, 0x07, 0x3e, 0x71, 0x79, 0x1c, 0x32,
	0xea, 0x2a, 0xe5, 0x87, 0x94, 0x15, 0xa5, 0x1f, 0x4f, 0x95, 0xfe, 0xde, 0x6c, 0x31, 0x2f, 0xca,
	0xf1, 0x32, 0x1c, 0xf8, 0xb1, 0xaa, 0x2c, 0xb8, 0x0b, 0x40, 0x93, 0x24, 0x25, 0x8e, 0xb8, 0x25,
	0xd2, 0x01, 0xa3, 0xd7, 0x7e, 0x6e, 0x3c, 0x9c, 0xe6, 0xc3, 0xcb, 0xd6, 0x25, 0x7a, 0x4f, 0x5c,
	0xa9, 0xf7, 0xa1, 0xe1, 0xa6, 0x71, 0x4c, 0x98, 0x7b, 0xae, 0xae, 0xce, 0xea, 0x73, 0xc4, 0x13,
	0x1e, 0x53, 0x36, 0xca, 0x06, 0x4b, 0x81, 0x46, 0x6b, 0x60, 0x24, 0x69, 0x14, 0xf9, 0x94, 0xc4,
	0x0e, 0xf5, 0x64, 0x11, 0xba, 0x0d, 0x79, 0xa8, 0xef, 0xa1, 0x7b, 0xb0, 0x5c, 0x00, 0xa4, 0x0b,
	0xd5, 0x39, 0xf2, 0x2f, 0xe5, 0x14, 0x69, 0xd2, 0x01, 0xa0, 0x22, 0xc5, 0xc8, 0x0f, 0x87, 0xd8,
	0x17, 0x5b, 0xd5, 0xe6, 0xc8, 0xd3, 0xcc, 0x79, 0x0f, 0x25, 0xad, 0xef, 0xa1, 0x8f, 0x60, 0xc9,
	0x4d, 0x13, 0x1e, 0x06, 0x24, 0x76, 0x62, 0x72, 0xd6, 0xaa, 0xcf, 0x91, 0xc5, 0xc8, 0x19, 0x36,
	0x39, 0x13, 0xf3, 0x97, 0x87, 0x1c, 0xfb, 0xad, 0xc5, 0x0b, 0xe6, 0x6f, 0x9f, 0xf1, 0xed, 0x9e,
	0x9a, 0xbf, 0x12, 0x89, 0xee, 0x82, 0xee, 0x53, 0x46, 0x1c, 0x4e, 0x9e, 0xf1, 0x56, 0x63, 0x1e,
	0x7b, 0x05, 0xfc, 0x94, 0x3c, 0xe3, 0xe8, 0x5d, 0x58, 0x94, 0x54, 0xea, 0xb5, 0xf4, 0x39, 0x88,
	0x75, 0x01, 0xee, 0x7b, 0xe6, 0xf7, 0x15, 0x30, 0x76, 0x31, 0x7b, 0x9a, 0xb7, 0xf6, 0x87, 0x53,
	0xad, 0x7d, 0xc1, 0xd8, 0x28, 0x51, 0x5e, 0x46, 0x27, 0xff, 0xa6, 0xa9, 0x4e, 0xbe, 0x05, 0x2b,
	0xd8, 0x75, 0xc3, 0x94, 0x71, 0x87, 0xa5, 0xc1, 0x90, 0xc4, 0x6a, 0x2c, 0x2e, 0xab, 0xe8, 0x40,
	0x06, 0xd1, 0x36, 0xd4, 0x71, 0x20, 0xd6, 0xf3, 0xbc, 0x85, 0x0a, 0x8a, 0x5e, 0x07, 0x20, 0x8c,
	0xc7, 0xe7, 0x0e, 0x3f, 0x8f, 0x88, 0x94, 0x5a, 0xb3, 0x75, 0x19, 0x39, 0x3d, 0x8f, 0x08, 0x42,
	0x50, 0x95, 0xc7, 0x54, 0x95, 0x15, 0xca, 0x6f, 0x71, 0xb1, 0xc4, 0x93, 0xef, 0xc8, 0x6b, 0xa3,
	0xfa, 0xee, 0x85, 0x17, 0x4b, 0xa0, 0x4f, 0xc4, 0x67, 0xef, 0x8f, 0x0a, 0xd4, 0x0f, 0xa4, 0x03,
	0xe8, 0x67, 0x0d, 0x5e, 0xfb, 0xef, 0xd8, 0x2c, 0xbd, 0x36, 0xe8, 0xad, 0x2b, 0xcc, 0xd9, 0xf6,
	0x9d, 0xcb, 0xac, 0x2d, 0x5e, 0x2f, 0xf3, 0xd6, 0x77, 0xbf, 0xff, 0xf5, 0xd3, 0xc2, 0x9a, 0xd9,
	0xee, 0x8e, 0xb7, 0xba, 0xea, 0x55, 0xd9, 0x49, 0xb2, 0xac, 0x34, 0xcb, 0xba, 0xa3, 0x6d, 0xa2,
	0x5f, 0x34, 0x58, 0x9b, 0x1e, 0x6c, 0x62, 0xae, 0x95, 0x25, 0xf6, 0xae, 0x3e, 0x0f, 0xaf, 0xa2,
	0xf4, 0x6d, 0xa9, 0xf4, 0xb6, 0xb9, 0x5e, 0x56, 0x4a, 0x8a, 0xe4, 0x4a, 0xac, 0x68, 0x70, 0x21,
	0xf8, 0x5b, 0xb8, 0x26, 0xba, 0xb5, 0xac, 0x6f, 0xfd, 0xd2, 0xa6, 0xbe, 0x8a, 0x9c, 0x9b, 0x52,
	0xce, 0x0d, 0xb3, 0x59, 0x96, 0x33, 0xc4, 0xec, 0xe9, 0x8e, 0xb6, 0xb9, 0xdb, 0xf8, 0xa2, 0x9e,
	0xe5, 0x18, 0xd6, 0xe5, 0xf9, 0x6f, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x75, 0x81, 0xb8, 0xc7,
	0x7c, 0x0a, 0x00, 0x00,
}
