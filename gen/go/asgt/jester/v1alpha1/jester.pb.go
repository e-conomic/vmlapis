// Code generated by protoc-gen-go. DO NOT EDIT.
// source: asgt/jester/v1alpha1/jester.proto

package jester

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _type "github.com/e-conomic/vmlapis/gen/go/asgt/type"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// AutoSuggest
type SuggestionResponse struct {
	Predictions          []*_type.Prediction `protobuf:"bytes,1,rep,name=predictions,proto3" json:"predictions,omitempty"`
	Model                *_type.Model        `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SuggestionResponse) Reset()         { *m = SuggestionResponse{} }
func (m *SuggestionResponse) String() string { return proto.CompactTextString(m) }
func (*SuggestionResponse) ProtoMessage()    {}
func (*SuggestionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_f6901cfeaf2e97fd, []int{0}
}
func (m *SuggestionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestionResponse.Unmarshal(m, b)
}
func (m *SuggestionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestionResponse.Marshal(b, m, deterministic)
}
func (dst *SuggestionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestionResponse.Merge(dst, src)
}
func (m *SuggestionResponse) XXX_Size() int {
	return xxx_messageInfo_SuggestionResponse.Size(m)
}
func (m *SuggestionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestionResponse proto.InternalMessageInfo

func (m *SuggestionResponse) GetPredictions() []*_type.Prediction {
	if m != nil {
		return m.Predictions
	}
	return nil
}

func (m *SuggestionResponse) GetModel() *_type.Model {
	if m != nil {
		return m.Model
	}
	return nil
}

type SuggestionOptions struct {
	SuggestionLimit      int32                  `protobuf:"varint,1,opt,name=suggestion_limit,json=suggestionLimit,proto3" json:"suggestion_limit,omitempty"`
	MinConfidence        _type.Confidence_Level `protobuf:"varint,2,opt,name=min_confidence,json=minConfidence,proto3,enum=asgt.type.Confidence_Level" json:"min_confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SuggestionOptions) Reset()         { *m = SuggestionOptions{} }
func (m *SuggestionOptions) String() string { return proto.CompactTextString(m) }
func (*SuggestionOptions) ProtoMessage()    {}
func (*SuggestionOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_f6901cfeaf2e97fd, []int{1}
}
func (m *SuggestionOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestionOptions.Unmarshal(m, b)
}
func (m *SuggestionOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestionOptions.Marshal(b, m, deterministic)
}
func (dst *SuggestionOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestionOptions.Merge(dst, src)
}
func (m *SuggestionOptions) XXX_Size() int {
	return xxx_messageInfo_SuggestionOptions.Size(m)
}
func (m *SuggestionOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestionOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestionOptions proto.InternalMessageInfo

func (m *SuggestionOptions) GetSuggestionLimit() int32 {
	if m != nil {
		return m.SuggestionLimit
	}
	return 0
}

func (m *SuggestionOptions) GetMinConfidence() _type.Confidence_Level {
	if m != nil {
		return m.MinConfidence
	}
	return _type.Confidence_UNKNOWN
}

type SuggestionRequest struct {
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string             `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Inputs               []*_type.Data      `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Options              *SuggestionOptions `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SuggestionRequest) Reset()         { *m = SuggestionRequest{} }
func (m *SuggestionRequest) String() string { return proto.CompactTextString(m) }
func (*SuggestionRequest) ProtoMessage()    {}
func (*SuggestionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_f6901cfeaf2e97fd, []int{2}
}
func (m *SuggestionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestionRequest.Unmarshal(m, b)
}
func (m *SuggestionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestionRequest.Marshal(b, m, deterministic)
}
func (dst *SuggestionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestionRequest.Merge(dst, src)
}
func (m *SuggestionRequest) XXX_Size() int {
	return xxx_messageInfo_SuggestionRequest.Size(m)
}
func (m *SuggestionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestionRequest proto.InternalMessageInfo

func (m *SuggestionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SuggestionRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SuggestionRequest) GetInputs() []*_type.Data {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *SuggestionRequest) GetOptions() *SuggestionOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func init() {
	proto.RegisterType((*SuggestionResponse)(nil), "asgt.jester.v1alpha1.SuggestionResponse")
	proto.RegisterType((*SuggestionOptions)(nil), "asgt.jester.v1alpha1.SuggestionOptions")
	proto.RegisterType((*SuggestionRequest)(nil), "asgt.jester.v1alpha1.SuggestionRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JesterClient is the client API for Jester service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JesterClient interface {
	Suggest(ctx context.Context, in *SuggestionRequest, opts ...grpc.CallOption) (*SuggestionResponse, error)
}

type jesterClient struct {
	cc *grpc.ClientConn
}

func NewJesterClient(cc *grpc.ClientConn) JesterClient {
	return &jesterClient{cc}
}

func (c *jesterClient) Suggest(ctx context.Context, in *SuggestionRequest, opts ...grpc.CallOption) (*SuggestionResponse, error) {
	out := new(SuggestionResponse)
	err := c.cc.Invoke(ctx, "/asgt.jester.v1alpha1.Jester/Suggest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JesterServer is the server API for Jester service.
type JesterServer interface {
	Suggest(context.Context, *SuggestionRequest) (*SuggestionResponse, error)
}

func RegisterJesterServer(s *grpc.Server, srv JesterServer) {
	s.RegisterService(&_Jester_serviceDesc, srv)
}

func _Jester_Suggest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SuggestionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JesterServer).Suggest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asgt.jester.v1alpha1.Jester/Suggest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JesterServer).Suggest(ctx, req.(*SuggestionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Jester_serviceDesc = grpc.ServiceDesc{
	ServiceName: "asgt.jester.v1alpha1.Jester",
	HandlerType: (*JesterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Suggest",
			Handler:    _Jester_Suggest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "asgt/jester/v1alpha1/jester.proto",
}

func init() {
	proto.RegisterFile("asgt/jester/v1alpha1/jester.proto", fileDescriptor_jester_f6901cfeaf2e97fd)
}

var fileDescriptor_jester_f6901cfeaf2e97fd = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0xe5, 0xfd, 0x93, 0x65, 0x5d, 0xb1, 0xbb, 0x58, 0xac, 0x14, 0x05, 0x24, 0x4a, 0x84,
	0xd8, 0xb0, 0x87, 0x44, 0x0d, 0x07, 0xa4, 0xde, 0x28, 0x9c, 0x50, 0x11, 0xc8, 0xdc, 0xb8, 0x54,
	0xa6, 0x19, 0x82, 0x51, 0x62, 0x9b, 0xda, 0xa9, 0x84, 0xaa, 0x5e, 0x7a, 0xe2, 0xde, 0x87, 0xe0,
	0x81, 0x78, 0x05, 0x1e, 0x04, 0xd9, 0x71, 0x9b, 0x20, 0x90, 0x7a, 0x4b, 0x7e, 0xdf, 0xe7, 0xf9,
	0x3c, 0x33, 0xc6, 0x8f, 0x99, 0x2e, 0x4d, 0xf6, 0x15, 0xb4, 0x81, 0x45, 0xb6, 0x1c, 0xb1, 0x4a,
	0x7d, 0x61, 0x23, 0xff, 0x9f, 0xaa, 0x85, 0x34, 0x92, 0xdc, 0xb7, 0x96, 0xd4, 0xa3, 0x9d, 0x25,
	0x72, 0x34, 0x33, 0xdf, 0x15, 0x64, 0x05, 0x33, 0xac, 0xf5, 0x46, 0xd7, 0x1d, 0xad, 0x65, 0x01,
	0x95, 0xc7, 0x51, 0x87, 0xd5, 0x02, 0x0a, 0x3e, 0x37, 0x5c, 0x0a, 0xaf, 0x3d, 0x2c, 0xa5, 0x2c,
	0x2b, 0xc8, 0x98, 0xe2, 0x19, 0x13, 0x42, 0x1a, 0x66, 0x45, 0xdd, 0xaa, 0x71, 0x83, 0xc9, 0x87,
	0xa6, 0x2c, 0x41, 0x5b, 0x48, 0x41, 0x2b, 0x29, 0x34, 0x90, 0x17, 0x78, 0xd0, 0xd5, 0xd1, 0x21,
	0x1a, 0x1e, 0x27, 0x83, 0xfc, 0x3a, 0x75, 0x17, 0xb5, 0x29, 0xe9, 0xfb, 0xbd, 0x4a, 0xfb, 0x4e,
	0xf2, 0x14, 0x9f, 0xba, 0x7b, 0x85, 0x47, 0x43, 0x94, 0x0c, 0xf2, 0xab, 0xde, 0x91, 0xb7, 0x96,
	0xd3, 0x56, 0x8e, 0x37, 0x08, 0xdf, 0xeb, 0x72, 0xdf, 0xa9, 0xf6, 0xf4, 0x33, 0x7c, 0xa5, 0xf7,
	0x70, 0x56, 0xf1, 0x9a, 0x9b, 0x10, 0x0d, 0x51, 0x72, 0x4a, 0x2f, 0x3b, 0x3e, 0xb5, 0x98, 0x4c,
	0xf0, 0x45, 0xcd, 0xc5, 0x6c, 0x2e, 0xc5, 0x67, 0x5e, 0x80, 0x98, 0x83, 0x4b, 0xbc, 0xc8, 0x1f,
	0xf4, 0x12, 0x5f, 0xed, 0xc5, 0x74, 0x0a, 0x4b, 0xa8, 0xe8, 0xdd, 0x9a, 0x8b, 0x0e, 0xc6, 0x3f,
	0xff, 0xba, 0x04, 0x85, 0x6f, 0x0d, 0x68, 0x43, 0x08, 0x3e, 0x11, 0xac, 0x06, 0x17, 0x7c, 0x4e,
	0xdd, 0xb7, 0x65, 0xb6, 0xa2, 0xcb, 0x38, 0xa7, 0xee, 0x9b, 0xdc, 0xe0, 0x80, 0x0b, 0xd5, 0x18,
	0x1d, 0x1e, 0xbb, 0xf1, 0x5c, 0xf6, 0x92, 0x5f, 0x33, 0xc3, 0xa8, 0x97, 0xc9, 0x4b, 0x7c, 0x26,
	0xdb, 0x06, 0xc3, 0x13, 0x37, 0x95, 0x9b, 0xf4, 0x7f, 0x1b, 0x4f, 0xff, 0x99, 0x07, 0xdd, 0x9d,
	0xcb, 0xb7, 0x08, 0x07, 0x6f, 0x9c, 0x9d, 0xfc, 0x40, 0xf8, 0xcc, 0x3b, 0xc9, 0xc1, 0x42, 0xbe,
	0xa7, 0x28, 0x39, 0x6c, 0x6c, 0x37, 0x1f, 0xdf, 0x6e, 0x7e, 0xfd, 0xde, 0x1e, 0x3d, 0x89, 0x1f,
	0x75, 0x8f, 0x75, 0x65, 0x5b, 0x5a, 0x67, 0x2b, 0x3b, 0x89, 0xf5, 0xd8, 0x2f, 0x62, 0x8c, 0x6e,
	0x27, 0x77, 0x3e, 0x06, 0x6d, 0xc5, 0x4f, 0x81, 0x7b, 0x4c, 0xcf, 0xff, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x36, 0x6e, 0x92, 0xe3, 0xee, 0x02, 0x00, 0x00,
}
