// Code generated by protoc-gen-go. DO NOT EDIT.
// source: asgt/jester/v1alpha1/jester.proto

package jester

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Confidence_Level int32

const (
	Confidence_UNKNOWN   Confidence_Level = 0
	Confidence_VERY_LOW  Confidence_Level = 1
	Confidence_LOW       Confidence_Level = 2
	Confidence_MID       Confidence_Level = 3
	Confidence_HIGH      Confidence_Level = 4
	Confidence_VERY_HIGH Confidence_Level = 5
)

var Confidence_Level_name = map[int32]string{
	0: "UNKNOWN",
	1: "VERY_LOW",
	2: "LOW",
	3: "MID",
	4: "HIGH",
	5: "VERY_HIGH",
}
var Confidence_Level_value = map[string]int32{
	"UNKNOWN":   0,
	"VERY_LOW":  1,
	"LOW":       2,
	"MID":       3,
	"HIGH":      4,
	"VERY_HIGH": 5,
}

func (x Confidence_Level) String() string {
	return proto.EnumName(Confidence_Level_name, int32(x))
}
func (Confidence_Level) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_jester_2f9cab385cd11793, []int{0, 0}
}

// Common types
type Confidence struct {
	// A bucketized representation of confidence, which is intended to give clients
	// highly stable results across model upgrades.
	Level Confidence_Level `protobuf:"varint,1,opt,name=level,proto3,enum=asgt.jester.v1alpha1.Confidence_Level" json:"level,omitempty"`
	// The confidence value
	Value                *wrappers.FloatValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Confidence) Reset()         { *m = Confidence{} }
func (m *Confidence) String() string { return proto.CompactTextString(m) }
func (*Confidence) ProtoMessage()    {}
func (*Confidence) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_2f9cab385cd11793, []int{0}
}
func (m *Confidence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Confidence.Unmarshal(m, b)
}
func (m *Confidence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Confidence.Marshal(b, m, deterministic)
}
func (dst *Confidence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Confidence.Merge(dst, src)
}
func (m *Confidence) XXX_Size() int {
	return xxx_messageInfo_Confidence.Size(m)
}
func (m *Confidence) XXX_DiscardUnknown() {
	xxx_messageInfo_Confidence.DiscardUnknown(m)
}

var xxx_messageInfo_Confidence proto.InternalMessageInfo

func (m *Confidence) GetLevel() Confidence_Level {
	if m != nil {
		return m.Level
	}
	return Confidence_UNKNOWN
}

func (m *Confidence) GetValue() *wrappers.FloatValue {
	if m != nil {
		return m.Value
	}
	return nil
}

type Candidate struct {
	Label                string      `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Confidence           *Confidence `protobuf:"bytes,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Candidate) Reset()         { *m = Candidate{} }
func (m *Candidate) String() string { return proto.CompactTextString(m) }
func (*Candidate) ProtoMessage()    {}
func (*Candidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_2f9cab385cd11793, []int{1}
}
func (m *Candidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candidate.Unmarshal(m, b)
}
func (m *Candidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candidate.Marshal(b, m, deterministic)
}
func (dst *Candidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candidate.Merge(dst, src)
}
func (m *Candidate) XXX_Size() int {
	return xxx_messageInfo_Candidate.Size(m)
}
func (m *Candidate) XXX_DiscardUnknown() {
	xxx_messageInfo_Candidate.DiscardUnknown(m)
}

var xxx_messageInfo_Candidate proto.InternalMessageInfo

func (m *Candidate) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Candidate) GetConfidence() *Confidence {
	if m != nil {
		return m.Confidence
	}
	return nil
}

type SuggestionOptions struct {
	SuggestionLimit      int32            `protobuf:"varint,1,opt,name=suggestion_limit,json=suggestionLimit,proto3" json:"suggestion_limit,omitempty"`
	MinConfidence        Confidence_Level `protobuf:"varint,2,opt,name=min_confidence,json=minConfidence,proto3,enum=asgt.jester.v1alpha1.Confidence_Level" json:"min_confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SuggestionOptions) Reset()         { *m = SuggestionOptions{} }
func (m *SuggestionOptions) String() string { return proto.CompactTextString(m) }
func (*SuggestionOptions) ProtoMessage()    {}
func (*SuggestionOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_2f9cab385cd11793, []int{2}
}
func (m *SuggestionOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestionOptions.Unmarshal(m, b)
}
func (m *SuggestionOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestionOptions.Marshal(b, m, deterministic)
}
func (dst *SuggestionOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestionOptions.Merge(dst, src)
}
func (m *SuggestionOptions) XXX_Size() int {
	return xxx_messageInfo_SuggestionOptions.Size(m)
}
func (m *SuggestionOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestionOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestionOptions proto.InternalMessageInfo

func (m *SuggestionOptions) GetSuggestionLimit() int32 {
	if m != nil {
		return m.SuggestionLimit
	}
	return 0
}

func (m *SuggestionOptions) GetMinConfidence() Confidence_Level {
	if m != nil {
		return m.MinConfidence
	}
	return Confidence_UNKNOWN
}

// AutoSuggest
type SuggestionsResponse struct {
	Predictions          []*SuggestionsResponse_Prediction `protobuf:"bytes,1,rep,name=predictions,proto3" json:"predictions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *SuggestionsResponse) Reset()         { *m = SuggestionsResponse{} }
func (m *SuggestionsResponse) String() string { return proto.CompactTextString(m) }
func (*SuggestionsResponse) ProtoMessage()    {}
func (*SuggestionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_2f9cab385cd11793, []int{3}
}
func (m *SuggestionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestionsResponse.Unmarshal(m, b)
}
func (m *SuggestionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestionsResponse.Marshal(b, m, deterministic)
}
func (dst *SuggestionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestionsResponse.Merge(dst, src)
}
func (m *SuggestionsResponse) XXX_Size() int {
	return xxx_messageInfo_SuggestionsResponse.Size(m)
}
func (m *SuggestionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestionsResponse proto.InternalMessageInfo

func (m *SuggestionsResponse) GetPredictions() []*SuggestionsResponse_Prediction {
	if m != nil {
		return m.Predictions
	}
	return nil
}

type SuggestionsResponse_Prediction struct {
	Target               string       `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Candidates           []*Candidate `protobuf:"bytes,2,rep,name=candidates,proto3" json:"candidates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SuggestionsResponse_Prediction) Reset()         { *m = SuggestionsResponse_Prediction{} }
func (m *SuggestionsResponse_Prediction) String() string { return proto.CompactTextString(m) }
func (*SuggestionsResponse_Prediction) ProtoMessage()    {}
func (*SuggestionsResponse_Prediction) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_2f9cab385cd11793, []int{3, 0}
}
func (m *SuggestionsResponse_Prediction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestionsResponse_Prediction.Unmarshal(m, b)
}
func (m *SuggestionsResponse_Prediction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestionsResponse_Prediction.Marshal(b, m, deterministic)
}
func (dst *SuggestionsResponse_Prediction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestionsResponse_Prediction.Merge(dst, src)
}
func (m *SuggestionsResponse_Prediction) XXX_Size() int {
	return xxx_messageInfo_SuggestionsResponse_Prediction.Size(m)
}
func (m *SuggestionsResponse_Prediction) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestionsResponse_Prediction.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestionsResponse_Prediction proto.InternalMessageInfo

func (m *SuggestionsResponse_Prediction) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *SuggestionsResponse_Prediction) GetCandidates() []*Candidate {
	if m != nil {
		return m.Candidates
	}
	return nil
}

// Scanned Invoice
type ScannedInvoiceRequest struct {
	Inputs               []*ScannedInvoiceRequest_Input `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Targets              []string                       `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	Options              *SuggestionOptions             `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ScannedInvoiceRequest) Reset()         { *m = ScannedInvoiceRequest{} }
func (m *ScannedInvoiceRequest) String() string { return proto.CompactTextString(m) }
func (*ScannedInvoiceRequest) ProtoMessage()    {}
func (*ScannedInvoiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_2f9cab385cd11793, []int{4}
}
func (m *ScannedInvoiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScannedInvoiceRequest.Unmarshal(m, b)
}
func (m *ScannedInvoiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScannedInvoiceRequest.Marshal(b, m, deterministic)
}
func (dst *ScannedInvoiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScannedInvoiceRequest.Merge(dst, src)
}
func (m *ScannedInvoiceRequest) XXX_Size() int {
	return xxx_messageInfo_ScannedInvoiceRequest.Size(m)
}
func (m *ScannedInvoiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScannedInvoiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScannedInvoiceRequest proto.InternalMessageInfo

func (m *ScannedInvoiceRequest) GetInputs() []*ScannedInvoiceRequest_Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *ScannedInvoiceRequest) GetTargets() []string {
	if m != nil {
		return m.Targets
	}
	return nil
}

func (m *ScannedInvoiceRequest) GetOptions() *SuggestionOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type ScannedInvoiceRequest_Input struct {
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScannedInvoiceRequest_Input) Reset()         { *m = ScannedInvoiceRequest_Input{} }
func (m *ScannedInvoiceRequest_Input) String() string { return proto.CompactTextString(m) }
func (*ScannedInvoiceRequest_Input) ProtoMessage()    {}
func (*ScannedInvoiceRequest_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_2f9cab385cd11793, []int{4, 0}
}
func (m *ScannedInvoiceRequest_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScannedInvoiceRequest_Input.Unmarshal(m, b)
}
func (m *ScannedInvoiceRequest_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScannedInvoiceRequest_Input.Marshal(b, m, deterministic)
}
func (dst *ScannedInvoiceRequest_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScannedInvoiceRequest_Input.Merge(dst, src)
}
func (m *ScannedInvoiceRequest_Input) XXX_Size() int {
	return xxx_messageInfo_ScannedInvoiceRequest_Input.Size(m)
}
func (m *ScannedInvoiceRequest_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_ScannedInvoiceRequest_Input.DiscardUnknown(m)
}

var xxx_messageInfo_ScannedInvoiceRequest_Input proto.InternalMessageInfo

func (m *ScannedInvoiceRequest_Input) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// Electronic Invoice Line
type ElectronicInvoicLineRequest struct {
	Inputs               []*ElectronicInvoicLineRequest_Input `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Targets              []string                             `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	Options              *SuggestionOptions                   `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ElectronicInvoicLineRequest) Reset()         { *m = ElectronicInvoicLineRequest{} }
func (m *ElectronicInvoicLineRequest) String() string { return proto.CompactTextString(m) }
func (*ElectronicInvoicLineRequest) ProtoMessage()    {}
func (*ElectronicInvoicLineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_2f9cab385cd11793, []int{5}
}
func (m *ElectronicInvoicLineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectronicInvoicLineRequest.Unmarshal(m, b)
}
func (m *ElectronicInvoicLineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectronicInvoicLineRequest.Marshal(b, m, deterministic)
}
func (dst *ElectronicInvoicLineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectronicInvoicLineRequest.Merge(dst, src)
}
func (m *ElectronicInvoicLineRequest) XXX_Size() int {
	return xxx_messageInfo_ElectronicInvoicLineRequest.Size(m)
}
func (m *ElectronicInvoicLineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectronicInvoicLineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ElectronicInvoicLineRequest proto.InternalMessageInfo

func (m *ElectronicInvoicLineRequest) GetInputs() []*ElectronicInvoicLineRequest_Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *ElectronicInvoicLineRequest) GetTargets() []string {
	if m != nil {
		return m.Targets
	}
	return nil
}

func (m *ElectronicInvoicLineRequest) GetOptions() *SuggestionOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type ElectronicInvoicLineRequest_Input struct {
	IssueDate            string   `protobuf:"bytes,1,opt,name=issue_date,json=issueDate,proto3" json:"issue_date,omitempty"`
	Currency             string   `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	SupplierId           string   `protobuf:"bytes,3,opt,name=supplier_id,json=supplierId,proto3" json:"supplier_id,omitempty"`
	SupplierName         string   `protobuf:"bytes,4,opt,name=supplier_name,json=supplierName,proto3" json:"supplier_name,omitempty"`
	SupplierGlobalId     string   `protobuf:"bytes,5,opt,name=supplier_global_id,json=supplierGlobalId,proto3" json:"supplier_global_id,omitempty"`
	CustomerRef          string   `protobuf:"bytes,6,opt,name=customer_ref,json=customerRef,proto3" json:"customer_ref,omitempty"`
	Total                int32    `protobuf:"varint,7,opt,name=total,proto3" json:"total,omitempty"`
	LineText             string   `protobuf:"bytes,8,opt,name=line_text,json=lineText,proto3" json:"line_text,omitempty"`
	LineId               string   `protobuf:"bytes,9,opt,name=line_id,json=lineId,proto3" json:"line_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ElectronicInvoicLineRequest_Input) Reset()         { *m = ElectronicInvoicLineRequest_Input{} }
func (m *ElectronicInvoicLineRequest_Input) String() string { return proto.CompactTextString(m) }
func (*ElectronicInvoicLineRequest_Input) ProtoMessage()    {}
func (*ElectronicInvoicLineRequest_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_2f9cab385cd11793, []int{5, 0}
}
func (m *ElectronicInvoicLineRequest_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectronicInvoicLineRequest_Input.Unmarshal(m, b)
}
func (m *ElectronicInvoicLineRequest_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectronicInvoicLineRequest_Input.Marshal(b, m, deterministic)
}
func (dst *ElectronicInvoicLineRequest_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectronicInvoicLineRequest_Input.Merge(dst, src)
}
func (m *ElectronicInvoicLineRequest_Input) XXX_Size() int {
	return xxx_messageInfo_ElectronicInvoicLineRequest_Input.Size(m)
}
func (m *ElectronicInvoicLineRequest_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectronicInvoicLineRequest_Input.DiscardUnknown(m)
}

var xxx_messageInfo_ElectronicInvoicLineRequest_Input proto.InternalMessageInfo

func (m *ElectronicInvoicLineRequest_Input) GetIssueDate() string {
	if m != nil {
		return m.IssueDate
	}
	return ""
}

func (m *ElectronicInvoicLineRequest_Input) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *ElectronicInvoicLineRequest_Input) GetSupplierId() string {
	if m != nil {
		return m.SupplierId
	}
	return ""
}

func (m *ElectronicInvoicLineRequest_Input) GetSupplierName() string {
	if m != nil {
		return m.SupplierName
	}
	return ""
}

func (m *ElectronicInvoicLineRequest_Input) GetSupplierGlobalId() string {
	if m != nil {
		return m.SupplierGlobalId
	}
	return ""
}

func (m *ElectronicInvoicLineRequest_Input) GetCustomerRef() string {
	if m != nil {
		return m.CustomerRef
	}
	return ""
}

func (m *ElectronicInvoicLineRequest_Input) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ElectronicInvoicLineRequest_Input) GetLineText() string {
	if m != nil {
		return m.LineText
	}
	return ""
}

func (m *ElectronicInvoicLineRequest_Input) GetLineId() string {
	if m != nil {
		return m.LineId
	}
	return ""
}

// Bank
type BankRequest struct {
	Inputs               []*BankRequest_Input `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Targets              []string             `protobuf:"bytes,2,rep,name=targets,proto3" json:"targets,omitempty"`
	Options              *SuggestionOptions   `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BankRequest) Reset()         { *m = BankRequest{} }
func (m *BankRequest) String() string { return proto.CompactTextString(m) }
func (*BankRequest) ProtoMessage()    {}
func (*BankRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_2f9cab385cd11793, []int{6}
}
func (m *BankRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankRequest.Unmarshal(m, b)
}
func (m *BankRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankRequest.Marshal(b, m, deterministic)
}
func (dst *BankRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankRequest.Merge(dst, src)
}
func (m *BankRequest) XXX_Size() int {
	return xxx_messageInfo_BankRequest.Size(m)
}
func (m *BankRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BankRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BankRequest proto.InternalMessageInfo

func (m *BankRequest) GetInputs() []*BankRequest_Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *BankRequest) GetTargets() []string {
	if m != nil {
		return m.Targets
	}
	return nil
}

func (m *BankRequest) GetOptions() *SuggestionOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type BankRequest_Input struct {
	AccountNumber        int32                `protobuf:"varint,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	Amount               *wrappers.FloatValue `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	EntryType            int32                `protobuf:"varint,3,opt,name=entry_type,json=entryType,proto3" json:"entry_type,omitempty"`
	Text                 string               `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	TimeStamp            int32                `protobuf:"varint,5,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BankRequest_Input) Reset()         { *m = BankRequest_Input{} }
func (m *BankRequest_Input) String() string { return proto.CompactTextString(m) }
func (*BankRequest_Input) ProtoMessage()    {}
func (*BankRequest_Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_jester_2f9cab385cd11793, []int{6, 0}
}
func (m *BankRequest_Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankRequest_Input.Unmarshal(m, b)
}
func (m *BankRequest_Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankRequest_Input.Marshal(b, m, deterministic)
}
func (dst *BankRequest_Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankRequest_Input.Merge(dst, src)
}
func (m *BankRequest_Input) XXX_Size() int {
	return xxx_messageInfo_BankRequest_Input.Size(m)
}
func (m *BankRequest_Input) XXX_DiscardUnknown() {
	xxx_messageInfo_BankRequest_Input.DiscardUnknown(m)
}

var xxx_messageInfo_BankRequest_Input proto.InternalMessageInfo

func (m *BankRequest_Input) GetAccountNumber() int32 {
	if m != nil {
		return m.AccountNumber
	}
	return 0
}

func (m *BankRequest_Input) GetAmount() *wrappers.FloatValue {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *BankRequest_Input) GetEntryType() int32 {
	if m != nil {
		return m.EntryType
	}
	return 0
}

func (m *BankRequest_Input) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *BankRequest_Input) GetTimeStamp() int32 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func init() {
	proto.RegisterType((*Confidence)(nil), "asgt.jester.v1alpha1.Confidence")
	proto.RegisterType((*Candidate)(nil), "asgt.jester.v1alpha1.Candidate")
	proto.RegisterType((*SuggestionOptions)(nil), "asgt.jester.v1alpha1.SuggestionOptions")
	proto.RegisterType((*SuggestionsResponse)(nil), "asgt.jester.v1alpha1.SuggestionsResponse")
	proto.RegisterType((*SuggestionsResponse_Prediction)(nil), "asgt.jester.v1alpha1.SuggestionsResponse.Prediction")
	proto.RegisterType((*ScannedInvoiceRequest)(nil), "asgt.jester.v1alpha1.ScannedInvoiceRequest")
	proto.RegisterType((*ScannedInvoiceRequest_Input)(nil), "asgt.jester.v1alpha1.ScannedInvoiceRequest.Input")
	proto.RegisterType((*ElectronicInvoicLineRequest)(nil), "asgt.jester.v1alpha1.ElectronicInvoicLineRequest")
	proto.RegisterType((*ElectronicInvoicLineRequest_Input)(nil), "asgt.jester.v1alpha1.ElectronicInvoicLineRequest.Input")
	proto.RegisterType((*BankRequest)(nil), "asgt.jester.v1alpha1.BankRequest")
	proto.RegisterType((*BankRequest_Input)(nil), "asgt.jester.v1alpha1.BankRequest.Input")
	proto.RegisterEnum("asgt.jester.v1alpha1.Confidence_Level", Confidence_Level_name, Confidence_Level_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JesterClient is the client API for Jester service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JesterClient interface {
	ScannedInvoiceSuggestions(ctx context.Context, in *ScannedInvoiceRequest, opts ...grpc.CallOption) (*SuggestionsResponse, error)
	ElectronicInvoicLineSuggestions(ctx context.Context, in *ElectronicInvoicLineRequest, opts ...grpc.CallOption) (*SuggestionsResponse, error)
	BankSuggestions(ctx context.Context, in *BankRequest, opts ...grpc.CallOption) (*SuggestionsResponse, error)
}

type jesterClient struct {
	cc *grpc.ClientConn
}

func NewJesterClient(cc *grpc.ClientConn) JesterClient {
	return &jesterClient{cc}
}

func (c *jesterClient) ScannedInvoiceSuggestions(ctx context.Context, in *ScannedInvoiceRequest, opts ...grpc.CallOption) (*SuggestionsResponse, error) {
	out := new(SuggestionsResponse)
	err := c.cc.Invoke(ctx, "/asgt.jester.v1alpha1.Jester/ScannedInvoiceSuggestions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jesterClient) ElectronicInvoicLineSuggestions(ctx context.Context, in *ElectronicInvoicLineRequest, opts ...grpc.CallOption) (*SuggestionsResponse, error) {
	out := new(SuggestionsResponse)
	err := c.cc.Invoke(ctx, "/asgt.jester.v1alpha1.Jester/ElectronicInvoicLineSuggestions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jesterClient) BankSuggestions(ctx context.Context, in *BankRequest, opts ...grpc.CallOption) (*SuggestionsResponse, error) {
	out := new(SuggestionsResponse)
	err := c.cc.Invoke(ctx, "/asgt.jester.v1alpha1.Jester/BankSuggestions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JesterServer is the server API for Jester service.
type JesterServer interface {
	ScannedInvoiceSuggestions(context.Context, *ScannedInvoiceRequest) (*SuggestionsResponse, error)
	ElectronicInvoicLineSuggestions(context.Context, *ElectronicInvoicLineRequest) (*SuggestionsResponse, error)
	BankSuggestions(context.Context, *BankRequest) (*SuggestionsResponse, error)
}

func RegisterJesterServer(s *grpc.Server, srv JesterServer) {
	s.RegisterService(&_Jester_serviceDesc, srv)
}

func _Jester_ScannedInvoiceSuggestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScannedInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JesterServer).ScannedInvoiceSuggestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asgt.jester.v1alpha1.Jester/ScannedInvoiceSuggestions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JesterServer).ScannedInvoiceSuggestions(ctx, req.(*ScannedInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jester_ElectronicInvoicLineSuggestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ElectronicInvoicLineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JesterServer).ElectronicInvoicLineSuggestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asgt.jester.v1alpha1.Jester/ElectronicInvoicLineSuggestions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JesterServer).ElectronicInvoicLineSuggestions(ctx, req.(*ElectronicInvoicLineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Jester_BankSuggestions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JesterServer).BankSuggestions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/asgt.jester.v1alpha1.Jester/BankSuggestions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JesterServer).BankSuggestions(ctx, req.(*BankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Jester_serviceDesc = grpc.ServiceDesc{
	ServiceName: "asgt.jester.v1alpha1.Jester",
	HandlerType: (*JesterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ScannedInvoiceSuggestions",
			Handler:    _Jester_ScannedInvoiceSuggestions_Handler,
		},
		{
			MethodName: "ElectronicInvoicLineSuggestions",
			Handler:    _Jester_ElectronicInvoicLineSuggestions_Handler,
		},
		{
			MethodName: "BankSuggestions",
			Handler:    _Jester_BankSuggestions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "asgt/jester/v1alpha1/jester.proto",
}

func init() {
	proto.RegisterFile("asgt/jester/v1alpha1/jester.proto", fileDescriptor_jester_2f9cab385cd11793)
}

var fileDescriptor_jester_2f9cab385cd11793 = []byte{
	// 934 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0x4f, 0x73, 0xdb, 0x44,
	0x14, 0x47, 0x76, 0x64, 0x5b, 0xcf, 0x49, 0x6a, 0x96, 0x16, 0x84, 0x03, 0xc4, 0x11, 0xd3, 0x92,
	0x94, 0x8e, 0x3c, 0x4e, 0x99, 0x61, 0x26, 0xc3, 0x4c, 0xa1, 0x7f, 0x68, 0x0d, 0x89, 0xc3, 0x28,
	0x25, 0x1d, 0xb8, 0x68, 0xd6, 0xd2, 0x8b, 0x59, 0x2a, 0xad, 0x84, 0xb4, 0x32, 0xcd, 0x0c, 0x27,
	0xee, 0x9c, 0xb8, 0x71, 0xe7, 0xc8, 0x91, 0x6f, 0xc1, 0xad, 0x7c, 0x03, 0x38, 0x71, 0xe5, 0x0b,
	0x30, 0xbb, 0x92, 0x6c, 0x91, 0x71, 0x9a, 0xf8, 0xd2, 0x9b, 0xde, 0xef, 0xfd, 0xfb, 0xbd, 0x3f,
	0xfb, 0x04, 0x5b, 0x34, 0x9d, 0x88, 0xfe, 0xb7, 0x98, 0x0a, 0x4c, 0xfa, 0xd3, 0x01, 0x0d, 0xe2,
	0x6f, 0xe8, 0xa0, 0x90, 0xed, 0x38, 0x89, 0x44, 0x44, 0xae, 0x4a, 0x13, 0xbb, 0x80, 0x4a, 0x93,
	0xee, 0x5b, 0x93, 0x28, 0x9a, 0x04, 0xd8, 0xa7, 0x31, 0xeb, 0x53, 0xce, 0x23, 0x41, 0x05, 0x8b,
	0x78, 0x9a, 0xfb, 0x74, 0xdf, 0x29, 0xb4, 0x4a, 0x1a, 0x67, 0x27, 0xfd, 0xef, 0x13, 0x1a, 0xc7,
	0x98, 0x14, 0x7a, 0xeb, 0x0f, 0x0d, 0xe0, 0x5e, 0xc4, 0x4f, 0x98, 0x8f, 0xdc, 0x43, 0xf2, 0x11,
	0xe8, 0x01, 0x4e, 0x31, 0x30, 0xb5, 0x9e, 0xb6, 0xbd, 0xbe, 0x7b, 0xc3, 0x5e, 0x94, 0xd2, 0x9e,
	0x3b, 0xd8, 0xfb, 0xd2, 0xda, 0xc9, 0x9d, 0xc8, 0x00, 0xf4, 0x29, 0x0d, 0x32, 0x34, 0x6b, 0x3d,
	0x6d, 0xbb, 0xbd, 0xbb, 0x61, 0xe7, 0xc9, 0xed, 0x32, 0xb9, 0xfd, 0x69, 0x10, 0x51, 0x71, 0x2c,
	0x4d, 0x9c, 0xdc, 0xd2, 0x3a, 0x00, 0x5d, 0x85, 0x20, 0x6d, 0x68, 0x7e, 0x39, 0xfa, 0x7c, 0x74,
	0xf8, 0x64, 0xd4, 0x79, 0x85, 0xac, 0x42, 0xeb, 0xf8, 0x81, 0xf3, 0x95, 0xbb, 0x7f, 0xf8, 0xa4,
	0xa3, 0x91, 0x26, 0xd4, 0xe5, 0x47, 0x4d, 0x7e, 0x1c, 0x0c, 0xef, 0x77, 0xea, 0xa4, 0x05, 0x2b,
	0x8f, 0x86, 0x0f, 0x1f, 0x75, 0x56, 0xc8, 0x1a, 0x18, 0xca, 0x52, 0x89, 0xba, 0xe5, 0x81, 0x71,
	0x8f, 0x72, 0x9f, 0xf9, 0x54, 0x20, 0xb9, 0x0a, 0x7a, 0x40, 0xc7, 0x45, 0x31, 0x86, 0x93, 0x0b,
	0xe4, 0x63, 0x00, 0x6f, 0xc6, 0xbf, 0x60, 0xda, 0xbb, 0xa8, 0x4e, 0xa7, 0xe2, 0x63, 0xfd, 0xa4,
	0xc1, 0xab, 0x47, 0xd9, 0x64, 0x82, 0xa9, 0xec, 0xf4, 0x61, 0xac, 0xfa, 0x4d, 0x76, 0xa0, 0x93,
	0xce, 0x40, 0x37, 0x60, 0x21, 0x13, 0x2a, 0xb1, 0xee, 0x5c, 0x99, 0xe3, 0xfb, 0x12, 0x26, 0x07,
	0xb0, 0x1e, 0x32, 0xee, 0x9e, 0xa1, 0x71, 0xf9, 0x76, 0xaf, 0x85, 0x8c, 0xcf, 0x41, 0xeb, 0x4f,
	0x0d, 0x5e, 0x9b, 0xf3, 0x49, 0x1d, 0x4c, 0xe3, 0x88, 0xa7, 0x48, 0x8e, 0xa1, 0x1d, 0x27, 0xe8,
	0x33, 0x4f, 0xc1, 0xa6, 0xd6, 0xab, 0x6f, 0xb7, 0x77, 0x3f, 0x58, 0x9c, 0x63, 0x81, 0xbf, 0xfd,
	0xc5, 0xcc, 0xd9, 0xa9, 0x06, 0xea, 0x22, 0xc0, 0x5c, 0x45, 0x5e, 0x87, 0x86, 0xa0, 0xc9, 0x04,
	0x45, 0xd1, 0xe6, 0x42, 0x22, 0x77, 0x00, 0xbc, 0x72, 0x14, 0xa9, 0x59, 0x53, 0xc9, 0x37, 0xcf,
	0x29, 0xb0, 0xb4, 0x73, 0x2a, 0x2e, 0xd6, 0x3f, 0x1a, 0x5c, 0x3b, 0xf2, 0x28, 0xe7, 0xe8, 0x0f,
	0xf9, 0x34, 0x62, 0x1e, 0x3a, 0xf8, 0x5d, 0x86, 0xa9, 0x20, 0x43, 0x68, 0x30, 0x1e, 0x67, 0xa2,
	0xac, 0x69, 0x70, 0x4e, 0x4d, 0x8b, 0x9c, 0xed, 0xa1, 0xf4, 0x74, 0x8a, 0x00, 0xc4, 0x84, 0x66,
	0xce, 0x37, 0xa7, 0x68, 0x38, 0xa5, 0x48, 0x3e, 0x81, 0x66, 0x94, 0x8f, 0xd6, 0xac, 0xab, 0x25,
	0x79, 0xef, 0xa2, 0xce, 0x15, 0x9b, 0xe0, 0x94, 0x7e, 0xdd, 0x1d, 0xd0, 0x55, 0x36, 0xd2, 0x83,
	0xb6, 0x8f, 0xa9, 0x97, 0x30, 0xa5, 0x28, 0x1a, 0x55, 0x85, 0xac, 0x7f, 0xeb, 0xb0, 0xf1, 0x20,
	0x40, 0x4f, 0x24, 0x11, 0x67, 0x5e, 0x4e, 0x79, 0x9f, 0xf1, 0x59, 0xc9, 0x87, 0x67, 0x4a, 0xfe,
	0x70, 0x31, 0x99, 0x17, 0x84, 0x78, 0x99, 0x85, 0xff, 0x5a, 0x2b, 0x2b, 0x7f, 0x1b, 0x80, 0xa5,
	0x69, 0x86, 0xae, 0x9c, 0x69, 0x51, 0xb8, 0xa1, 0x90, 0xfb, 0xf2, 0x89, 0x76, 0xa1, 0xe5, 0x65,
	0x49, 0x82, 0xdc, 0x3b, 0x55, 0x6f, 0xc0, 0x70, 0x66, 0x32, 0xd9, 0x84, 0x76, 0x9a, 0xc5, 0x71,
	0xc0, 0x30, 0x71, 0x99, 0xaf, 0xb8, 0x18, 0x0e, 0x94, 0xd0, 0xd0, 0x27, 0xef, 0xc2, 0xda, 0xcc,
	0x80, 0xd3, 0x10, 0xcd, 0x15, 0x65, 0xb2, 0x5a, 0x82, 0x23, 0x1a, 0x22, 0xb9, 0x05, 0x64, 0x66,
	0x34, 0x09, 0xa2, 0x31, 0x0d, 0x64, 0x30, 0x5d, 0x59, 0x76, 0x4a, 0xcd, 0x43, 0xa5, 0x18, 0xfa,
	0x64, 0x0b, 0x56, 0xbd, 0x2c, 0x15, 0x51, 0x88, 0x89, 0x9b, 0xe0, 0x89, 0xd9, 0xc8, 0x27, 0x55,
	0x62, 0x0e, 0x9e, 0xc8, 0xab, 0x22, 0x22, 0x41, 0x03, 0xb3, 0xa9, 0x1e, 0x77, 0x2e, 0x90, 0x0d,
	0x30, 0x02, 0xc6, 0xd1, 0x15, 0xf8, 0x4c, 0x98, 0xad, 0xbc, 0x12, 0x09, 0x3c, 0xc6, 0x67, 0x82,
	0xbc, 0x01, 0x4d, 0xa5, 0x64, 0xbe, 0x69, 0xe4, 0x6f, 0x44, 0x8a, 0x43, 0xdf, 0xfa, 0xab, 0x06,
	0xed, 0xbb, 0x94, 0x3f, 0x2d, 0xa7, 0x7c, 0xe7, 0xcc, 0x94, 0xcf, 0xe9, 0x7c, 0xc5, 0xe5, 0x65,
	0x4e, 0xf5, 0x77, 0xad, 0x9c, 0xea, 0x75, 0x58, 0xa7, 0x9e, 0x17, 0x65, 0x5c, 0xb8, 0x3c, 0x0b,
	0xc7, 0x98, 0x14, 0x97, 0x6e, 0xad, 0x40, 0x47, 0x0a, 0x24, 0xb7, 0xa1, 0x41, 0x43, 0x29, 0x5f,
	0xe6, 0x87, 0x50, 0x98, 0xca, 0x8d, 0x41, 0x2e, 0x92, 0x53, 0x57, 0x9c, 0xc6, 0xa8, 0xb8, 0xea,
	0x8e, 0xa1, 0x90, 0xc7, 0xa7, 0x31, 0x12, 0x02, 0x2b, 0xaa, 0xc7, 0xf9, 0xac, 0xd5, 0xb7, 0x74,
	0x11, 0x2c, 0x44, 0x37, 0x15, 0x34, 0x8c, 0xd5, 0x6c, 0x75, 0xc7, 0x90, 0xc8, 0x91, 0x04, 0x76,
	0x9f, 0xd7, 0xa1, 0xf1, 0x99, 0x2a, 0x93, 0xfc, 0xa2, 0xc1, 0x9b, 0xff, 0x3f, 0x0b, 0x95, 0xc3,
	0x47, 0xde, 0x5f, 0xe2, 0x8e, 0x74, 0x77, 0x2e, 0x7d, 0x48, 0xad, 0xeb, 0x3f, 0x3e, 0xff, 0xfb,
	0xe7, 0xda, 0xa6, 0xd5, 0xed, 0x4f, 0x07, 0xfd, 0xe2, 0x67, 0xb0, 0x97, 0xe6, 0x51, 0x59, 0x1e,
	0x75, 0x4f, 0xbb, 0x49, 0x7e, 0xd3, 0x60, 0x73, 0xd1, 0x03, 0xae, 0x52, 0x1c, 0x2c, 0xfd, 0xee,
	0x97, 0x21, 0x7a, 0x4b, 0x11, 0xbd, 0x61, 0x6d, 0x55, 0x89, 0xe2, 0x2c, 0x76, 0xc1, 0x55, 0x2e,
	0xaf, 0xe4, 0xfb, 0x03, 0x5c, 0x91, 0x9b, 0x58, 0xa5, 0xb7, 0x75, 0xe1, 0xc2, 0x2e, 0x43, 0x67,
	0x43, 0xd1, 0xb9, 0x66, 0x75, 0xaa, 0x74, 0xc6, 0x94, 0x3f, 0xdd, 0xd3, 0x6e, 0xde, 0x6d, 0x7d,
	0xdd, 0xc8, 0x63, 0x8c, 0x1b, 0x6a, 0x9d, 0x6e, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0xb0, 0x89,
	0x74, 0xd9, 0x43, 0x09, 0x00, 0x00,
}
