// Code generated by protoc-gen-go. DO NOT EDIT.
// source: asgt/dataservice/v1alpha1/dataset.proto

package dataservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/e-conomic/vmlapis/gen/go/gen_bq_schema"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Dataset_Type int32

const (
	Dataset_BANK            Dataset_Type = 0
	Dataset_SCANNED_INVOICE Dataset_Type = 1
	Dataset_EIL             Dataset_Type = 2
)

var Dataset_Type_name = map[int32]string{
	0: "BANK",
	1: "SCANNED_INVOICE",
	2: "EIL",
}
var Dataset_Type_value = map[string]int32{
	"BANK":            0,
	"SCANNED_INVOICE": 1,
	"EIL":             2,
}

func (x Dataset_Type) String() string {
	return proto.EnumName(Dataset_Type_name, int32(x))
}
func (Dataset_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dataset_278e4fea492515e0, []int{0, 0}
}

// Scanned Invoice
type Dataset struct {
	Consumer             string           `protobuf:"bytes,1,opt,name=consumer,proto3" json:"consumer,omitempty"`
	Name                 string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 Dataset_Type     `protobuf:"varint,3,opt,name=type,proto3,enum=asgt.dataservice.v1alpha1.Dataset_Type" json:"type,omitempty"`
	Targets              []string         `protobuf:"bytes,4,rep,name=targets,proto3" json:"targets,omitempty"`
	RetentionPolicy      *RetentionPolicy `protobuf:"bytes,5,opt,name=retention_policy,json=retentionPolicy,proto3" json:"retention_policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Dataset) Reset()         { *m = Dataset{} }
func (m *Dataset) String() string { return proto.CompactTextString(m) }
func (*Dataset) ProtoMessage()    {}
func (*Dataset) Descriptor() ([]byte, []int) {
	return fileDescriptor_dataset_278e4fea492515e0, []int{0}
}
func (m *Dataset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataset.Unmarshal(m, b)
}
func (m *Dataset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataset.Marshal(b, m, deterministic)
}
func (dst *Dataset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataset.Merge(dst, src)
}
func (m *Dataset) XXX_Size() int {
	return xxx_messageInfo_Dataset.Size(m)
}
func (m *Dataset) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataset.DiscardUnknown(m)
}

var xxx_messageInfo_Dataset proto.InternalMessageInfo

func (m *Dataset) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *Dataset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Dataset) GetType() Dataset_Type {
	if m != nil {
		return m.Type
	}
	return Dataset_BANK
}

func (m *Dataset) GetTargets() []string {
	if m != nil {
		return m.Targets
	}
	return nil
}

func (m *Dataset) GetRetentionPolicy() *RetentionPolicy {
	if m != nil {
		return m.RetentionPolicy
	}
	return nil
}

func init() {
	proto.RegisterType((*Dataset)(nil), "asgt.dataservice.v1alpha1.Dataset")
	proto.RegisterEnum("asgt.dataservice.v1alpha1.Dataset_Type", Dataset_Type_name, Dataset_Type_value)
}

func init() {
	proto.RegisterFile("asgt/dataservice/v1alpha1/dataset.proto", fileDescriptor_dataset_278e4fea492515e0)
}

var fileDescriptor_dataset_278e4fea492515e0 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xbd, 0x4e, 0xc2, 0x40,
	0x1c, 0xb7, 0xa5, 0x48, 0xf9, 0x13, 0xa4, 0x39, 0x97, 0x42, 0x1c, 0x2a, 0x31, 0xa1, 0x71, 0x38,
	0x02, 0x6e, 0x2e, 0x84, 0x02, 0x03, 0xd1, 0x54, 0x53, 0x3f, 0x06, 0x97, 0xe6, 0x5a, 0xfe, 0x42,
	0x93, 0xd2, 0x96, 0xbb, 0x93, 0x84, 0x67, 0xf3, 0x8d, 0x78, 0x0a, 0xc3, 0x67, 0xea, 0x00, 0xe3,
	0xfd, 0xbe, 0xef, 0x0e, 0x5a, 0x4c, 0x4c, 0x65, 0x7b, 0xc2, 0x24, 0x13, 0xc8, 0x97, 0x51, 0x88,
	0xed, 0x65, 0x87, 0xc5, 0xd9, 0x8c, 0x75, 0xf6, 0xa0, 0xa4, 0x19, 0x4f, 0x65, 0x4a, 0xea, 0x1b,
	0x21, 0xcd, 0x09, 0xe9, 0x41, 0xd8, 0xb8, 0x3b, 0x9f, 0xb1, 0x0b, 0x68, 0xdc, 0x4c, 0x31, 0xf1,
	0x83, 0x85, 0x2f, 0xc2, 0x19, 0xce, 0x59, 0x3b, 0x58, 0xf8, 0xdf, 0x11, 0xc6, 0x93, 0x93, 0xac,
	0x64, 0x41, 0x8c, 0x3b, 0xb6, 0xf9, 0xab, 0x42, 0x69, 0xb8, 0x9b, 0x43, 0x6e, 0x41, 0x0f, 0xd3,
	0x44, 0xfc, 0xcc, 0x91, 0x9b, 0x8a, 0xa5, 0xd8, 0x65, 0xa7, 0xb8, 0xee, 0xa9, 0xba, 0xe2, 0x1d,
	0x61, 0x52, 0x07, 0x2d, 0x61, 0x73, 0x34, 0xd5, 0x3c, 0xbd, 0x85, 0x88, 0x03, 0x9a, 0x5c, 0x65,
	0x68, 0x16, 0x2c, 0xc5, 0xbe, 0xea, 0xb6, 0xe8, 0xc9, 0x5b, 0xd1, 0x7d, 0x1f, 0x7d, 0x5f, 0x65,
	0x78, 0xcc, 0xd8, 0x78, 0x89, 0x09, 0x25, 0xc9, 0xf8, 0x14, 0xa5, 0x30, 0x35, 0xab, 0x60, 0x97,
	0xbd, 0xc3, 0x91, 0x7c, 0x80, 0xc1, 0x51, 0x62, 0x22, 0xa3, 0x34, 0xf1, 0xb3, 0x34, 0x8e, 0xc2,
	0x95, 0x59, 0xb4, 0x14, 0xbb, 0xd2, 0xbd, 0x3f, 0xd3, 0xe4, 0x1d, 0x2c, 0xaf, 0x5b, 0x87, 0x57,
	0xe3, 0xff, 0x81, 0x26, 0x05, 0x6d, 0xb3, 0x82, 0xe8, 0xa0, 0x39, 0x7d, 0xf7, 0xc9, 0xb8, 0x20,
	0xd7, 0x50, 0x7b, 0x1b, 0xf4, 0x5d, 0x77, 0x34, 0xf4, 0xc7, 0xee, 0xe7, 0xcb, 0x78, 0x30, 0x32,
	0x14, 0x52, 0x82, 0xc2, 0x68, 0xfc, 0x6c, 0xa8, 0x8f, 0xd5, 0x75, 0x0f, 0x40, 0xdf, 0xff, 0x9f,
	0x70, 0xaa, 0x5f, 0x95, 0x5c, 0x6f, 0x70, 0xb9, 0x7d, 0xd3, 0x87, 0xbf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xe7, 0xc8, 0x54, 0x89, 0xfb, 0x01, 0x00, 0x00,
}
