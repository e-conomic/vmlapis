// Code generated by protoc-gen-go. DO NOT EDIT.
// source: asgt/dataservice/v1alpha1/bq_entries.proto

package dataservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _type "github.com/e-conomic/vmlapis/gen/go/asgt/type"
import _ "github.com/e-conomic/vmlapis/gen/go/gen_bq_schema"
import _ "google.golang.org/genproto/googleapis/api/annotations"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Bank BQ schema gen - could be used for adding direct developer data endpoints
type BankEntry struct {
	Id                   string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Consumer             string                     `protobuf:"bytes,2,opt,name=consumer,proto3" json:"consumer,omitempty"`
	DatasetName          string                     `protobuf:"bytes,3,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`
	DatasetId            string                     `protobuf:"bytes,11,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	Tags                 []string                   `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Data                 *_type.BankTransaction     `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	TargetValues         []*_type.TargetValue       `protobuf:"bytes,6,rep,name=target_values,json=targetValues,proto3" json:"target_values,omitempty"`
	Model                *_type.ModelInfo           `protobuf:"bytes,9,opt,name=model,proto3" json:"model,omitempty"`
	Prediction           []*_type.Prediction_Target `protobuf:"bytes,10,rep,name=prediction,proto3" json:"prediction,omitempty"`
	TimeAdded            uint64                     `protobuf:"varint,8,opt,name=time_added,json=timeAdded,proto3" json:"time_added,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *BankEntry) Reset()         { *m = BankEntry{} }
func (m *BankEntry) String() string { return proto.CompactTextString(m) }
func (*BankEntry) ProtoMessage()    {}
func (*BankEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bq_entries_8164494f8148412c, []int{0}
}
func (m *BankEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankEntry.Unmarshal(m, b)
}
func (m *BankEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankEntry.Marshal(b, m, deterministic)
}
func (dst *BankEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankEntry.Merge(dst, src)
}
func (m *BankEntry) XXX_Size() int {
	return xxx_messageInfo_BankEntry.Size(m)
}
func (m *BankEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_BankEntry.DiscardUnknown(m)
}

var xxx_messageInfo_BankEntry proto.InternalMessageInfo

func (m *BankEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BankEntry) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *BankEntry) GetDatasetName() string {
	if m != nil {
		return m.DatasetName
	}
	return ""
}

func (m *BankEntry) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *BankEntry) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *BankEntry) GetData() *_type.BankTransaction {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *BankEntry) GetTargetValues() []*_type.TargetValue {
	if m != nil {
		return m.TargetValues
	}
	return nil
}

func (m *BankEntry) GetModel() *_type.ModelInfo {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *BankEntry) GetPrediction() []*_type.Prediction_Target {
	if m != nil {
		return m.Prediction
	}
	return nil
}

func (m *BankEntry) GetTimeAdded() uint64 {
	if m != nil {
		return m.TimeAdded
	}
	return 0
}

// Electronic Invoice Line BQ schema gen - could be used for adding direct developer data endpoints
type ElectronicInvoiceLineEntry struct {
	Id                   string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Consumer             string                     `protobuf:"bytes,2,opt,name=consumer,proto3" json:"consumer,omitempty"`
	DatasetName          string                     `protobuf:"bytes,3,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`
	DatasetId            string                     `protobuf:"bytes,11,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	Tags                 []string                   `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Data                 *_type.InvoiceLine         `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	TargetValues         []*_type.TargetValue       `protobuf:"bytes,6,rep,name=target_values,json=targetValues,proto3" json:"target_values,omitempty"`
	Model                *_type.ModelInfo           `protobuf:"bytes,9,opt,name=model,proto3" json:"model,omitempty"`
	Prediction           []*_type.Prediction_Target `protobuf:"bytes,10,rep,name=prediction,proto3" json:"prediction,omitempty"`
	TimeAdded            uint64                     `protobuf:"varint,8,opt,name=time_added,json=timeAdded,proto3" json:"time_added,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ElectronicInvoiceLineEntry) Reset()         { *m = ElectronicInvoiceLineEntry{} }
func (m *ElectronicInvoiceLineEntry) String() string { return proto.CompactTextString(m) }
func (*ElectronicInvoiceLineEntry) ProtoMessage()    {}
func (*ElectronicInvoiceLineEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bq_entries_8164494f8148412c, []int{1}
}
func (m *ElectronicInvoiceLineEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ElectronicInvoiceLineEntry.Unmarshal(m, b)
}
func (m *ElectronicInvoiceLineEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ElectronicInvoiceLineEntry.Marshal(b, m, deterministic)
}
func (dst *ElectronicInvoiceLineEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElectronicInvoiceLineEntry.Merge(dst, src)
}
func (m *ElectronicInvoiceLineEntry) XXX_Size() int {
	return xxx_messageInfo_ElectronicInvoiceLineEntry.Size(m)
}
func (m *ElectronicInvoiceLineEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ElectronicInvoiceLineEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ElectronicInvoiceLineEntry proto.InternalMessageInfo

func (m *ElectronicInvoiceLineEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ElectronicInvoiceLineEntry) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *ElectronicInvoiceLineEntry) GetDatasetName() string {
	if m != nil {
		return m.DatasetName
	}
	return ""
}

func (m *ElectronicInvoiceLineEntry) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *ElectronicInvoiceLineEntry) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ElectronicInvoiceLineEntry) GetData() *_type.InvoiceLine {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ElectronicInvoiceLineEntry) GetTargetValues() []*_type.TargetValue {
	if m != nil {
		return m.TargetValues
	}
	return nil
}

func (m *ElectronicInvoiceLineEntry) GetModel() *_type.ModelInfo {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *ElectronicInvoiceLineEntry) GetPrediction() []*_type.Prediction_Target {
	if m != nil {
		return m.Prediction
	}
	return nil
}

func (m *ElectronicInvoiceLineEntry) GetTimeAdded() uint64 {
	if m != nil {
		return m.TimeAdded
	}
	return 0
}

// Scanned Invoice BQ schema gen - could be used for adding direct developer data endpoints
type ScannedInvoiceEntry struct {
	Id                   string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Consumer             string                     `protobuf:"bytes,2,opt,name=consumer,proto3" json:"consumer,omitempty"`
	DatasetName          string                     `protobuf:"bytes,3,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`
	DatasetId            string                     `protobuf:"bytes,11,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`
	Tags                 []string                   `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Data                 *_type.ScannedInvoice      `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	TargetValues         []*_type.TargetValue       `protobuf:"bytes,6,rep,name=target_values,json=targetValues,proto3" json:"target_values,omitempty"`
	Model                *_type.ModelInfo           `protobuf:"bytes,9,opt,name=model,proto3" json:"model,omitempty"`
	Prediction           []*_type.Prediction_Target `protobuf:"bytes,10,rep,name=prediction,proto3" json:"prediction,omitempty"`
	TimeAdded            uint64                     `protobuf:"varint,8,opt,name=time_added,json=timeAdded,proto3" json:"time_added,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ScannedInvoiceEntry) Reset()         { *m = ScannedInvoiceEntry{} }
func (m *ScannedInvoiceEntry) String() string { return proto.CompactTextString(m) }
func (*ScannedInvoiceEntry) ProtoMessage()    {}
func (*ScannedInvoiceEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_bq_entries_8164494f8148412c, []int{2}
}
func (m *ScannedInvoiceEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScannedInvoiceEntry.Unmarshal(m, b)
}
func (m *ScannedInvoiceEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScannedInvoiceEntry.Marshal(b, m, deterministic)
}
func (dst *ScannedInvoiceEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScannedInvoiceEntry.Merge(dst, src)
}
func (m *ScannedInvoiceEntry) XXX_Size() int {
	return xxx_messageInfo_ScannedInvoiceEntry.Size(m)
}
func (m *ScannedInvoiceEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_ScannedInvoiceEntry.DiscardUnknown(m)
}

var xxx_messageInfo_ScannedInvoiceEntry proto.InternalMessageInfo

func (m *ScannedInvoiceEntry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ScannedInvoiceEntry) GetConsumer() string {
	if m != nil {
		return m.Consumer
	}
	return ""
}

func (m *ScannedInvoiceEntry) GetDatasetName() string {
	if m != nil {
		return m.DatasetName
	}
	return ""
}

func (m *ScannedInvoiceEntry) GetDatasetId() string {
	if m != nil {
		return m.DatasetId
	}
	return ""
}

func (m *ScannedInvoiceEntry) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ScannedInvoiceEntry) GetData() *_type.ScannedInvoice {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ScannedInvoiceEntry) GetTargetValues() []*_type.TargetValue {
	if m != nil {
		return m.TargetValues
	}
	return nil
}

func (m *ScannedInvoiceEntry) GetModel() *_type.ModelInfo {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *ScannedInvoiceEntry) GetPrediction() []*_type.Prediction_Target {
	if m != nil {
		return m.Prediction
	}
	return nil
}

func (m *ScannedInvoiceEntry) GetTimeAdded() uint64 {
	if m != nil {
		return m.TimeAdded
	}
	return 0
}

func init() {
	proto.RegisterType((*BankEntry)(nil), "asgt.dataservice.v1alpha1.BankEntry")
	proto.RegisterType((*ElectronicInvoiceLineEntry)(nil), "asgt.dataservice.v1alpha1.ElectronicInvoiceLineEntry")
	proto.RegisterType((*ScannedInvoiceEntry)(nil), "asgt.dataservice.v1alpha1.ScannedInvoiceEntry")
}

func init() {
	proto.RegisterFile("asgt/dataservice/v1alpha1/bq_entries.proto", fileDescriptor_bq_entries_8164494f8148412c)
}

var fileDescriptor_bq_entries_8164494f8148412c = []byte{
	// 659 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x96, 0x5f, 0x4f, 0xdb, 0x3c,
	0x14, 0xc6, 0x95, 0x12, 0x50, 0xe3, 0xc2, 0xab, 0x57, 0x79, 0x11, 0x0a, 0x7d, 0xd1, 0x66, 0x7a,
	0x55, 0x21, 0x68, 0x04, 0xbb, 0x63, 0x93, 0x22, 0x3a, 0x3a, 0xa9, 0xd2, 0x98, 0x50, 0xa8, 0x76,
	0xc1, 0x4d, 0xe4, 0xc4, 0x27, 0xad, 0xd5, 0xc4, 0x6e, 0x63, 0xb7, 0x52, 0xbf, 0xe3, 0x3e, 0xc4,
	0xae, 0xa3, 0x7d, 0x88, 0x29, 0x7f, 0x20, 0x66, 0x68, 0x17, 0xdc, 0x22, 0xee, 0x5a, 0x3f, 0xcf,
	0x39, 0xc7, 0x3e, 0xe7, 0x57, 0xbb, 0xe8, 0x84, 0xc8, 0xa9, 0x72, 0x29, 0x51, 0x44, 0x42, 0xb6,
	0x66, 0x11, 0xb8, 0xeb, 0x73, 0x92, 0x2c, 0x66, 0xe4, 0xdc, 0x0d, 0x97, 0x01, 0x70, 0x95, 0x31,
	0x90, 0x83, 0x45, 0x26, 0x94, 0xb0, 0x0f, 0x0b, 0xef, 0x40, 0xf3, 0x0e, 0x1e, 0xbc, 0x5d, 0x5c,
	0xa6, 0x51, 0x9b, 0x05, 0xb8, 0x21, 0xe1, 0xf3, 0x40, 0x65, 0x84, 0x4b, 0x12, 0x29, 0x26, 0x78,
	0x15, 0xdc, 0x3d, 0x6a, 0x1c, 0x8c, 0xaf, 0x05, 0x8b, 0x20, 0x48, 0x18, 0x87, 0x5a, 0xed, 0x36,
	0x6a, 0x2a, 0x28, 0x24, 0x01, 0xe3, 0xb1, 0x78, 0xae, 0x2d, 0x32, 0xa0, 0x4c, 0xcf, 0xfa, 0xbe,
	0xd1, 0x64, 0x44, 0x38, 0x07, 0x1a, 0xd4, 0xd9, 0x9f, 0x97, 0x55, 0x24, 0x9b, 0x82, 0x0a, 0xd6,
	0x24, 0x59, 0x3d, 0xaa, 0x53, 0xe0, 0x41, 0xb8, 0x0c, 0x64, 0x34, 0x83, 0x94, 0x14, 0x27, 0x8e,
	0x19, 0x24, 0xf4, 0xaf, 0xaa, 0x22, 0x61, 0xd2, 0xc4, 0x0a, 0x31, 0x4d, 0xc0, 0x25, 0x0b, 0xe6,
	0x12, 0xce, 0x85, 0x22, 0xc5, 0xbe, 0xea, 0x5e, 0xf5, 0x7e, 0x98, 0xc8, 0x1a, 0x12, 0x3e, 0x1f,
	0x71, 0x95, 0x6d, 0xec, 0x21, 0x6a, 0x31, 0xea, 0x18, 0xd8, 0xe8, 0x5b, 0xc3, 0x8b, 0xdc, 0x73,
	0x7b, 0x67, 0xe3, 0xeb, 0x53, 0x9c, 0x12, 0x15, 0xcd, 0x40, 0xe2, 0x11, 0x5f, 0x8b, 0x0d, 0xce,
	0x60, 0xb9, 0x02, 0xa9, 0x30, 0xa3, 0x98, 0xc5, 0x38, 0x06, 0xa0, 0x21, 0x89, 0xe6, 0xb8, 0x68,
	0xb7, 0xdf, 0x62, 0xd4, 0x3e, 0x46, 0xed, 0x48, 0x70, 0xb9, 0x4a, 0x21, 0x73, 0x5a, 0x65, 0xa6,
	0xed, 0xdc, 0x6b, 0xb5, 0x0d, 0xff, 0x71, 0xd9, 0xee, 0xa3, 0xdd, 0x6a, 0x3a, 0x2a, 0xe0, 0x24,
	0x05, 0x67, 0x4b, 0xb7, 0x75, 0x6a, 0xe9, 0x1b, 0x49, 0xc1, 0xbe, 0x44, 0xe8, 0xc1, 0xc9, 0xa8,
	0xd3, 0x29, 0x7d, 0xff, 0xe7, 0x9e, 0xd3, 0x36, 0x7a, 0xfb, 0x2b, 0xce, 0x96, 0x2b, 0xc0, 0xe3,
	0x6b, 0x2c, 0x62, 0x5c, 0xbb, 0x7c, 0xab, 0xfe, 0x30, 0xa6, 0xf6, 0x3d, 0x32, 0x15, 0x99, 0x4a,
	0xc7, 0xc4, 0x5b, 0x7d, 0x6b, 0xf8, 0x25, 0xf7, 0x3e, 0xf7, 0xae, 0x26, 0x64, 0x2a, 0x31, 0x85,
	0x98, 0x71, 0xa0, 0x38, 0xdc, 0xe0, 0x87, 0x2d, 0x9d, 0x62, 0xe0, 0x19, 0x8b, 0x66, 0xd5, 0x6a,
	0x8d, 0x4d, 0x71, 0xbe, 0x35, 0x49, 0x40, 0xcd, 0x61, 0x83, 0x99, 0xc4, 0x2b, 0x09, 0xd4, 0x2f,
	0x73, 0xda, 0x03, 0x64, 0x16, 0x85, 0x9c, 0x6d, 0x6c, 0xf4, 0x3b, 0x17, 0xdd, 0x41, 0x49, 0x5c,
	0x31, 0xbd, 0x41, 0xd1, 0xcc, 0x49, 0x43, 0x95, 0x5f, 0xfa, 0xec, 0x8f, 0x68, 0x4f, 0x1f, 0xab,
	0x74, 0x76, 0xf0, 0x56, 0xbf, 0x73, 0x71, 0xa0, 0x05, 0x4e, 0x4a, 0xfd, 0x7b, 0x21, 0xfb, 0xbb,
	0xaa, 0xf9, 0x22, 0xed, 0x13, 0xb4, 0x5d, 0xc2, 0xe6, 0x58, 0x65, 0xb5, 0x7d, 0x2d, 0xe8, 0xa6,
	0x58, 0x1f, 0xf3, 0x58, 0xf8, 0x95, 0xc5, 0xfe, 0x84, 0x50, 0x03, 0x9f, 0x83, 0xca, 0x2a, 0x47,
	0x5a, 0xc0, 0x6d, 0x43, 0x66, 0x55, 0xd0, 0xd7, 0xfc, 0xb6, 0x8b, 0x90, 0x62, 0x29, 0x04, 0x84,
	0x52, 0xa0, 0x4e, 0x1b, 0x1b, 0x7d, 0x73, 0xf8, 0x6f, 0xee, 0xed, 0xb5, 0x0d, 0xdb, 0x9a, 0x8c,
	0x6f, 0x46, 0x77, 0x93, 0xab, 0x9b, 0x5b, 0xdf, 0x2a, 0x3c, 0x57, 0x85, 0xe5, 0xf2, 0x9f, 0xdc,
	0xeb, 0x20, 0xab, 0xfc, 0x29, 0x15, 0xe7, 0xec, 0xfd, 0x32, 0x51, 0x77, 0x94, 0x40, 0xa4, 0x32,
	0xc1, 0x59, 0x34, 0xae, 0x10, 0xff, 0xca, 0x38, 0xbc, 0xf1, 0xf5, 0x22, 0xbe, 0x4e, 0x9e, 0xf0,
	0xa5, 0x63, 0xa2, 0xf5, 0xf4, 0x95, 0xb3, 0x75, 0x9c, 0x7b, 0xef, 0xd0, 0x11, 0x3c, 0xd2, 0x14,
	0xe8, 0xf7, 0x71, 0x85, 0xdb, 0x4f, 0x13, 0xfd, 0x77, 0x57, 0xdd, 0xa7, 0x75, 0x5f, 0xde, 0x38,
	0x7b, 0x11, 0x67, 0x67, 0x4f, 0x38, 0x3b, 0xd4, 0x86, 0xf9, 0xb4, 0xad, 0xaf, 0x1c, 0xb5, 0xc3,
	0xdc, 0x3b, 0x40, 0xfb, 0x7f, 0xbc, 0xcc, 0x25, 0x62, 0xc3, 0xbd, 0xfb, 0x8e, 0xf6, 0x4f, 0x22,
	0xdc, 0x29, 0x9f, 0xcd, 0x0f, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x80, 0xf9, 0x33, 0x90, 0x90,
	0x08, 0x00, 0x00,
}
