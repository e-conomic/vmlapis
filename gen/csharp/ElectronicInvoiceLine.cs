// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: asgt/dataservice/v1alpha1/electronic_invoice_line.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Asgt.Dataservice.V1Alpha1 {

  /// <summary>Holder for reflection information generated from asgt/dataservice/v1alpha1/electronic_invoice_line.proto</summary>
  public static partial class ElectronicInvoiceLineReflection {

    #region Descriptor
    /// <summary>File descriptor for asgt/dataservice/v1alpha1/electronic_invoice_line.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ElectronicInvoiceLineReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjdhc2d0L2RhdGFzZXJ2aWNlL3YxYWxwaGExL2VsZWN0cm9uaWNfaW52b2lj",
            "ZV9saW5lLnByb3RvEhlhc2d0LmRhdGFzZXJ2aWNlLnYxYWxwaGExGiRhc2d0",
            "L2RhdGFzZXJ2aWNlL3YxYWxwaGExL2RhdGEucHJvdG8aIWFzZ3QvamVzdGVy",
            "L3YxYWxwaGExL2plc3Rlci5wcm90bxoaYXNndC90eXBlL3ByZWRpY3Rpb24u",
            "cHJvdG8aHGdlbl9icV9zY2hlbWEvYnFfZmllbGQucHJvdG8aHGdlbl9icV9z",
            "Y2hlbWEvYnFfdGFibGUucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMu",
            "cHJvdG8aG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90byL0AwoaRWxlY3Ry",
            "b25pY0ludm9pY2VMaW5lRW50cnkSQwoCaWQYASABKAlCN+o/LyItSUQsIG1h",
            "dGNoZXMgRW52b3kgcmVxdWVzdCBpZCBpZiBmZWVkYmFjayBkYXRh6j8CCAES",
            "FwoIY29uc3VtZXIYAiABKAlCBeo/AggBEhYKB2RhdGFzZXQYAyABKAlCBeo/",
            "AggBElQKBHRhZ3MYBCADKAlCRuo/QyJBVGFncyBkZWZpbmVkIGJ5IGNvbnN1",
            "bWVyLCBlbnJpY2hlZCBieSBzZXJ2aWNlIGlmIHZhbGV0a2V5IGlzIHVzZWQS",
            "RgoFaW5wdXQYBSABKAsyNy5hc2d0Lmplc3Rlci52MWFscGhhMS5FbGVjdHJv",
            "bmljSW52b2ljZUxpbmVSZXF1ZXN0LkRhdGESOQoLdHJ1ZV92YWx1ZXMYBiAD",
            "KAsyJC5hc2d0LmRhdGFzZXJ2aWNlLnYxYWxwaGExLkRhdGFUdXBsZRI+Cgtw",
            "cmVkX3ZhbHVlcxgHIAMoCzIpLmFzZ3QuZGF0YXNlcnZpY2UudjFhbHBoYTEu",
            "UHJlZGljdGVkVHVwbGUSJAoKdGltZV9hZGRlZBgIIAEoBEIQ6j8NCAESCVRJ",
            "TUVTVEFNUDoh6j8eChxlbGVjdHJvbmljX2ludm9pY2VfbGluZV9kYXRhIqUC",
            "CiNQcmVwYXJlRWxlY3Ryb25pY0ludm9pY2VMaW5lUmVxdWVzdBIPCgdkYXRh",
            "c2V0GAEgASgJEgwKBHRhZ3MYAiADKAkSVQoHZW50cmllcxgDIAMoCzJELmFz",
            "Z3QuZGF0YXNlcnZpY2UudjFhbHBoYTEuUHJlcGFyZUVsZWN0cm9uaWNJbnZv",
            "aWNlTGluZVJlcXVlc3QuRW50cnkahwEKBUVudHJ5EgoKAmlkGAEgASgJEkYK",
            "BWlucHV0GAIgASgLMjcuYXNndC5qZXN0ZXIudjFhbHBoYTEuRWxlY3Ryb25p",
            "Y0ludm9pY2VMaW5lUmVxdWVzdC5EYXRhEioKC3ByZWRpY3Rpb25zGAMgAygL",
            "MhUuYXNndC50eXBlLlByZWRpY3Rpb24i7gIKI0FkZEVsZWN0cm9uaWNJbnZv",
            "aWNlTGluZURhdGFSZXF1ZXN0Eg8KB2RhdGFzZXQYASABKAkSDAoEdGFncxgC",
            "IAMoCRJVCgdlbnRyaWVzGAMgAygLMkQuYXNndC5kYXRhc2VydmljZS52MWFs",
            "cGhhMS5BZGRFbGVjdHJvbmljSW52b2ljZUxpbmVEYXRhUmVxdWVzdC5FbnRy",
            "eRJEChByZXRlbnRpb25fcG9saWN5GAQgASgLMiouYXNndC5kYXRhc2Vydmlj",
            "ZS52MWFscGhhMS5SZXRlbnRpb25Qb2xpY3kaigEKBUVudHJ5EkYKBWlucHV0",
            "GAEgASgLMjcuYXNndC5qZXN0ZXIudjFhbHBoYTEuRWxlY3Ryb25pY0ludm9p",
            "Y2VMaW5lUmVxdWVzdC5EYXRhEjkKC3RydWVfdmFsdWVzGAIgAygLMiQuYXNn",
            "dC5kYXRhc2VydmljZS52MWFscGhhMS5EYXRhVHVwbGUy6QQKFUVsZWN0cm9u",
            "aWNJbnZvaWNlTGluZRJ2ChxQcmVwYXJlRWxlY3Ryb25pY0ludm9pY2VMaW5l",
            "Ej4uYXNndC5kYXRhc2VydmljZS52MWFscGhhMS5QcmVwYXJlRWxlY3Ryb25p",
            "Y0ludm9pY2VMaW5lUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRKY",
            "AQodRWxlY3Ryb25pY0ludm9pY2VMaW5lRmVlZGJhY2sSKi5hc2d0LmRhdGFz",
            "ZXJ2aWNlLnYxYWxwaGExLkZlZWRiYWNrUmVxdWVzdBoWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eSIzgtPkkwItIigvdjFhbHBoYTEvZWxlY3Ryb25pY2ludm9p",
            "Y2VsaW5lOmZlZWRiYWNrOgEqEqcBChxBZGRFbGVjdHJvbmljSW52b2ljZUxp",
            "bmVEYXRhEj4uYXNndC5kYXRhc2VydmljZS52MWFscGhhMS5BZGRFbGVjdHJv",
            "bmljSW52b2ljZUxpbmVEYXRhUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eSIvgtPkkwIpIiQvdjFhbHBoYTEvZWxlY3Ryb25pY2ludm9pY2VsaW5l",
            "OmRhdGE6ASoSkgEKG0RlbGV0ZUVsZWN0cm9uaWNJbnZvaWNlTGluZRIoLmFz",
            "Z3QuZGF0YXNlcnZpY2UudjFhbHBoYTEuRGVsZXRlUmVxdWVzdBoWLmdvb2ds",
            "ZS5wcm90b2J1Zi5FbXB0eSIxgtPkkwIrIiYvdjFhbHBoYTEvZWxlY3Ryb25p",
            "Y2ludm9pY2VsaW5lOmRlbGV0ZToBKkINWgtkYXRhc2VydmljZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Asgt.Dataservice.V1Alpha1.DataReflection.Descriptor, global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor, global::Asgt.Type.PredictionReflection.Descriptor, global::GenBqSchema.BqFieldReflection.Descriptor, global::GenBqSchema.BqTableReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntry), global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntry.Parser, new[]{ "Id", "Consumer", "Dataset", "Tags", "Input", "TrueValues", "PredValues", "TimeAdded" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.PrepareElectronicInvoiceLineRequest), global::Asgt.Dataservice.V1Alpha1.PrepareElectronicInvoiceLineRequest.Parser, new[]{ "Dataset", "Tags", "Entries" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.PrepareElectronicInvoiceLineRequest.Types.Entry), global::Asgt.Dataservice.V1Alpha1.PrepareElectronicInvoiceLineRequest.Types.Entry.Parser, new[]{ "Id", "Input", "Predictions" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.AddElectronicInvoiceLineDataRequest), global::Asgt.Dataservice.V1Alpha1.AddElectronicInvoiceLineDataRequest.Parser, new[]{ "Dataset", "Tags", "Entries", "RetentionPolicy" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.AddElectronicInvoiceLineDataRequest.Types.Entry), global::Asgt.Dataservice.V1Alpha1.AddElectronicInvoiceLineDataRequest.Types.Entry.Parser, new[]{ "Input", "TrueValues" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Electronic Invoice Line BQ schema gen - could be used for adding direct developer data endpoints
  /// </summary>
  public sealed partial class ElectronicInvoiceLineEntry : pb::IMessage<ElectronicInvoiceLineEntry> {
    private static readonly pb::MessageParser<ElectronicInvoiceLineEntry> _parser = new pb::MessageParser<ElectronicInvoiceLineEntry>(() => new ElectronicInvoiceLineEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectronicInvoiceLineEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineEntry(ElectronicInvoiceLineEntry other) : this() {
      id_ = other.id_;
      consumer_ = other.consumer_;
      dataset_ = other.dataset_;
      tags_ = other.tags_.Clone();
      input_ = other.input_ != null ? other.input_.Clone() : null;
      trueValues_ = other.trueValues_.Clone();
      predValues_ = other.predValues_.Clone();
      timeAdded_ = other.timeAdded_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineEntry Clone() {
      return new ElectronicInvoiceLineEntry(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "consumer" field.</summary>
    public const int ConsumerFieldNumber = 2;
    private string consumer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Consumer {
      get { return consumer_; }
      set {
        consumer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 3;
    private string dataset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 5;
    private global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "true_values" field.</summary>
    public const int TrueValuesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.DataTuple> _repeated_trueValues_codec
        = pb::FieldCodec.ForMessage(50, global::Asgt.Dataservice.V1Alpha1.DataTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> trueValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> TrueValues {
      get { return trueValues_; }
    }

    /// <summary>Field number for the "pred_values" field.</summary>
    public const int PredValuesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> _repeated_predValues_codec
        = pb::FieldCodec.ForMessage(58, global::Asgt.Dataservice.V1Alpha1.PredictedTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> predValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> PredValues {
      get { return predValues_; }
    }

    /// <summary>Field number for the "time_added" field.</summary>
    public const int TimeAddedFieldNumber = 8;
    private ulong timeAdded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TimeAdded {
      get { return timeAdded_; }
      set {
        timeAdded_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectronicInvoiceLineEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectronicInvoiceLineEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Consumer != other.Consumer) return false;
      if (Dataset != other.Dataset) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if(!trueValues_.Equals(other.trueValues_)) return false;
      if(!predValues_.Equals(other.predValues_)) return false;
      if (TimeAdded != other.TimeAdded) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Consumer.Length != 0) hash ^= Consumer.GetHashCode();
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= trueValues_.GetHashCode();
      hash ^= predValues_.GetHashCode();
      if (TimeAdded != 0UL) hash ^= TimeAdded.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Consumer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Consumer);
      }
      if (Dataset.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Dataset);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (input_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Input);
      }
      trueValues_.WriteTo(output, _repeated_trueValues_codec);
      predValues_.WriteTo(output, _repeated_predValues_codec);
      if (TimeAdded != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(TimeAdded);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Consumer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Consumer);
      }
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += trueValues_.CalculateSize(_repeated_trueValues_codec);
      size += predValues_.CalculateSize(_repeated_predValues_codec);
      if (TimeAdded != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeAdded);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectronicInvoiceLineEntry other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Consumer.Length != 0) {
        Consumer = other.Consumer;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      tags_.Add(other.tags_);
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
        }
        Input.MergeFrom(other.Input);
      }
      trueValues_.Add(other.trueValues_);
      predValues_.Add(other.predValues_);
      if (other.TimeAdded != 0UL) {
        TimeAdded = other.TimeAdded;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Consumer = input.ReadString();
            break;
          }
          case 26: {
            Dataset = input.ReadString();
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 42: {
            if (input_ == null) {
              input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
            }
            input.ReadMessage(input_);
            break;
          }
          case 50: {
            trueValues_.AddEntriesFrom(input, _repeated_trueValues_codec);
            break;
          }
          case 58: {
            predValues_.AddEntriesFrom(input, _repeated_predValues_codec);
            break;
          }
          case 64: {
            TimeAdded = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrepareElectronicInvoiceLineRequest : pb::IMessage<PrepareElectronicInvoiceLineRequest> {
    private static readonly pb::MessageParser<PrepareElectronicInvoiceLineRequest> _parser = new pb::MessageParser<PrepareElectronicInvoiceLineRequest>(() => new PrepareElectronicInvoiceLineRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrepareElectronicInvoiceLineRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareElectronicInvoiceLineRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareElectronicInvoiceLineRequest(PrepareElectronicInvoiceLineRequest other) : this() {
      dataset_ = other.dataset_;
      tags_ = other.tags_.Clone();
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareElectronicInvoiceLineRequest Clone() {
      return new PrepareElectronicInvoiceLineRequest(this);
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 1;
    private string dataset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.PrepareElectronicInvoiceLineRequest.Types.Entry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(26, global::Asgt.Dataservice.V1Alpha1.PrepareElectronicInvoiceLineRequest.Types.Entry.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PrepareElectronicInvoiceLineRequest.Types.Entry> entries_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PrepareElectronicInvoiceLineRequest.Types.Entry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PrepareElectronicInvoiceLineRequest.Types.Entry> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrepareElectronicInvoiceLineRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrepareElectronicInvoiceLineRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Dataset != other.Dataset) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Dataset.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Dataset);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrepareElectronicInvoiceLineRequest other) {
      if (other == null) {
        return;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      tags_.Add(other.tags_);
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Dataset = input.ReadString();
            break;
          }
          case 18: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PrepareElectronicInvoiceLineRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Entry : pb::IMessage<Entry> {
        private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Entry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Asgt.Dataservice.V1Alpha1.PrepareElectronicInvoiceLineRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry(Entry other) : this() {
          id_ = other.id_;
          input_ = other.input_ != null ? other.input_.Clone() : null;
          predictions_ = other.predictions_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry Clone() {
          return new Entry(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "input" field.</summary>
        public const int InputFieldNumber = 2;
        private global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data input_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data Input {
          get { return input_; }
          set {
            input_ = value;
          }
        }

        /// <summary>Field number for the "predictions" field.</summary>
        public const int PredictionsFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Asgt.Type.Prediction> _repeated_predictions_codec
            = pb::FieldCodec.ForMessage(26, global::Asgt.Type.Prediction.Parser);
        private readonly pbc::RepeatedField<global::Asgt.Type.Prediction> predictions_ = new pbc::RepeatedField<global::Asgt.Type.Prediction>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Asgt.Type.Prediction> Predictions {
          get { return predictions_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Entry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Entry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (!object.Equals(Input, other.Input)) return false;
          if(!predictions_.Equals(other.predictions_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (input_ != null) hash ^= Input.GetHashCode();
          hash ^= predictions_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (input_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Input);
          }
          predictions_.WriteTo(output, _repeated_predictions_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (input_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
          }
          size += predictions_.CalculateSize(_repeated_predictions_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Entry other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          if (other.input_ != null) {
            if (input_ == null) {
              input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
            }
            Input.MergeFrom(other.Input);
          }
          predictions_.Add(other.predictions_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                if (input_ == null) {
                  input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
                }
                input.ReadMessage(input_);
                break;
              }
              case 26: {
                predictions_.AddEntriesFrom(input, _repeated_predictions_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class AddElectronicInvoiceLineDataRequest : pb::IMessage<AddElectronicInvoiceLineDataRequest> {
    private static readonly pb::MessageParser<AddElectronicInvoiceLineDataRequest> _parser = new pb::MessageParser<AddElectronicInvoiceLineDataRequest>(() => new AddElectronicInvoiceLineDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddElectronicInvoiceLineDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddElectronicInvoiceLineDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddElectronicInvoiceLineDataRequest(AddElectronicInvoiceLineDataRequest other) : this() {
      dataset_ = other.dataset_;
      tags_ = other.tags_.Clone();
      entries_ = other.entries_.Clone();
      retentionPolicy_ = other.retentionPolicy_ != null ? other.retentionPolicy_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddElectronicInvoiceLineDataRequest Clone() {
      return new AddElectronicInvoiceLineDataRequest(this);
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 1;
    private string dataset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.AddElectronicInvoiceLineDataRequest.Types.Entry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(26, global::Asgt.Dataservice.V1Alpha1.AddElectronicInvoiceLineDataRequest.Types.Entry.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.AddElectronicInvoiceLineDataRequest.Types.Entry> entries_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.AddElectronicInvoiceLineDataRequest.Types.Entry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.AddElectronicInvoiceLineDataRequest.Types.Entry> Entries {
      get { return entries_; }
    }

    /// <summary>Field number for the "retention_policy" field.</summary>
    public const int RetentionPolicyFieldNumber = 4;
    private global::Asgt.Dataservice.V1Alpha1.RetentionPolicy retentionPolicy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Dataservice.V1Alpha1.RetentionPolicy RetentionPolicy {
      get { return retentionPolicy_; }
      set {
        retentionPolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddElectronicInvoiceLineDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddElectronicInvoiceLineDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Dataset != other.Dataset) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if(!entries_.Equals(other.entries_)) return false;
      if (!object.Equals(RetentionPolicy, other.RetentionPolicy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (retentionPolicy_ != null) hash ^= RetentionPolicy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Dataset.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Dataset);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      entries_.WriteTo(output, _repeated_entries_codec);
      if (retentionPolicy_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RetentionPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (retentionPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetentionPolicy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddElectronicInvoiceLineDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      tags_.Add(other.tags_);
      entries_.Add(other.entries_);
      if (other.retentionPolicy_ != null) {
        if (retentionPolicy_ == null) {
          retentionPolicy_ = new global::Asgt.Dataservice.V1Alpha1.RetentionPolicy();
        }
        RetentionPolicy.MergeFrom(other.RetentionPolicy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Dataset = input.ReadString();
            break;
          }
          case 18: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
          case 34: {
            if (retentionPolicy_ == null) {
              retentionPolicy_ = new global::Asgt.Dataservice.V1Alpha1.RetentionPolicy();
            }
            input.ReadMessage(retentionPolicy_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AddElectronicInvoiceLineDataRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Entry : pb::IMessage<Entry> {
        private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Entry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Asgt.Dataservice.V1Alpha1.AddElectronicInvoiceLineDataRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry(Entry other) : this() {
          input_ = other.input_ != null ? other.input_.Clone() : null;
          trueValues_ = other.trueValues_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Entry Clone() {
          return new Entry(this);
        }

        /// <summary>Field number for the "input" field.</summary>
        public const int InputFieldNumber = 1;
        private global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data input_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data Input {
          get { return input_; }
          set {
            input_ = value;
          }
        }

        /// <summary>Field number for the "true_values" field.</summary>
        public const int TrueValuesFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.DataTuple> _repeated_trueValues_codec
            = pb::FieldCodec.ForMessage(18, global::Asgt.Dataservice.V1Alpha1.DataTuple.Parser);
        private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> trueValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> TrueValues {
          get { return trueValues_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Entry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Entry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Input, other.Input)) return false;
          if(!trueValues_.Equals(other.trueValues_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (input_ != null) hash ^= Input.GetHashCode();
          hash ^= trueValues_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (input_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Input);
          }
          trueValues_.WriteTo(output, _repeated_trueValues_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (input_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
          }
          size += trueValues_.CalculateSize(_repeated_trueValues_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Entry other) {
          if (other == null) {
            return;
          }
          if (other.input_ != null) {
            if (input_ == null) {
              input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
            }
            Input.MergeFrom(other.Input);
          }
          trueValues_.Add(other.trueValues_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (input_ == null) {
                  input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
                }
                input.ReadMessage(input_);
                break;
              }
              case 18: {
                trueValues_.AddEntriesFrom(input, _repeated_trueValues_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
