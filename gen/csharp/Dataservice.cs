// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ssn/dataservice/v1alpha1/dataservice.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ssn.Dataservice.V1Alpha1 {

  /// <summary>Holder for reflection information generated from ssn/dataservice/v1alpha1/dataservice.proto</summary>
  public static partial class DataserviceReflection {

    #region Descriptor
    /// <summary>File descriptor for ssn/dataservice/v1alpha1/dataservice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataserviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cipzc24vZGF0YXNlcnZpY2UvdjFhbHBoYTEvZGF0YXNlcnZpY2UucHJvdG8S",
            "GHNzbi5kYXRhc2VydmljZS52MWFscGhhMRocZ2VuX2JxX3NjaGVtYS9icV9m",
            "aWVsZC5wcm90bxocZ2VuX2JxX3NjaGVtYS9icV90YWJsZS5wcm90bxocZ29v",
            "Z2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2Vt",
            "cHR5LnByb3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8aFmdv",
            "b2dsZS90eXBlL2RhdGUucHJvdG8aHnNzbi90eXBlL3RleHRfYW5ub3RhdGlv",
            "bi5wcm90byLIAgoIRG9jdW1lbnQSKwoCdGEYASABKAsyGC5zc24udHlwZS5U",
            "ZXh0QW5ub3RhdGlvbkIF6j8CGAESFAoFYnl0ZXMYAiABKAxCBeo/AhgBEjsK",
            "AmlkGAMgASgJQi/qPyciJUZlZWRiYWNrIElELCBzYW1lIGFzIEVudm95IHJl",
            "cXVlc3QgaWTqPwIIARIXCghjb25zdW1lchgEIAEoCUIF6j8CCAESVAoEdGFn",
            "cxgFIAMoCUJG6j9DIkFUYWdzIGRlZmluZWQgYnkgY29uc3VtZXIsIGVucmlj",
            "aGVkIGJ5IHNlcnZpY2UgaWYgdmFsZXRrZXkgaXMgdXNlZBI5Cgt0cnVlX3Zh",
            "bHVlcxgGIAEoCzIkLnNzbi5kYXRhc2VydmljZS52MWFscGhhMS5UcnVlVmFs",
            "dWVzOhLqPw8KDXRyYWluaW5nX2RhdGEi2AkKClRydWVWYWx1ZXMSNAoOdG90",
            "YWxfaW5jbF92YXQYASABKAsyHC5nb29nbGUucHJvdG9idWYuRG91YmxlVmFs",
            "dWUSLwoJdG90YWxfdmF0GAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLkRvdWJs",
            "ZVZhbHVlEjQKDnRvdGFsX2V4Y2xfdmF0GAMgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLkRvdWJsZVZhbHVlEjAKCm9yZGVyX2RhdGUYBCABKAsyES5nb29nbGUu",
            "dHlwZS5EYXRlQgnqPwYSBERBVEUSNgoQcGF5bWVudF9kdWVfZGF0ZRgFIAEo",
            "CzIRLmdvb2dsZS50eXBlLkRhdGVCCeo/BhIEREFURRIzCg1kb2N1bWVudF90",
            "eXBlGAYgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi4KCGN1",
            "cnJlbmN5GAcgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjsK",
            "FWNyZWRpdF9jYXJkX2xhc3RfZm91chgIIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRI0Cg5wYXltZW50X21ldGhvZBgJIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI2ChBvY3JfbGluZV9ka190eXBlGAog",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjwKFm9jcl9saW5l",
            "X2RrX3BheW1lbnRfaWQYCyABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5n",
            "VmFsdWUSPQoXb2NyX2xpbmVfZGtfY3JlZGl0b3JfaWQYDCABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSPAoWb2NyX2xpbmVfc2VfcGF5bWVu",
            "dF9pZBgNIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRJGCiBv",
            "Y3JfbGluZV9zZV9iYW5rZ2lyb19jcmVkaXRvcl9pZBgOIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRJGCiBvY3JfbGluZV9zZV9wbHVzZ2ly",
            "b19jcmVkaXRvcl9pZBgPIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRI8ChZvY3JfbGluZV9ub19wYXltZW50X2lkGBAgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEjwKFm9jcl9saW5lX2ZpX3BheW1lbnRf",
            "aWQYESABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSPAoWb2Ny",
            "X2xpbmVfbmxfcGF5bWVudF9pZBgSIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRI7ChVzdXBwbGllcl9jb3Jwb3JhdGVfaWQYEyABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSOwoVc3VwcGxpZXJfY291bnRy",
            "eV9jb2RlGBQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjQK",
            "Dmludm9pY2VfbnVtYmVyGBUgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlIk0KFUNyZWF0ZURvY3VtZW50UmVxdWVzdBI0Cghkb2N1bWVudBgB",
            "IAEoCzIiLnNzbi5kYXRhc2VydmljZS52MWFscGhhMS5Eb2N1bWVudCIkChZD",
            "cmVhdGVEb2N1bWVudFJlc3BvbnNlEgoKAmlkGAEgASgJIiEKE1JlYWREb2N1",
            "bWVudFJlcXVlc3QSCgoCaWQYASABKAkiTAoUUmVhZERvY3VtZW50UmVzcG9u",
            "c2USNAoIZG9jdW1lbnQYASABKAsyIi5zc24uZGF0YXNlcnZpY2UudjFhbHBo",
            "YTEuRG9jdW1lbnQiYgoWUHJlcGFyZUZlZWRiYWNrUmVxdWVzdBIKCgJpZBgB",
            "IAEoCRIkCgJ0YRgCIAEoCzIYLnNzbi50eXBlLlRleHRBbm5vdGF0aW9uEhYK",
            "DmRvY3VtZW50X2J5dGVzGAMgASgMImYKD0ZlZWRiYWNrUmVxdWVzdBIKCgJp",
            "ZBgBIAEoCRI5Cgt0cnVlX3ZhbHVlcxgCIAEoCzIkLnNzbi5kYXRhc2Vydmlj",
            "ZS52MWFscGhhMS5UcnVlVmFsdWVzEgwKBHRhZ3MYAyADKAkiHQoNRGVsZXRl",
            "UmVxdWVzdBIMCgR0YWdzGAEgAygJMrQECgtEYXRhU2VydmljZRJzCg5DcmVh",
            "dGVEb2N1bWVudBIvLnNzbi5kYXRhc2VydmljZS52MWFscGhhMS5DcmVhdGVE",
            "b2N1bWVudFJlcXVlc3QaMC5zc24uZGF0YXNlcnZpY2UudjFhbHBoYTEuQ3Jl",
            "YXRlRG9jdW1lbnRSZXNwb25zZRJtCgxSZWFkRG9jdW1lbnQSLS5zc24uZGF0",
            "YXNlcnZpY2UudjFhbHBoYTEuUmVhZERvY3VtZW50UmVxdWVzdBouLnNzbi5k",
            "YXRhc2VydmljZS52MWFscGhhMS5SZWFkRG9jdW1lbnRSZXNwb25zZRJbCg9Q",
            "cmVwYXJlRmVlZGJhY2sSMC5zc24uZGF0YXNlcnZpY2UudjFhbHBoYTEuUHJl",
            "cGFyZUZlZWRiYWNrUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRJz",
            "CghGZWVkYmFjaxIpLnNzbi5kYXRhc2VydmljZS52MWFscGhhMS5GZWVkYmFj",
            "a1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiJILT5JMCHiIZL3Yx",
            "YWxwaGExL2ZlZWRiYWNrOmNyZWF0ZToBKhJvCgZEZWxldGUSJy5zc24uZGF0",
            "YXNlcnZpY2UudjFhbHBoYTEuRGVsZXRlUmVxdWVzdBoWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eSIkgtPkkwIeIhkvdjFhbHBoYTEvZmVlZGJhY2s6ZGVsZXRl",
            "OgEqQg1aC2RhdGFzZXJ2aWNlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::GenBqSchema.BqFieldReflection.Descriptor, global::GenBqSchema.BqTableReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Type.DateReflection.Descriptor, global::Ssn.Type.TextAnnotationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Dataservice.V1Alpha1.Document), global::Ssn.Dataservice.V1Alpha1.Document.Parser, new[]{ "Ta", "Bytes", "Id", "Consumer", "Tags", "TrueValues" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Dataservice.V1Alpha1.TrueValues), global::Ssn.Dataservice.V1Alpha1.TrueValues.Parser, new[]{ "TotalInclVat", "TotalVat", "TotalExclVat", "OrderDate", "PaymentDueDate", "DocumentType", "Currency", "CreditCardLastFour", "PaymentMethod", "OcrLineDkType", "OcrLineDkPaymentId", "OcrLineDkCreditorId", "OcrLineSePaymentId", "OcrLineSeBankgiroCreditorId", "OcrLineSePlusgiroCreditorId", "OcrLineNoPaymentId", "OcrLineFiPaymentId", "OcrLineNlPaymentId", "SupplierCorporateId", "SupplierCountryCode", "InvoiceNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Dataservice.V1Alpha1.CreateDocumentRequest), global::Ssn.Dataservice.V1Alpha1.CreateDocumentRequest.Parser, new[]{ "Document" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Dataservice.V1Alpha1.CreateDocumentResponse), global::Ssn.Dataservice.V1Alpha1.CreateDocumentResponse.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Dataservice.V1Alpha1.ReadDocumentRequest), global::Ssn.Dataservice.V1Alpha1.ReadDocumentRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Dataservice.V1Alpha1.ReadDocumentResponse), global::Ssn.Dataservice.V1Alpha1.ReadDocumentResponse.Parser, new[]{ "Document" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Dataservice.V1Alpha1.PrepareFeedbackRequest), global::Ssn.Dataservice.V1Alpha1.PrepareFeedbackRequest.Parser, new[]{ "Id", "Ta", "DocumentBytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Dataservice.V1Alpha1.FeedbackRequest), global::Ssn.Dataservice.V1Alpha1.FeedbackRequest.Parser, new[]{ "Id", "TrueValues", "Tags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Dataservice.V1Alpha1.DeleteRequest), global::Ssn.Dataservice.V1Alpha1.DeleteRequest.Parser, new[]{ "Tags" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Document : pb::IMessage<Document> {
    private static readonly pb::MessageParser<Document> _parser = new pb::MessageParser<Document>(() => new Document());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Document> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document(Document other) : this() {
      ta_ = other.ta_ != null ? other.ta_.Clone() : null;
      bytes_ = other.bytes_;
      id_ = other.id_;
      consumer_ = other.consumer_;
      tags_ = other.tags_.Clone();
      trueValues_ = other.trueValues_ != null ? other.trueValues_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document Clone() {
      return new Document(this);
    }

    /// <summary>Field number for the "ta" field.</summary>
    public const int TaFieldNumber = 1;
    private global::Ssn.Type.TextAnnotation ta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ssn.Type.TextAnnotation Ta {
      get { return ta_; }
      set {
        ta_ = value;
      }
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 2;
    private pb::ByteString bytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytes {
      get { return bytes_; }
      set {
        bytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "consumer" field.</summary>
    public const int ConsumerFieldNumber = 4;
    private string consumer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Consumer {
      get { return consumer_; }
      set {
        consumer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "true_values" field.</summary>
    public const int TrueValuesFieldNumber = 6;
    private global::Ssn.Dataservice.V1Alpha1.TrueValues trueValues_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ssn.Dataservice.V1Alpha1.TrueValues TrueValues {
      get { return trueValues_; }
      set {
        trueValues_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Document);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Document other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ta, other.Ta)) return false;
      if (Bytes != other.Bytes) return false;
      if (Id != other.Id) return false;
      if (Consumer != other.Consumer) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!object.Equals(TrueValues, other.TrueValues)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ta_ != null) hash ^= Ta.GetHashCode();
      if (Bytes.Length != 0) hash ^= Bytes.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Consumer.Length != 0) hash ^= Consumer.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (trueValues_ != null) hash ^= TrueValues.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ta_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ta);
      }
      if (Bytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Bytes);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (Consumer.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Consumer);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (trueValues_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TrueValues);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ta);
      }
      if (Bytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytes);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Consumer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Consumer);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (trueValues_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrueValues);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Document other) {
      if (other == null) {
        return;
      }
      if (other.ta_ != null) {
        if (ta_ == null) {
          ta_ = new global::Ssn.Type.TextAnnotation();
        }
        Ta.MergeFrom(other.Ta);
      }
      if (other.Bytes.Length != 0) {
        Bytes = other.Bytes;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Consumer.Length != 0) {
        Consumer = other.Consumer;
      }
      tags_.Add(other.tags_);
      if (other.trueValues_ != null) {
        if (trueValues_ == null) {
          trueValues_ = new global::Ssn.Dataservice.V1Alpha1.TrueValues();
        }
        TrueValues.MergeFrom(other.TrueValues);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ta_ == null) {
              ta_ = new global::Ssn.Type.TextAnnotation();
            }
            input.ReadMessage(ta_);
            break;
          }
          case 18: {
            Bytes = input.ReadBytes();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            Consumer = input.ReadString();
            break;
          }
          case 42: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 50: {
            if (trueValues_ == null) {
              trueValues_ = new global::Ssn.Dataservice.V1Alpha1.TrueValues();
            }
            input.ReadMessage(trueValues_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TrueValues : pb::IMessage<TrueValues> {
    private static readonly pb::MessageParser<TrueValues> _parser = new pb::MessageParser<TrueValues>(() => new TrueValues());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrueValues> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrueValues() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrueValues(TrueValues other) : this() {
      TotalInclVat = other.TotalInclVat;
      TotalVat = other.TotalVat;
      TotalExclVat = other.TotalExclVat;
      orderDate_ = other.orderDate_ != null ? other.orderDate_.Clone() : null;
      paymentDueDate_ = other.paymentDueDate_ != null ? other.paymentDueDate_.Clone() : null;
      DocumentType = other.DocumentType;
      Currency = other.Currency;
      CreditCardLastFour = other.CreditCardLastFour;
      PaymentMethod = other.PaymentMethod;
      OcrLineDkType = other.OcrLineDkType;
      OcrLineDkPaymentId = other.OcrLineDkPaymentId;
      OcrLineDkCreditorId = other.OcrLineDkCreditorId;
      OcrLineSePaymentId = other.OcrLineSePaymentId;
      OcrLineSeBankgiroCreditorId = other.OcrLineSeBankgiroCreditorId;
      OcrLineSePlusgiroCreditorId = other.OcrLineSePlusgiroCreditorId;
      OcrLineNoPaymentId = other.OcrLineNoPaymentId;
      OcrLineFiPaymentId = other.OcrLineFiPaymentId;
      OcrLineNlPaymentId = other.OcrLineNlPaymentId;
      SupplierCorporateId = other.SupplierCorporateId;
      SupplierCountryCode = other.SupplierCountryCode;
      InvoiceNumber = other.InvoiceNumber;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrueValues Clone() {
      return new TrueValues(this);
    }

    /// <summary>Field number for the "total_incl_vat" field.</summary>
    public const int TotalInclVatFieldNumber = 1;
    private static readonly pb::FieldCodec<double?> _single_totalInclVat_codec = pb::FieldCodec.ForStructWrapper<double>(10);
    private double? totalInclVat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? TotalInclVat {
      get { return totalInclVat_; }
      set {
        totalInclVat_ = value;
      }
    }

    /// <summary>Field number for the "total_vat" field.</summary>
    public const int TotalVatFieldNumber = 2;
    private static readonly pb::FieldCodec<double?> _single_totalVat_codec = pb::FieldCodec.ForStructWrapper<double>(18);
    private double? totalVat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? TotalVat {
      get { return totalVat_; }
      set {
        totalVat_ = value;
      }
    }

    /// <summary>Field number for the "total_excl_vat" field.</summary>
    public const int TotalExclVatFieldNumber = 3;
    private static readonly pb::FieldCodec<double?> _single_totalExclVat_codec = pb::FieldCodec.ForStructWrapper<double>(26);
    private double? totalExclVat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? TotalExclVat {
      get { return totalExclVat_; }
      set {
        totalExclVat_ = value;
      }
    }

    /// <summary>Field number for the "order_date" field.</summary>
    public const int OrderDateFieldNumber = 4;
    private global::Google.Type.Date orderDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date OrderDate {
      get { return orderDate_; }
      set {
        orderDate_ = value;
      }
    }

    /// <summary>Field number for the "payment_due_date" field.</summary>
    public const int PaymentDueDateFieldNumber = 5;
    private global::Google.Type.Date paymentDueDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Date PaymentDueDate {
      get { return paymentDueDate_; }
      set {
        paymentDueDate_ = value;
      }
    }

    /// <summary>Field number for the "document_type" field.</summary>
    public const int DocumentTypeFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_documentType_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string documentType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DocumentType {
      get { return documentType_; }
      set {
        documentType_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_currency_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string currency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = value;
      }
    }

    /// <summary>Field number for the "credit_card_last_four" field.</summary>
    public const int CreditCardLastFourFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_creditCardLastFour_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string creditCardLastFour_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreditCardLastFour {
      get { return creditCardLastFour_; }
      set {
        creditCardLastFour_ = value;
      }
    }

    /// <summary>Field number for the "payment_method" field.</summary>
    public const int PaymentMethodFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_paymentMethod_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string paymentMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentMethod {
      get { return paymentMethod_; }
      set {
        paymentMethod_ = value;
      }
    }

    /// <summary>Field number for the "ocr_line_dk_type" field.</summary>
    public const int OcrLineDkTypeFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_ocrLineDkType_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string ocrLineDkType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OcrLineDkType {
      get { return ocrLineDkType_; }
      set {
        ocrLineDkType_ = value;
      }
    }

    /// <summary>Field number for the "ocr_line_dk_payment_id" field.</summary>
    public const int OcrLineDkPaymentIdFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_ocrLineDkPaymentId_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string ocrLineDkPaymentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OcrLineDkPaymentId {
      get { return ocrLineDkPaymentId_; }
      set {
        ocrLineDkPaymentId_ = value;
      }
    }

    /// <summary>Field number for the "ocr_line_dk_creditor_id" field.</summary>
    public const int OcrLineDkCreditorIdFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_ocrLineDkCreditorId_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string ocrLineDkCreditorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OcrLineDkCreditorId {
      get { return ocrLineDkCreditorId_; }
      set {
        ocrLineDkCreditorId_ = value;
      }
    }

    /// <summary>Field number for the "ocr_line_se_payment_id" field.</summary>
    public const int OcrLineSePaymentIdFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_ocrLineSePaymentId_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string ocrLineSePaymentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OcrLineSePaymentId {
      get { return ocrLineSePaymentId_; }
      set {
        ocrLineSePaymentId_ = value;
      }
    }

    /// <summary>Field number for the "ocr_line_se_bankgiro_creditor_id" field.</summary>
    public const int OcrLineSeBankgiroCreditorIdFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _single_ocrLineSeBankgiroCreditorId_codec = pb::FieldCodec.ForClassWrapper<string>(114);
    private string ocrLineSeBankgiroCreditorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OcrLineSeBankgiroCreditorId {
      get { return ocrLineSeBankgiroCreditorId_; }
      set {
        ocrLineSeBankgiroCreditorId_ = value;
      }
    }

    /// <summary>Field number for the "ocr_line_se_plusgiro_creditor_id" field.</summary>
    public const int OcrLineSePlusgiroCreditorIdFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_ocrLineSePlusgiroCreditorId_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string ocrLineSePlusgiroCreditorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OcrLineSePlusgiroCreditorId {
      get { return ocrLineSePlusgiroCreditorId_; }
      set {
        ocrLineSePlusgiroCreditorId_ = value;
      }
    }

    /// <summary>Field number for the "ocr_line_no_payment_id" field.</summary>
    public const int OcrLineNoPaymentIdFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _single_ocrLineNoPaymentId_codec = pb::FieldCodec.ForClassWrapper<string>(130);
    private string ocrLineNoPaymentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OcrLineNoPaymentId {
      get { return ocrLineNoPaymentId_; }
      set {
        ocrLineNoPaymentId_ = value;
      }
    }

    /// <summary>Field number for the "ocr_line_fi_payment_id" field.</summary>
    public const int OcrLineFiPaymentIdFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _single_ocrLineFiPaymentId_codec = pb::FieldCodec.ForClassWrapper<string>(138);
    private string ocrLineFiPaymentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OcrLineFiPaymentId {
      get { return ocrLineFiPaymentId_; }
      set {
        ocrLineFiPaymentId_ = value;
      }
    }

    /// <summary>Field number for the "ocr_line_nl_payment_id" field.</summary>
    public const int OcrLineNlPaymentIdFieldNumber = 18;
    private static readonly pb::FieldCodec<string> _single_ocrLineNlPaymentId_codec = pb::FieldCodec.ForClassWrapper<string>(146);
    private string ocrLineNlPaymentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OcrLineNlPaymentId {
      get { return ocrLineNlPaymentId_; }
      set {
        ocrLineNlPaymentId_ = value;
      }
    }

    /// <summary>Field number for the "supplier_corporate_id" field.</summary>
    public const int SupplierCorporateIdFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _single_supplierCorporateId_codec = pb::FieldCodec.ForClassWrapper<string>(154);
    private string supplierCorporateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SupplierCorporateId {
      get { return supplierCorporateId_; }
      set {
        supplierCorporateId_ = value;
      }
    }

    /// <summary>Field number for the "supplier_country_code" field.</summary>
    public const int SupplierCountryCodeFieldNumber = 20;
    private static readonly pb::FieldCodec<string> _single_supplierCountryCode_codec = pb::FieldCodec.ForClassWrapper<string>(162);
    private string supplierCountryCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SupplierCountryCode {
      get { return supplierCountryCode_; }
      set {
        supplierCountryCode_ = value;
      }
    }

    /// <summary>Field number for the "invoice_number" field.</summary>
    public const int InvoiceNumberFieldNumber = 21;
    private static readonly pb::FieldCodec<string> _single_invoiceNumber_codec = pb::FieldCodec.ForClassWrapper<string>(170);
    private string invoiceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InvoiceNumber {
      get { return invoiceNumber_; }
      set {
        invoiceNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrueValues);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrueValues other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(TotalInclVat, other.TotalInclVat)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(TotalVat, other.TotalVat)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(TotalExclVat, other.TotalExclVat)) return false;
      if (!object.Equals(OrderDate, other.OrderDate)) return false;
      if (!object.Equals(PaymentDueDate, other.PaymentDueDate)) return false;
      if (DocumentType != other.DocumentType) return false;
      if (Currency != other.Currency) return false;
      if (CreditCardLastFour != other.CreditCardLastFour) return false;
      if (PaymentMethod != other.PaymentMethod) return false;
      if (OcrLineDkType != other.OcrLineDkType) return false;
      if (OcrLineDkPaymentId != other.OcrLineDkPaymentId) return false;
      if (OcrLineDkCreditorId != other.OcrLineDkCreditorId) return false;
      if (OcrLineSePaymentId != other.OcrLineSePaymentId) return false;
      if (OcrLineSeBankgiroCreditorId != other.OcrLineSeBankgiroCreditorId) return false;
      if (OcrLineSePlusgiroCreditorId != other.OcrLineSePlusgiroCreditorId) return false;
      if (OcrLineNoPaymentId != other.OcrLineNoPaymentId) return false;
      if (OcrLineFiPaymentId != other.OcrLineFiPaymentId) return false;
      if (OcrLineNlPaymentId != other.OcrLineNlPaymentId) return false;
      if (SupplierCorporateId != other.SupplierCorporateId) return false;
      if (SupplierCountryCode != other.SupplierCountryCode) return false;
      if (InvoiceNumber != other.InvoiceNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (totalInclVat_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(TotalInclVat);
      if (totalVat_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(TotalVat);
      if (totalExclVat_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(TotalExclVat);
      if (orderDate_ != null) hash ^= OrderDate.GetHashCode();
      if (paymentDueDate_ != null) hash ^= PaymentDueDate.GetHashCode();
      if (documentType_ != null) hash ^= DocumentType.GetHashCode();
      if (currency_ != null) hash ^= Currency.GetHashCode();
      if (creditCardLastFour_ != null) hash ^= CreditCardLastFour.GetHashCode();
      if (paymentMethod_ != null) hash ^= PaymentMethod.GetHashCode();
      if (ocrLineDkType_ != null) hash ^= OcrLineDkType.GetHashCode();
      if (ocrLineDkPaymentId_ != null) hash ^= OcrLineDkPaymentId.GetHashCode();
      if (ocrLineDkCreditorId_ != null) hash ^= OcrLineDkCreditorId.GetHashCode();
      if (ocrLineSePaymentId_ != null) hash ^= OcrLineSePaymentId.GetHashCode();
      if (ocrLineSeBankgiroCreditorId_ != null) hash ^= OcrLineSeBankgiroCreditorId.GetHashCode();
      if (ocrLineSePlusgiroCreditorId_ != null) hash ^= OcrLineSePlusgiroCreditorId.GetHashCode();
      if (ocrLineNoPaymentId_ != null) hash ^= OcrLineNoPaymentId.GetHashCode();
      if (ocrLineFiPaymentId_ != null) hash ^= OcrLineFiPaymentId.GetHashCode();
      if (ocrLineNlPaymentId_ != null) hash ^= OcrLineNlPaymentId.GetHashCode();
      if (supplierCorporateId_ != null) hash ^= SupplierCorporateId.GetHashCode();
      if (supplierCountryCode_ != null) hash ^= SupplierCountryCode.GetHashCode();
      if (invoiceNumber_ != null) hash ^= InvoiceNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (totalInclVat_ != null) {
        _single_totalInclVat_codec.WriteTagAndValue(output, TotalInclVat);
      }
      if (totalVat_ != null) {
        _single_totalVat_codec.WriteTagAndValue(output, TotalVat);
      }
      if (totalExclVat_ != null) {
        _single_totalExclVat_codec.WriteTagAndValue(output, TotalExclVat);
      }
      if (orderDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OrderDate);
      }
      if (paymentDueDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PaymentDueDate);
      }
      if (documentType_ != null) {
        _single_documentType_codec.WriteTagAndValue(output, DocumentType);
      }
      if (currency_ != null) {
        _single_currency_codec.WriteTagAndValue(output, Currency);
      }
      if (creditCardLastFour_ != null) {
        _single_creditCardLastFour_codec.WriteTagAndValue(output, CreditCardLastFour);
      }
      if (paymentMethod_ != null) {
        _single_paymentMethod_codec.WriteTagAndValue(output, PaymentMethod);
      }
      if (ocrLineDkType_ != null) {
        _single_ocrLineDkType_codec.WriteTagAndValue(output, OcrLineDkType);
      }
      if (ocrLineDkPaymentId_ != null) {
        _single_ocrLineDkPaymentId_codec.WriteTagAndValue(output, OcrLineDkPaymentId);
      }
      if (ocrLineDkCreditorId_ != null) {
        _single_ocrLineDkCreditorId_codec.WriteTagAndValue(output, OcrLineDkCreditorId);
      }
      if (ocrLineSePaymentId_ != null) {
        _single_ocrLineSePaymentId_codec.WriteTagAndValue(output, OcrLineSePaymentId);
      }
      if (ocrLineSeBankgiroCreditorId_ != null) {
        _single_ocrLineSeBankgiroCreditorId_codec.WriteTagAndValue(output, OcrLineSeBankgiroCreditorId);
      }
      if (ocrLineSePlusgiroCreditorId_ != null) {
        _single_ocrLineSePlusgiroCreditorId_codec.WriteTagAndValue(output, OcrLineSePlusgiroCreditorId);
      }
      if (ocrLineNoPaymentId_ != null) {
        _single_ocrLineNoPaymentId_codec.WriteTagAndValue(output, OcrLineNoPaymentId);
      }
      if (ocrLineFiPaymentId_ != null) {
        _single_ocrLineFiPaymentId_codec.WriteTagAndValue(output, OcrLineFiPaymentId);
      }
      if (ocrLineNlPaymentId_ != null) {
        _single_ocrLineNlPaymentId_codec.WriteTagAndValue(output, OcrLineNlPaymentId);
      }
      if (supplierCorporateId_ != null) {
        _single_supplierCorporateId_codec.WriteTagAndValue(output, SupplierCorporateId);
      }
      if (supplierCountryCode_ != null) {
        _single_supplierCountryCode_codec.WriteTagAndValue(output, SupplierCountryCode);
      }
      if (invoiceNumber_ != null) {
        _single_invoiceNumber_codec.WriteTagAndValue(output, InvoiceNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (totalInclVat_ != null) {
        size += _single_totalInclVat_codec.CalculateSizeWithTag(TotalInclVat);
      }
      if (totalVat_ != null) {
        size += _single_totalVat_codec.CalculateSizeWithTag(TotalVat);
      }
      if (totalExclVat_ != null) {
        size += _single_totalExclVat_codec.CalculateSizeWithTag(TotalExclVat);
      }
      if (orderDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderDate);
      }
      if (paymentDueDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PaymentDueDate);
      }
      if (documentType_ != null) {
        size += _single_documentType_codec.CalculateSizeWithTag(DocumentType);
      }
      if (currency_ != null) {
        size += _single_currency_codec.CalculateSizeWithTag(Currency);
      }
      if (creditCardLastFour_ != null) {
        size += _single_creditCardLastFour_codec.CalculateSizeWithTag(CreditCardLastFour);
      }
      if (paymentMethod_ != null) {
        size += _single_paymentMethod_codec.CalculateSizeWithTag(PaymentMethod);
      }
      if (ocrLineDkType_ != null) {
        size += _single_ocrLineDkType_codec.CalculateSizeWithTag(OcrLineDkType);
      }
      if (ocrLineDkPaymentId_ != null) {
        size += _single_ocrLineDkPaymentId_codec.CalculateSizeWithTag(OcrLineDkPaymentId);
      }
      if (ocrLineDkCreditorId_ != null) {
        size += _single_ocrLineDkCreditorId_codec.CalculateSizeWithTag(OcrLineDkCreditorId);
      }
      if (ocrLineSePaymentId_ != null) {
        size += _single_ocrLineSePaymentId_codec.CalculateSizeWithTag(OcrLineSePaymentId);
      }
      if (ocrLineSeBankgiroCreditorId_ != null) {
        size += _single_ocrLineSeBankgiroCreditorId_codec.CalculateSizeWithTag(OcrLineSeBankgiroCreditorId);
      }
      if (ocrLineSePlusgiroCreditorId_ != null) {
        size += _single_ocrLineSePlusgiroCreditorId_codec.CalculateSizeWithTag(OcrLineSePlusgiroCreditorId);
      }
      if (ocrLineNoPaymentId_ != null) {
        size += _single_ocrLineNoPaymentId_codec.CalculateSizeWithTag(OcrLineNoPaymentId);
      }
      if (ocrLineFiPaymentId_ != null) {
        size += _single_ocrLineFiPaymentId_codec.CalculateSizeWithTag(OcrLineFiPaymentId);
      }
      if (ocrLineNlPaymentId_ != null) {
        size += _single_ocrLineNlPaymentId_codec.CalculateSizeWithTag(OcrLineNlPaymentId);
      }
      if (supplierCorporateId_ != null) {
        size += _single_supplierCorporateId_codec.CalculateSizeWithTag(SupplierCorporateId);
      }
      if (supplierCountryCode_ != null) {
        size += _single_supplierCountryCode_codec.CalculateSizeWithTag(SupplierCountryCode);
      }
      if (invoiceNumber_ != null) {
        size += _single_invoiceNumber_codec.CalculateSizeWithTag(InvoiceNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrueValues other) {
      if (other == null) {
        return;
      }
      if (other.totalInclVat_ != null) {
        if (totalInclVat_ == null || other.TotalInclVat != 0D) {
          TotalInclVat = other.TotalInclVat;
        }
      }
      if (other.totalVat_ != null) {
        if (totalVat_ == null || other.TotalVat != 0D) {
          TotalVat = other.TotalVat;
        }
      }
      if (other.totalExclVat_ != null) {
        if (totalExclVat_ == null || other.TotalExclVat != 0D) {
          TotalExclVat = other.TotalExclVat;
        }
      }
      if (other.orderDate_ != null) {
        if (orderDate_ == null) {
          orderDate_ = new global::Google.Type.Date();
        }
        OrderDate.MergeFrom(other.OrderDate);
      }
      if (other.paymentDueDate_ != null) {
        if (paymentDueDate_ == null) {
          paymentDueDate_ = new global::Google.Type.Date();
        }
        PaymentDueDate.MergeFrom(other.PaymentDueDate);
      }
      if (other.documentType_ != null) {
        if (documentType_ == null || other.DocumentType != "") {
          DocumentType = other.DocumentType;
        }
      }
      if (other.currency_ != null) {
        if (currency_ == null || other.Currency != "") {
          Currency = other.Currency;
        }
      }
      if (other.creditCardLastFour_ != null) {
        if (creditCardLastFour_ == null || other.CreditCardLastFour != "") {
          CreditCardLastFour = other.CreditCardLastFour;
        }
      }
      if (other.paymentMethod_ != null) {
        if (paymentMethod_ == null || other.PaymentMethod != "") {
          PaymentMethod = other.PaymentMethod;
        }
      }
      if (other.ocrLineDkType_ != null) {
        if (ocrLineDkType_ == null || other.OcrLineDkType != "") {
          OcrLineDkType = other.OcrLineDkType;
        }
      }
      if (other.ocrLineDkPaymentId_ != null) {
        if (ocrLineDkPaymentId_ == null || other.OcrLineDkPaymentId != "") {
          OcrLineDkPaymentId = other.OcrLineDkPaymentId;
        }
      }
      if (other.ocrLineDkCreditorId_ != null) {
        if (ocrLineDkCreditorId_ == null || other.OcrLineDkCreditorId != "") {
          OcrLineDkCreditorId = other.OcrLineDkCreditorId;
        }
      }
      if (other.ocrLineSePaymentId_ != null) {
        if (ocrLineSePaymentId_ == null || other.OcrLineSePaymentId != "") {
          OcrLineSePaymentId = other.OcrLineSePaymentId;
        }
      }
      if (other.ocrLineSeBankgiroCreditorId_ != null) {
        if (ocrLineSeBankgiroCreditorId_ == null || other.OcrLineSeBankgiroCreditorId != "") {
          OcrLineSeBankgiroCreditorId = other.OcrLineSeBankgiroCreditorId;
        }
      }
      if (other.ocrLineSePlusgiroCreditorId_ != null) {
        if (ocrLineSePlusgiroCreditorId_ == null || other.OcrLineSePlusgiroCreditorId != "") {
          OcrLineSePlusgiroCreditorId = other.OcrLineSePlusgiroCreditorId;
        }
      }
      if (other.ocrLineNoPaymentId_ != null) {
        if (ocrLineNoPaymentId_ == null || other.OcrLineNoPaymentId != "") {
          OcrLineNoPaymentId = other.OcrLineNoPaymentId;
        }
      }
      if (other.ocrLineFiPaymentId_ != null) {
        if (ocrLineFiPaymentId_ == null || other.OcrLineFiPaymentId != "") {
          OcrLineFiPaymentId = other.OcrLineFiPaymentId;
        }
      }
      if (other.ocrLineNlPaymentId_ != null) {
        if (ocrLineNlPaymentId_ == null || other.OcrLineNlPaymentId != "") {
          OcrLineNlPaymentId = other.OcrLineNlPaymentId;
        }
      }
      if (other.supplierCorporateId_ != null) {
        if (supplierCorporateId_ == null || other.SupplierCorporateId != "") {
          SupplierCorporateId = other.SupplierCorporateId;
        }
      }
      if (other.supplierCountryCode_ != null) {
        if (supplierCountryCode_ == null || other.SupplierCountryCode != "") {
          SupplierCountryCode = other.SupplierCountryCode;
        }
      }
      if (other.invoiceNumber_ != null) {
        if (invoiceNumber_ == null || other.InvoiceNumber != "") {
          InvoiceNumber = other.InvoiceNumber;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            double? value = _single_totalInclVat_codec.Read(input);
            if (totalInclVat_ == null || value != 0D) {
              TotalInclVat = value;
            }
            break;
          }
          case 18: {
            double? value = _single_totalVat_codec.Read(input);
            if (totalVat_ == null || value != 0D) {
              TotalVat = value;
            }
            break;
          }
          case 26: {
            double? value = _single_totalExclVat_codec.Read(input);
            if (totalExclVat_ == null || value != 0D) {
              TotalExclVat = value;
            }
            break;
          }
          case 34: {
            if (orderDate_ == null) {
              orderDate_ = new global::Google.Type.Date();
            }
            input.ReadMessage(orderDate_);
            break;
          }
          case 42: {
            if (paymentDueDate_ == null) {
              paymentDueDate_ = new global::Google.Type.Date();
            }
            input.ReadMessage(paymentDueDate_);
            break;
          }
          case 50: {
            string value = _single_documentType_codec.Read(input);
            if (documentType_ == null || value != "") {
              DocumentType = value;
            }
            break;
          }
          case 58: {
            string value = _single_currency_codec.Read(input);
            if (currency_ == null || value != "") {
              Currency = value;
            }
            break;
          }
          case 66: {
            string value = _single_creditCardLastFour_codec.Read(input);
            if (creditCardLastFour_ == null || value != "") {
              CreditCardLastFour = value;
            }
            break;
          }
          case 74: {
            string value = _single_paymentMethod_codec.Read(input);
            if (paymentMethod_ == null || value != "") {
              PaymentMethod = value;
            }
            break;
          }
          case 82: {
            string value = _single_ocrLineDkType_codec.Read(input);
            if (ocrLineDkType_ == null || value != "") {
              OcrLineDkType = value;
            }
            break;
          }
          case 90: {
            string value = _single_ocrLineDkPaymentId_codec.Read(input);
            if (ocrLineDkPaymentId_ == null || value != "") {
              OcrLineDkPaymentId = value;
            }
            break;
          }
          case 98: {
            string value = _single_ocrLineDkCreditorId_codec.Read(input);
            if (ocrLineDkCreditorId_ == null || value != "") {
              OcrLineDkCreditorId = value;
            }
            break;
          }
          case 106: {
            string value = _single_ocrLineSePaymentId_codec.Read(input);
            if (ocrLineSePaymentId_ == null || value != "") {
              OcrLineSePaymentId = value;
            }
            break;
          }
          case 114: {
            string value = _single_ocrLineSeBankgiroCreditorId_codec.Read(input);
            if (ocrLineSeBankgiroCreditorId_ == null || value != "") {
              OcrLineSeBankgiroCreditorId = value;
            }
            break;
          }
          case 122: {
            string value = _single_ocrLineSePlusgiroCreditorId_codec.Read(input);
            if (ocrLineSePlusgiroCreditorId_ == null || value != "") {
              OcrLineSePlusgiroCreditorId = value;
            }
            break;
          }
          case 130: {
            string value = _single_ocrLineNoPaymentId_codec.Read(input);
            if (ocrLineNoPaymentId_ == null || value != "") {
              OcrLineNoPaymentId = value;
            }
            break;
          }
          case 138: {
            string value = _single_ocrLineFiPaymentId_codec.Read(input);
            if (ocrLineFiPaymentId_ == null || value != "") {
              OcrLineFiPaymentId = value;
            }
            break;
          }
          case 146: {
            string value = _single_ocrLineNlPaymentId_codec.Read(input);
            if (ocrLineNlPaymentId_ == null || value != "") {
              OcrLineNlPaymentId = value;
            }
            break;
          }
          case 154: {
            string value = _single_supplierCorporateId_codec.Read(input);
            if (supplierCorporateId_ == null || value != "") {
              SupplierCorporateId = value;
            }
            break;
          }
          case 162: {
            string value = _single_supplierCountryCode_codec.Read(input);
            if (supplierCountryCode_ == null || value != "") {
              SupplierCountryCode = value;
            }
            break;
          }
          case 170: {
            string value = _single_invoiceNumber_codec.Read(input);
            if (invoiceNumber_ == null || value != "") {
              InvoiceNumber = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateDocumentRequest : pb::IMessage<CreateDocumentRequest> {
    private static readonly pb::MessageParser<CreateDocumentRequest> _parser = new pb::MessageParser<CreateDocumentRequest>(() => new CreateDocumentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateDocumentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDocumentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDocumentRequest(CreateDocumentRequest other) : this() {
      document_ = other.document_ != null ? other.document_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDocumentRequest Clone() {
      return new CreateDocumentRequest(this);
    }

    /// <summary>Field number for the "document" field.</summary>
    public const int DocumentFieldNumber = 1;
    private global::Ssn.Dataservice.V1Alpha1.Document document_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ssn.Dataservice.V1Alpha1.Document Document {
      get { return document_; }
      set {
        document_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateDocumentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateDocumentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Document, other.Document)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (document_ != null) hash ^= Document.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (document_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Document);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (document_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Document);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateDocumentRequest other) {
      if (other == null) {
        return;
      }
      if (other.document_ != null) {
        if (document_ == null) {
          document_ = new global::Ssn.Dataservice.V1Alpha1.Document();
        }
        Document.MergeFrom(other.Document);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (document_ == null) {
              document_ = new global::Ssn.Dataservice.V1Alpha1.Document();
            }
            input.ReadMessage(document_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateDocumentResponse : pb::IMessage<CreateDocumentResponse> {
    private static readonly pb::MessageParser<CreateDocumentResponse> _parser = new pb::MessageParser<CreateDocumentResponse>(() => new CreateDocumentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateDocumentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDocumentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDocumentResponse(CreateDocumentResponse other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDocumentResponse Clone() {
      return new CreateDocumentResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateDocumentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateDocumentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateDocumentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReadDocumentRequest : pb::IMessage<ReadDocumentRequest> {
    private static readonly pb::MessageParser<ReadDocumentRequest> _parser = new pb::MessageParser<ReadDocumentRequest>(() => new ReadDocumentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadDocumentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDocumentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDocumentRequest(ReadDocumentRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDocumentRequest Clone() {
      return new ReadDocumentRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadDocumentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadDocumentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadDocumentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReadDocumentResponse : pb::IMessage<ReadDocumentResponse> {
    private static readonly pb::MessageParser<ReadDocumentResponse> _parser = new pb::MessageParser<ReadDocumentResponse>(() => new ReadDocumentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadDocumentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDocumentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDocumentResponse(ReadDocumentResponse other) : this() {
      document_ = other.document_ != null ? other.document_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadDocumentResponse Clone() {
      return new ReadDocumentResponse(this);
    }

    /// <summary>Field number for the "document" field.</summary>
    public const int DocumentFieldNumber = 1;
    private global::Ssn.Dataservice.V1Alpha1.Document document_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ssn.Dataservice.V1Alpha1.Document Document {
      get { return document_; }
      set {
        document_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadDocumentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadDocumentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Document, other.Document)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (document_ != null) hash ^= Document.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (document_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Document);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (document_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Document);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadDocumentResponse other) {
      if (other == null) {
        return;
      }
      if (other.document_ != null) {
        if (document_ == null) {
          document_ = new global::Ssn.Dataservice.V1Alpha1.Document();
        }
        Document.MergeFrom(other.Document);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (document_ == null) {
              document_ = new global::Ssn.Dataservice.V1Alpha1.Document();
            }
            input.ReadMessage(document_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrepareFeedbackRequest : pb::IMessage<PrepareFeedbackRequest> {
    private static readonly pb::MessageParser<PrepareFeedbackRequest> _parser = new pb::MessageParser<PrepareFeedbackRequest>(() => new PrepareFeedbackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrepareFeedbackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareFeedbackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareFeedbackRequest(PrepareFeedbackRequest other) : this() {
      id_ = other.id_;
      ta_ = other.ta_ != null ? other.ta_.Clone() : null;
      documentBytes_ = other.documentBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareFeedbackRequest Clone() {
      return new PrepareFeedbackRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ta" field.</summary>
    public const int TaFieldNumber = 2;
    private global::Ssn.Type.TextAnnotation ta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ssn.Type.TextAnnotation Ta {
      get { return ta_; }
      set {
        ta_ = value;
      }
    }

    /// <summary>Field number for the "document_bytes" field.</summary>
    public const int DocumentBytesFieldNumber = 3;
    private pb::ByteString documentBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DocumentBytes {
      get { return documentBytes_; }
      set {
        documentBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrepareFeedbackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrepareFeedbackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Ta, other.Ta)) return false;
      if (DocumentBytes != other.DocumentBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ta_ != null) hash ^= Ta.GetHashCode();
      if (DocumentBytes.Length != 0) hash ^= DocumentBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ta_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Ta);
      }
      if (DocumentBytes.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(DocumentBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ta);
      }
      if (DocumentBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DocumentBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrepareFeedbackRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ta_ != null) {
        if (ta_ == null) {
          ta_ = new global::Ssn.Type.TextAnnotation();
        }
        Ta.MergeFrom(other.Ta);
      }
      if (other.DocumentBytes.Length != 0) {
        DocumentBytes = other.DocumentBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (ta_ == null) {
              ta_ = new global::Ssn.Type.TextAnnotation();
            }
            input.ReadMessage(ta_);
            break;
          }
          case 26: {
            DocumentBytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeedbackRequest : pb::IMessage<FeedbackRequest> {
    private static readonly pb::MessageParser<FeedbackRequest> _parser = new pb::MessageParser<FeedbackRequest>(() => new FeedbackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedbackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackRequest(FeedbackRequest other) : this() {
      id_ = other.id_;
      trueValues_ = other.trueValues_ != null ? other.trueValues_.Clone() : null;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackRequest Clone() {
      return new FeedbackRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "true_values" field.</summary>
    public const int TrueValuesFieldNumber = 2;
    private global::Ssn.Dataservice.V1Alpha1.TrueValues trueValues_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ssn.Dataservice.V1Alpha1.TrueValues TrueValues {
      get { return trueValues_; }
      set {
        trueValues_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedbackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedbackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(TrueValues, other.TrueValues)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (trueValues_ != null) hash ^= TrueValues.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (trueValues_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TrueValues);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (trueValues_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrueValues);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedbackRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.trueValues_ != null) {
        if (trueValues_ == null) {
          trueValues_ = new global::Ssn.Dataservice.V1Alpha1.TrueValues();
        }
        TrueValues.MergeFrom(other.TrueValues);
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (trueValues_ == null) {
              trueValues_ = new global::Ssn.Dataservice.V1Alpha1.TrueValues();
            }
            input.ReadMessage(trueValues_);
            break;
          }
          case 26: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRequest : pb::IMessage<DeleteRequest> {
    private static readonly pb::MessageParser<DeleteRequest> _parser = new pb::MessageParser<DeleteRequest>(() => new DeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest(DeleteRequest other) : this() {
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest Clone() {
      return new DeleteRequest(this);
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRequest other) {
      if (other == null) {
        return;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
