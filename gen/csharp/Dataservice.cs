// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: asgt/dataservice/v1alpha1/dataservice.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Asgt.Dataservice.V1Alpha1 {

  /// <summary>Holder for reflection information generated from asgt/dataservice/v1alpha1/dataservice.proto</summary>
  public static partial class DataserviceReflection {

    #region Descriptor
    /// <summary>File descriptor for asgt/dataservice/v1alpha1/dataservice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataserviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cithc2d0L2RhdGFzZXJ2aWNlL3YxYWxwaGExL2RhdGFzZXJ2aWNlLnByb3Rv",
            "Ehlhc2d0LmRhdGFzZXJ2aWNlLnYxYWxwaGExGiFhc2d0L2plc3Rlci92MWFs",
            "cGhhMS9qZXN0ZXIucHJvdG8aHGdlbl9icV9zY2hlbWEvYnFfZmllbGQucHJv",
            "dG8aHGdlbl9icV9zY2hlbWEvYnFfdGFibGUucHJvdG8aHGdvb2dsZS9hcGkv",
            "YW5ub3RhdGlvbnMucHJvdG8aG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90",
            "byIqCglEYXRhVHVwbGUSDgoGdGFyZ2V0GAEgASgJEg0KBXZhbHVlGAIgASgJ",
            "IjUKDlByZWRpY3RlZFR1cGxlEg4KBnRhcmdldBgBIAEoCRITCgtwcmVkaWN0",
            "aW9ucxgCIAMoCSKTAgoOQWRkRGF0YVJlcXVlc3QSCgoCaWQYASABKAkSDwoH",
            "ZGF0YXNldBgCIAEoCRIMCgR0YWdzGAMgAygJEjkKC3RydWVfdmFsdWVzGAQg",
            "AygLMiQuYXNndC5kYXRhc2VydmljZS52MWFscGhhMS5EYXRhVHVwbGUSUwoQ",
            "cmV0ZW50aW9uX3BvbGljeRgFIAEoCzI5LmFzZ3QuZGF0YXNlcnZpY2UudjFh",
            "bHBoYTEuQWRkRGF0YVJlcXVlc3QuUmV0ZW50aW9uUG9saWN5GkYKD1JldGVu",
            "dGlvblBvbGljeRISCghtYXhfZGF5cxgBIAEoBUgAEhUKC21heF9yZWNvcmRz",
            "GAIgASgFSABCCAoGcG9saWN5IkIKDURlbGV0ZVJlcXVlc3QSEgoKbW9kZWxf",
            "dHlwZRgBIAEoCRIPCgdkYXRhc2V0GAIgASgJEgwKBHRhZ3MYAyADKAki2QMK",
            "E1NjYW5uZWRJbnZvaWNlRW50cnkSOwoCaWQYASABKAlCL+o/JyIlRmVlZGJh",
            "Y2sgSUQsIHNhbWUgYXMgRW52b3kgcmVxdWVzdCBpZOo/AggBEhcKCGNvbnN1",
            "bWVyGAIgASgJQgXqPwIIARIWCgdkYXRhc2V0GAMgASgJQgXqPwIIARJUCgR0",
            "YWdzGAQgAygJQkbqP0MiQVRhZ3MgZGVmaW5lZCBieSBjb25zdW1lciwgZW5y",
            "aWNoZWQgYnkgc2VydmljZSBpZiB2YWxldGtleSBpcyB1c2VkEj8KBWlucHV0",
            "GAUgASgLMjAuYXNndC5qZXN0ZXIudjFhbHBoYTEuU2Nhbm5lZEludm9pY2VS",
            "ZXF1ZXN0LkRhdGESOQoLdHJ1ZV92YWx1ZXMYBiADKAsyJC5hc2d0LmRhdGFz",
            "ZXJ2aWNlLnYxYWxwaGExLkRhdGFUdXBsZRI+CgtwcmVkX3ZhbHVlcxgHIAMo",
            "CzIpLmFzZ3QuZGF0YXNlcnZpY2UudjFhbHBoYTEuUHJlZGljdGVkVHVwbGUS",
            "JwoNZmVlZGJhY2tfdGltZRgIIAEoBEIQ6j8NCAESCVRJTUVTVEFNUDoZ6j8W",
            "ChRzY2FubmVkX2ludm9pY2VfZGF0YSLJAQokUHJlcGFyZVNjYW5uZWRJbnZv",
            "aWNlRmVlZGJhY2tSZXF1ZXN0EgoKAmlkGAEgASgJEg8KB2RhdGFzZXQYAiAB",
            "KAkSPwoFaW5wdXQYAyABKAsyMC5hc2d0Lmplc3Rlci52MWFscGhhMS5TY2Fu",
            "bmVkSW52b2ljZVJlcXVlc3QuRGF0YRI1CgtwcmVkaWN0aW9ucxgEIAMoCzIg",
            "LmFzZ3QuamVzdGVyLnYxYWxwaGExLlByZWRpY3Rpb24SDAoEdGFncxgFIAMo",
            "CSLvAwoaRWxlY3Ryb25pY0ludm9pY2VMaW5lRW50cnkSOwoCaWQYASABKAlC",
            "L+o/JyIlRmVlZGJhY2sgSUQsIHNhbWUgYXMgRW52b3kgcmVxdWVzdCBpZOo/",
            "AggBEhcKCGNvbnN1bWVyGAIgASgJQgXqPwIIARIWCgdkYXRhc2V0GAMgASgJ",
            "QgXqPwIIARJUCgR0YWdzGAQgAygJQkbqP0MiQVRhZ3MgZGVmaW5lZCBieSBj",
            "b25zdW1lciwgZW5yaWNoZWQgYnkgc2VydmljZSBpZiB2YWxldGtleSBpcyB1",
            "c2VkEkYKBWlucHV0GAUgASgLMjcuYXNndC5qZXN0ZXIudjFhbHBoYTEuRWxl",
            "Y3Ryb25pY0ludm9pY2VMaW5lUmVxdWVzdC5EYXRhEjkKC3RydWVfdmFsdWVz",
            "GAYgAygLMiQuYXNndC5kYXRhc2VydmljZS52MWFscGhhMS5EYXRhVHVwbGUS",
            "PgoLcHJlZF92YWx1ZXMYByADKAsyKS5hc2d0LmRhdGFzZXJ2aWNlLnYxYWxw",
            "aGExLlByZWRpY3RlZFR1cGxlEicKDWZlZWRiYWNrX3RpbWUYCCABKARCEOo/",
            "DQgBEglUSU1FU1RBTVA6Ieo/HgocZWxlY3Ryb25pY19pbnZvaWNlX2xpbmVf",
            "ZGF0YSLXAQorUHJlcGFyZUVsZWN0cm9uaWNJbnZvaWNlTGluZUZlZWRiYWNr",
            "UmVxdWVzdBIKCgJpZBgBIAEoCRIPCgdkYXRhc2V0GAIgASgJEkYKBWlucHV0",
            "GAMgASgLMjcuYXNndC5qZXN0ZXIudjFhbHBoYTEuRWxlY3Ryb25pY0ludm9p",
            "Y2VMaW5lUmVxdWVzdC5EYXRhEjUKC3ByZWRpY3Rpb25zGAQgAygLMiAuYXNn",
            "dC5qZXN0ZXIudjFhbHBoYTEuUHJlZGljdGlvbhIMCgR0YWdzGAUgAygJIroD",
            "CglCYW5rRW50cnkSOwoCaWQYASABKAlCL+o/JyIlRmVlZGJhY2sgSUQsIHNh",
            "bWUgYXMgRW52b3kgcmVxdWVzdCBpZOo/AggBEhcKCGNvbnN1bWVyGAIgASgJ",
            "QgXqPwIIARIWCgdkYXRhc2V0GAMgASgJQgXqPwIIARJUCgR0YWdzGAQgAygJ",
            "QkbqP0MiQVRhZ3MgZGVmaW5lZCBieSBjb25zdW1lciwgZW5yaWNoZWQgYnkg",
            "c2VydmljZSBpZiB2YWxldGtleSBpcyB1c2VkEjUKBWlucHV0GAUgASgLMiYu",
            "YXNndC5qZXN0ZXIudjFhbHBoYTEuQmFua1JlcXVlc3QuRGF0YRI5Cgt0cnVl",
            "X3ZhbHVlcxgGIAMoCzIkLmFzZ3QuZGF0YXNlcnZpY2UudjFhbHBoYTEuRGF0",
            "YVR1cGxlEj4KC3ByZWRfdmFsdWVzGAcgAygLMikuYXNndC5kYXRhc2Vydmlj",
            "ZS52MWFscGhhMS5QcmVkaWN0ZWRUdXBsZRInCg1mZWVkYmFja190aW1lGAgg",
            "ASgEQhDqPw0IARIJVElNRVNUQU1QOg7qPwsKCWJhbmtfZGF0YSK1AQoaUHJl",
            "cGFyZUJhbmtGZWVkYmFja1JlcXVlc3QSCgoCaWQYASABKAkSDwoHZGF0YXNl",
            "dBgCIAEoCRI1CgVpbnB1dBgDIAEoCzImLmFzZ3QuamVzdGVyLnYxYWxwaGEx",
            "LkJhbmtSZXF1ZXN0LkRhdGESNQoLcHJlZGljdGlvbnMYBCADKAsyIC5hc2d0",
            "Lmplc3Rlci52MWFscGhhMS5QcmVkaWN0aW9uEgwKBHRhZ3MYBSADKAky8gYK",
            "C0RhdGFTZXJ2aWNlEngKHVByZXBhcmVTY2FubmVkSW52b2ljZUZlZWRiYWNr",
            "Ej8uYXNndC5kYXRhc2VydmljZS52MWFscGhhMS5QcmVwYXJlU2Nhbm5lZElu",
            "dm9pY2VGZWVkYmFja1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkS",
            "hAEKFVNjYW5uZWRJbnZvaWNlQWRkRGF0YRIpLmFzZ3QuZGF0YXNlcnZpY2Uu",
            "djFhbHBoYTEuQWRkRGF0YVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkiKILT5JMCIiIdL3YxYWxwaGExL2RhdGE6c2Nhbm5lZGludm9pY2U6ASoS",
            "fgojUHJlcGFyZUVsZWN0cm9uaWNJbnZvaWNMaW5lRmVlZGJhY2sSPy5hc2d0",
            "LmRhdGFzZXJ2aWNlLnYxYWxwaGExLlByZXBhcmVTY2FubmVkSW52b2ljZUZl",
            "ZWRiYWNrUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRKRAQobRWxl",
            "Y3Ryb25pY0ludm9pY0xpbmVBZGREYXRhEikuYXNndC5kYXRhc2VydmljZS52",
            "MWFscGhhMS5BZGREYXRhUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0",
            "eSIvgtPkkwIpIiQvdjFhbHBoYTEvZGF0YTplbGVjdHJvbmljaW52b2ljZWxp",
            "bmU6ASoSbgoTUHJlcGFyZUJhbmtGZWVkYmFjaxI/LmFzZ3QuZGF0YXNlcnZp",
            "Y2UudjFhbHBoYTEuUHJlcGFyZVNjYW5uZWRJbnZvaWNlRmVlZGJhY2tSZXF1",
            "ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EnAKC0JhbmtBZGREYXRhEiku",
            "YXNndC5kYXRhc2VydmljZS52MWFscGhhMS5BZGREYXRhUmVxdWVzdBoWLmdv",
            "b2dsZS5wcm90b2J1Zi5FbXB0eSIegtPkkwIYIhMvdjFhbHBoYTEvZGF0YTpi",
            "YW5rOgEqEmwKBkRlbGV0ZRIoLmFzZ3QuZGF0YXNlcnZpY2UudjFhbHBoYTEu",
            "RGVsZXRlUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIggtPkkwIa",
            "IhUvdjFhbHBoYTEvZGF0YTpkZWxldGU6ASpCDVoLZGF0YXNlcnZpY2ViBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor, global::GenBqSchema.BqFieldReflection.Descriptor, global::GenBqSchema.BqTableReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.DataTuple), global::Asgt.Dataservice.V1Alpha1.DataTuple.Parser, new[]{ "Target", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.PredictedTuple), global::Asgt.Dataservice.V1Alpha1.PredictedTuple.Parser, new[]{ "Target", "Predictions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.AddDataRequest), global::Asgt.Dataservice.V1Alpha1.AddDataRequest.Parser, new[]{ "Id", "Dataset", "Tags", "TrueValues", "RetentionPolicy" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.AddDataRequest.Types.RetentionPolicy), global::Asgt.Dataservice.V1Alpha1.AddDataRequest.Types.RetentionPolicy.Parser, new[]{ "MaxDays", "MaxRecords" }, new[]{ "Policy" }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.DeleteRequest), global::Asgt.Dataservice.V1Alpha1.DeleteRequest.Parser, new[]{ "ModelType", "Dataset", "Tags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntry), global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntry.Parser, new[]{ "Id", "Consumer", "Dataset", "Tags", "Input", "TrueValues", "PredValues", "FeedbackTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.PrepareScannedInvoiceFeedbackRequest), global::Asgt.Dataservice.V1Alpha1.PrepareScannedInvoiceFeedbackRequest.Parser, new[]{ "Id", "Dataset", "Input", "Predictions", "Tags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntry), global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntry.Parser, new[]{ "Id", "Consumer", "Dataset", "Tags", "Input", "TrueValues", "PredValues", "FeedbackTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.PrepareElectronicInvoiceLineFeedbackRequest), global::Asgt.Dataservice.V1Alpha1.PrepareElectronicInvoiceLineFeedbackRequest.Parser, new[]{ "Id", "Dataset", "Input", "Predictions", "Tags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.BankEntry), global::Asgt.Dataservice.V1Alpha1.BankEntry.Parser, new[]{ "Id", "Consumer", "Dataset", "Tags", "Input", "TrueValues", "PredValues", "FeedbackTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.PrepareBankFeedbackRequest), global::Asgt.Dataservice.V1Alpha1.PrepareBankFeedbackRequest.Parser, new[]{ "Id", "Dataset", "Input", "Predictions", "Tags" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Common Data types
  /// </summary>
  public sealed partial class DataTuple : pb::IMessage<DataTuple> {
    private static readonly pb::MessageParser<DataTuple> _parser = new pb::MessageParser<DataTuple>(() => new DataTuple());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataTuple> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataTuple() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataTuple(DataTuple other) : this() {
      target_ = other.target_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataTuple Clone() {
      return new DataTuple(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private string target_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataTuple);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataTuple other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Target != other.Target) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Target.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Target);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataTuple other) {
      if (other == null) {
        return;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Target = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PredictedTuple : pb::IMessage<PredictedTuple> {
    private static readonly pb::MessageParser<PredictedTuple> _parser = new pb::MessageParser<PredictedTuple>(() => new PredictedTuple());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictedTuple> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictedTuple() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictedTuple(PredictedTuple other) : this() {
      target_ = other.target_;
      predictions_ = other.predictions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictedTuple Clone() {
      return new PredictedTuple(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private string target_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "predictions" field.</summary>
    public const int PredictionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_predictions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> predictions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Predictions {
      get { return predictions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictedTuple);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictedTuple other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Target != other.Target) return false;
      if(!predictions_.Equals(other.predictions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      hash ^= predictions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Target.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Target);
      }
      predictions_.WriteTo(output, _repeated_predictions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      size += predictions_.CalculateSize(_repeated_predictions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictedTuple other) {
      if (other == null) {
        return;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      predictions_.Add(other.predictions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Target = input.ReadString();
            break;
          }
          case 18: {
            predictions_.AddEntriesFrom(input, _repeated_predictions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddDataRequest : pb::IMessage<AddDataRequest> {
    private static readonly pb::MessageParser<AddDataRequest> _parser = new pb::MessageParser<AddDataRequest>(() => new AddDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDataRequest(AddDataRequest other) : this() {
      id_ = other.id_;
      dataset_ = other.dataset_;
      tags_ = other.tags_.Clone();
      trueValues_ = other.trueValues_.Clone();
      retentionPolicy_ = other.retentionPolicy_ != null ? other.retentionPolicy_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddDataRequest Clone() {
      return new AddDataRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 2;
    private string dataset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "true_values" field.</summary>
    public const int TrueValuesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.DataTuple> _repeated_trueValues_codec
        = pb::FieldCodec.ForMessage(34, global::Asgt.Dataservice.V1Alpha1.DataTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> trueValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> TrueValues {
      get { return trueValues_; }
    }

    /// <summary>Field number for the "retention_policy" field.</summary>
    public const int RetentionPolicyFieldNumber = 5;
    private global::Asgt.Dataservice.V1Alpha1.AddDataRequest.Types.RetentionPolicy retentionPolicy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Dataservice.V1Alpha1.AddDataRequest.Types.RetentionPolicy RetentionPolicy {
      get { return retentionPolicy_; }
      set {
        retentionPolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Dataset != other.Dataset) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if(!trueValues_.Equals(other.trueValues_)) return false;
      if (!object.Equals(RetentionPolicy, other.RetentionPolicy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= trueValues_.GetHashCode();
      if (retentionPolicy_ != null) hash ^= RetentionPolicy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Dataset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Dataset);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      trueValues_.WriteTo(output, _repeated_trueValues_codec);
      if (retentionPolicy_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RetentionPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += trueValues_.CalculateSize(_repeated_trueValues_codec);
      if (retentionPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetentionPolicy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      tags_.Add(other.tags_);
      trueValues_.Add(other.trueValues_);
      if (other.retentionPolicy_ != null) {
        if (retentionPolicy_ == null) {
          retentionPolicy_ = new global::Asgt.Dataservice.V1Alpha1.AddDataRequest.Types.RetentionPolicy();
        }
        RetentionPolicy.MergeFrom(other.RetentionPolicy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Dataset = input.ReadString();
            break;
          }
          case 26: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 34: {
            trueValues_.AddEntriesFrom(input, _repeated_trueValues_codec);
            break;
          }
          case 42: {
            if (retentionPolicy_ == null) {
              retentionPolicy_ = new global::Asgt.Dataservice.V1Alpha1.AddDataRequest.Types.RetentionPolicy();
            }
            input.ReadMessage(retentionPolicy_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AddDataRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class RetentionPolicy : pb::IMessage<RetentionPolicy> {
        private static readonly pb::MessageParser<RetentionPolicy> _parser = new pb::MessageParser<RetentionPolicy>(() => new RetentionPolicy());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RetentionPolicy> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Asgt.Dataservice.V1Alpha1.AddDataRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RetentionPolicy() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RetentionPolicy(RetentionPolicy other) : this() {
          switch (other.PolicyCase) {
            case PolicyOneofCase.MaxDays:
              MaxDays = other.MaxDays;
              break;
            case PolicyOneofCase.MaxRecords:
              MaxRecords = other.MaxRecords;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RetentionPolicy Clone() {
          return new RetentionPolicy(this);
        }

        /// <summary>Field number for the "max_days" field.</summary>
        public const int MaxDaysFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MaxDays {
          get { return policyCase_ == PolicyOneofCase.MaxDays ? (int) policy_ : 0; }
          set {
            policy_ = value;
            policyCase_ = PolicyOneofCase.MaxDays;
          }
        }

        /// <summary>Field number for the "max_records" field.</summary>
        public const int MaxRecordsFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MaxRecords {
          get { return policyCase_ == PolicyOneofCase.MaxRecords ? (int) policy_ : 0; }
          set {
            policy_ = value;
            policyCase_ = PolicyOneofCase.MaxRecords;
          }
        }

        private object policy_;
        /// <summary>Enum of possible cases for the "policy" oneof.</summary>
        public enum PolicyOneofCase {
          None = 0,
          MaxDays = 1,
          MaxRecords = 2,
        }
        private PolicyOneofCase policyCase_ = PolicyOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PolicyOneofCase PolicyCase {
          get { return policyCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPolicy() {
          policyCase_ = PolicyOneofCase.None;
          policy_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RetentionPolicy);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RetentionPolicy other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MaxDays != other.MaxDays) return false;
          if (MaxRecords != other.MaxRecords) return false;
          if (PolicyCase != other.PolicyCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (policyCase_ == PolicyOneofCase.MaxDays) hash ^= MaxDays.GetHashCode();
          if (policyCase_ == PolicyOneofCase.MaxRecords) hash ^= MaxRecords.GetHashCode();
          hash ^= (int) policyCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (policyCase_ == PolicyOneofCase.MaxDays) {
            output.WriteRawTag(8);
            output.WriteInt32(MaxDays);
          }
          if (policyCase_ == PolicyOneofCase.MaxRecords) {
            output.WriteRawTag(16);
            output.WriteInt32(MaxRecords);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (policyCase_ == PolicyOneofCase.MaxDays) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxDays);
          }
          if (policyCase_ == PolicyOneofCase.MaxRecords) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxRecords);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RetentionPolicy other) {
          if (other == null) {
            return;
          }
          switch (other.PolicyCase) {
            case PolicyOneofCase.MaxDays:
              MaxDays = other.MaxDays;
              break;
            case PolicyOneofCase.MaxRecords:
              MaxRecords = other.MaxRecords;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MaxDays = input.ReadInt32();
                break;
              }
              case 16: {
                MaxRecords = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DeleteRequest : pb::IMessage<DeleteRequest> {
    private static readonly pb::MessageParser<DeleteRequest> _parser = new pb::MessageParser<DeleteRequest>(() => new DeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest(DeleteRequest other) : this() {
      modelType_ = other.modelType_;
      dataset_ = other.dataset_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest Clone() {
      return new DeleteRequest(this);
    }

    /// <summary>Field number for the "model_type" field.</summary>
    public const int ModelTypeFieldNumber = 1;
    private string modelType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelType {
      get { return modelType_; }
      set {
        modelType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 2;
    private string dataset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelType != other.ModelType) return false;
      if (Dataset != other.Dataset) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelType.Length != 0) hash ^= ModelType.GetHashCode();
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ModelType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ModelType);
      }
      if (Dataset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Dataset);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModelType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelType);
      }
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.ModelType.Length != 0) {
        ModelType = other.ModelType;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ModelType = input.ReadString();
            break;
          }
          case 18: {
            Dataset = input.ReadString();
            break;
          }
          case 26: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Scanned Invoice
  /// </summary>
  public sealed partial class ScannedInvoiceEntry : pb::IMessage<ScannedInvoiceEntry> {
    private static readonly pb::MessageParser<ScannedInvoiceEntry> _parser = new pb::MessageParser<ScannedInvoiceEntry>(() => new ScannedInvoiceEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScannedInvoiceEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceEntry(ScannedInvoiceEntry other) : this() {
      id_ = other.id_;
      consumer_ = other.consumer_;
      dataset_ = other.dataset_;
      tags_ = other.tags_.Clone();
      input_ = other.input_ != null ? other.input_.Clone() : null;
      trueValues_ = other.trueValues_.Clone();
      predValues_ = other.predValues_.Clone();
      feedbackTime_ = other.feedbackTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceEntry Clone() {
      return new ScannedInvoiceEntry(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "consumer" field.</summary>
    public const int ConsumerFieldNumber = 2;
    private string consumer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Consumer {
      get { return consumer_; }
      set {
        consumer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 3;
    private string dataset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 5;
    private global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "true_values" field.</summary>
    public const int TrueValuesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.DataTuple> _repeated_trueValues_codec
        = pb::FieldCodec.ForMessage(50, global::Asgt.Dataservice.V1Alpha1.DataTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> trueValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> TrueValues {
      get { return trueValues_; }
    }

    /// <summary>Field number for the "pred_values" field.</summary>
    public const int PredValuesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> _repeated_predValues_codec
        = pb::FieldCodec.ForMessage(58, global::Asgt.Dataservice.V1Alpha1.PredictedTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> predValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> PredValues {
      get { return predValues_; }
    }

    /// <summary>Field number for the "feedback_time" field.</summary>
    public const int FeedbackTimeFieldNumber = 8;
    private ulong feedbackTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FeedbackTime {
      get { return feedbackTime_; }
      set {
        feedbackTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScannedInvoiceEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScannedInvoiceEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Consumer != other.Consumer) return false;
      if (Dataset != other.Dataset) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if(!trueValues_.Equals(other.trueValues_)) return false;
      if(!predValues_.Equals(other.predValues_)) return false;
      if (FeedbackTime != other.FeedbackTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Consumer.Length != 0) hash ^= Consumer.GetHashCode();
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= trueValues_.GetHashCode();
      hash ^= predValues_.GetHashCode();
      if (FeedbackTime != 0UL) hash ^= FeedbackTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Consumer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Consumer);
      }
      if (Dataset.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Dataset);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (input_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Input);
      }
      trueValues_.WriteTo(output, _repeated_trueValues_codec);
      predValues_.WriteTo(output, _repeated_predValues_codec);
      if (FeedbackTime != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(FeedbackTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Consumer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Consumer);
      }
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += trueValues_.CalculateSize(_repeated_trueValues_codec);
      size += predValues_.CalculateSize(_repeated_predValues_codec);
      if (FeedbackTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FeedbackTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScannedInvoiceEntry other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Consumer.Length != 0) {
        Consumer = other.Consumer;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      tags_.Add(other.tags_);
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data();
        }
        Input.MergeFrom(other.Input);
      }
      trueValues_.Add(other.trueValues_);
      predValues_.Add(other.predValues_);
      if (other.FeedbackTime != 0UL) {
        FeedbackTime = other.FeedbackTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Consumer = input.ReadString();
            break;
          }
          case 26: {
            Dataset = input.ReadString();
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 42: {
            if (input_ == null) {
              input_ = new global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data();
            }
            input.ReadMessage(input_);
            break;
          }
          case 50: {
            trueValues_.AddEntriesFrom(input, _repeated_trueValues_codec);
            break;
          }
          case 58: {
            predValues_.AddEntriesFrom(input, _repeated_predValues_codec);
            break;
          }
          case 64: {
            FeedbackTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrepareScannedInvoiceFeedbackRequest : pb::IMessage<PrepareScannedInvoiceFeedbackRequest> {
    private static readonly pb::MessageParser<PrepareScannedInvoiceFeedbackRequest> _parser = new pb::MessageParser<PrepareScannedInvoiceFeedbackRequest>(() => new PrepareScannedInvoiceFeedbackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrepareScannedInvoiceFeedbackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareScannedInvoiceFeedbackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareScannedInvoiceFeedbackRequest(PrepareScannedInvoiceFeedbackRequest other) : this() {
      id_ = other.id_;
      dataset_ = other.dataset_;
      input_ = other.input_ != null ? other.input_.Clone() : null;
      predictions_ = other.predictions_.Clone();
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareScannedInvoiceFeedbackRequest Clone() {
      return new PrepareScannedInvoiceFeedbackRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 2;
    private string dataset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 3;
    private global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "predictions" field.</summary>
    public const int PredictionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Asgt.Jester.V1Alpha1.Prediction> _repeated_predictions_codec
        = pb::FieldCodec.ForMessage(34, global::Asgt.Jester.V1Alpha1.Prediction.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction> predictions_ = new pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction> Predictions {
      get { return predictions_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrepareScannedInvoiceFeedbackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrepareScannedInvoiceFeedbackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Dataset != other.Dataset) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if(!predictions_.Equals(other.predictions_)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= predictions_.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Dataset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Dataset);
      }
      if (input_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Input);
      }
      predictions_.WriteTo(output, _repeated_predictions_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += predictions_.CalculateSize(_repeated_predictions_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrepareScannedInvoiceFeedbackRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data();
        }
        Input.MergeFrom(other.Input);
      }
      predictions_.Add(other.predictions_);
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Dataset = input.ReadString();
            break;
          }
          case 26: {
            if (input_ == null) {
              input_ = new global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data();
            }
            input.ReadMessage(input_);
            break;
          }
          case 34: {
            predictions_.AddEntriesFrom(input, _repeated_predictions_codec);
            break;
          }
          case 42: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Electronic Invoice Line
  /// </summary>
  public sealed partial class ElectronicInvoiceLineEntry : pb::IMessage<ElectronicInvoiceLineEntry> {
    private static readonly pb::MessageParser<ElectronicInvoiceLineEntry> _parser = new pb::MessageParser<ElectronicInvoiceLineEntry>(() => new ElectronicInvoiceLineEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectronicInvoiceLineEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineEntry(ElectronicInvoiceLineEntry other) : this() {
      id_ = other.id_;
      consumer_ = other.consumer_;
      dataset_ = other.dataset_;
      tags_ = other.tags_.Clone();
      input_ = other.input_ != null ? other.input_.Clone() : null;
      trueValues_ = other.trueValues_.Clone();
      predValues_ = other.predValues_.Clone();
      feedbackTime_ = other.feedbackTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineEntry Clone() {
      return new ElectronicInvoiceLineEntry(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "consumer" field.</summary>
    public const int ConsumerFieldNumber = 2;
    private string consumer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Consumer {
      get { return consumer_; }
      set {
        consumer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 3;
    private string dataset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 5;
    private global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "true_values" field.</summary>
    public const int TrueValuesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.DataTuple> _repeated_trueValues_codec
        = pb::FieldCodec.ForMessage(50, global::Asgt.Dataservice.V1Alpha1.DataTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> trueValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> TrueValues {
      get { return trueValues_; }
    }

    /// <summary>Field number for the "pred_values" field.</summary>
    public const int PredValuesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> _repeated_predValues_codec
        = pb::FieldCodec.ForMessage(58, global::Asgt.Dataservice.V1Alpha1.PredictedTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> predValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> PredValues {
      get { return predValues_; }
    }

    /// <summary>Field number for the "feedback_time" field.</summary>
    public const int FeedbackTimeFieldNumber = 8;
    private ulong feedbackTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FeedbackTime {
      get { return feedbackTime_; }
      set {
        feedbackTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectronicInvoiceLineEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectronicInvoiceLineEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Consumer != other.Consumer) return false;
      if (Dataset != other.Dataset) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if(!trueValues_.Equals(other.trueValues_)) return false;
      if(!predValues_.Equals(other.predValues_)) return false;
      if (FeedbackTime != other.FeedbackTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Consumer.Length != 0) hash ^= Consumer.GetHashCode();
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= trueValues_.GetHashCode();
      hash ^= predValues_.GetHashCode();
      if (FeedbackTime != 0UL) hash ^= FeedbackTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Consumer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Consumer);
      }
      if (Dataset.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Dataset);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (input_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Input);
      }
      trueValues_.WriteTo(output, _repeated_trueValues_codec);
      predValues_.WriteTo(output, _repeated_predValues_codec);
      if (FeedbackTime != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(FeedbackTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Consumer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Consumer);
      }
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += trueValues_.CalculateSize(_repeated_trueValues_codec);
      size += predValues_.CalculateSize(_repeated_predValues_codec);
      if (FeedbackTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FeedbackTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectronicInvoiceLineEntry other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Consumer.Length != 0) {
        Consumer = other.Consumer;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      tags_.Add(other.tags_);
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
        }
        Input.MergeFrom(other.Input);
      }
      trueValues_.Add(other.trueValues_);
      predValues_.Add(other.predValues_);
      if (other.FeedbackTime != 0UL) {
        FeedbackTime = other.FeedbackTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Consumer = input.ReadString();
            break;
          }
          case 26: {
            Dataset = input.ReadString();
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 42: {
            if (input_ == null) {
              input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
            }
            input.ReadMessage(input_);
            break;
          }
          case 50: {
            trueValues_.AddEntriesFrom(input, _repeated_trueValues_codec);
            break;
          }
          case 58: {
            predValues_.AddEntriesFrom(input, _repeated_predValues_codec);
            break;
          }
          case 64: {
            FeedbackTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrepareElectronicInvoiceLineFeedbackRequest : pb::IMessage<PrepareElectronicInvoiceLineFeedbackRequest> {
    private static readonly pb::MessageParser<PrepareElectronicInvoiceLineFeedbackRequest> _parser = new pb::MessageParser<PrepareElectronicInvoiceLineFeedbackRequest>(() => new PrepareElectronicInvoiceLineFeedbackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrepareElectronicInvoiceLineFeedbackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareElectronicInvoiceLineFeedbackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareElectronicInvoiceLineFeedbackRequest(PrepareElectronicInvoiceLineFeedbackRequest other) : this() {
      id_ = other.id_;
      dataset_ = other.dataset_;
      input_ = other.input_ != null ? other.input_.Clone() : null;
      predictions_ = other.predictions_.Clone();
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareElectronicInvoiceLineFeedbackRequest Clone() {
      return new PrepareElectronicInvoiceLineFeedbackRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 2;
    private string dataset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 3;
    private global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "predictions" field.</summary>
    public const int PredictionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Asgt.Jester.V1Alpha1.Prediction> _repeated_predictions_codec
        = pb::FieldCodec.ForMessage(34, global::Asgt.Jester.V1Alpha1.Prediction.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction> predictions_ = new pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction> Predictions {
      get { return predictions_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrepareElectronicInvoiceLineFeedbackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrepareElectronicInvoiceLineFeedbackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Dataset != other.Dataset) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if(!predictions_.Equals(other.predictions_)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= predictions_.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Dataset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Dataset);
      }
      if (input_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Input);
      }
      predictions_.WriteTo(output, _repeated_predictions_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += predictions_.CalculateSize(_repeated_predictions_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrepareElectronicInvoiceLineFeedbackRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
        }
        Input.MergeFrom(other.Input);
      }
      predictions_.Add(other.predictions_);
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Dataset = input.ReadString();
            break;
          }
          case 26: {
            if (input_ == null) {
              input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
            }
            input.ReadMessage(input_);
            break;
          }
          case 34: {
            predictions_.AddEntriesFrom(input, _repeated_predictions_codec);
            break;
          }
          case 42: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Bank
  /// </summary>
  public sealed partial class BankEntry : pb::IMessage<BankEntry> {
    private static readonly pb::MessageParser<BankEntry> _parser = new pb::MessageParser<BankEntry>(() => new BankEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BankEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankEntry(BankEntry other) : this() {
      id_ = other.id_;
      consumer_ = other.consumer_;
      dataset_ = other.dataset_;
      tags_ = other.tags_.Clone();
      input_ = other.input_ != null ? other.input_.Clone() : null;
      trueValues_ = other.trueValues_.Clone();
      predValues_ = other.predValues_.Clone();
      feedbackTime_ = other.feedbackTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankEntry Clone() {
      return new BankEntry(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "consumer" field.</summary>
    public const int ConsumerFieldNumber = 2;
    private string consumer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Consumer {
      get { return consumer_; }
      set {
        consumer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 3;
    private string dataset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 5;
    private global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "true_values" field.</summary>
    public const int TrueValuesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.DataTuple> _repeated_trueValues_codec
        = pb::FieldCodec.ForMessage(50, global::Asgt.Dataservice.V1Alpha1.DataTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> trueValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> TrueValues {
      get { return trueValues_; }
    }

    /// <summary>Field number for the "pred_values" field.</summary>
    public const int PredValuesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> _repeated_predValues_codec
        = pb::FieldCodec.ForMessage(58, global::Asgt.Dataservice.V1Alpha1.PredictedTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> predValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> PredValues {
      get { return predValues_; }
    }

    /// <summary>Field number for the "feedback_time" field.</summary>
    public const int FeedbackTimeFieldNumber = 8;
    private ulong feedbackTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FeedbackTime {
      get { return feedbackTime_; }
      set {
        feedbackTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BankEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BankEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Consumer != other.Consumer) return false;
      if (Dataset != other.Dataset) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if(!trueValues_.Equals(other.trueValues_)) return false;
      if(!predValues_.Equals(other.predValues_)) return false;
      if (FeedbackTime != other.FeedbackTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Consumer.Length != 0) hash ^= Consumer.GetHashCode();
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= trueValues_.GetHashCode();
      hash ^= predValues_.GetHashCode();
      if (FeedbackTime != 0UL) hash ^= FeedbackTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Consumer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Consumer);
      }
      if (Dataset.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Dataset);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (input_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Input);
      }
      trueValues_.WriteTo(output, _repeated_trueValues_codec);
      predValues_.WriteTo(output, _repeated_predValues_codec);
      if (FeedbackTime != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(FeedbackTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Consumer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Consumer);
      }
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += trueValues_.CalculateSize(_repeated_trueValues_codec);
      size += predValues_.CalculateSize(_repeated_predValues_codec);
      if (FeedbackTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FeedbackTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BankEntry other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Consumer.Length != 0) {
        Consumer = other.Consumer;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      tags_.Add(other.tags_);
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data();
        }
        Input.MergeFrom(other.Input);
      }
      trueValues_.Add(other.trueValues_);
      predValues_.Add(other.predValues_);
      if (other.FeedbackTime != 0UL) {
        FeedbackTime = other.FeedbackTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Consumer = input.ReadString();
            break;
          }
          case 26: {
            Dataset = input.ReadString();
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 42: {
            if (input_ == null) {
              input_ = new global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data();
            }
            input.ReadMessage(input_);
            break;
          }
          case 50: {
            trueValues_.AddEntriesFrom(input, _repeated_trueValues_codec);
            break;
          }
          case 58: {
            predValues_.AddEntriesFrom(input, _repeated_predValues_codec);
            break;
          }
          case 64: {
            FeedbackTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrepareBankFeedbackRequest : pb::IMessage<PrepareBankFeedbackRequest> {
    private static readonly pb::MessageParser<PrepareBankFeedbackRequest> _parser = new pb::MessageParser<PrepareBankFeedbackRequest>(() => new PrepareBankFeedbackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrepareBankFeedbackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareBankFeedbackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareBankFeedbackRequest(PrepareBankFeedbackRequest other) : this() {
      id_ = other.id_;
      dataset_ = other.dataset_;
      input_ = other.input_ != null ? other.input_.Clone() : null;
      predictions_ = other.predictions_.Clone();
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareBankFeedbackRequest Clone() {
      return new PrepareBankFeedbackRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 2;
    private string dataset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 3;
    private global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "predictions" field.</summary>
    public const int PredictionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Asgt.Jester.V1Alpha1.Prediction> _repeated_predictions_codec
        = pb::FieldCodec.ForMessage(34, global::Asgt.Jester.V1Alpha1.Prediction.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction> predictions_ = new pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction> Predictions {
      get { return predictions_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrepareBankFeedbackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrepareBankFeedbackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Dataset != other.Dataset) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if(!predictions_.Equals(other.predictions_)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= predictions_.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Dataset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Dataset);
      }
      if (input_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Input);
      }
      predictions_.WriteTo(output, _repeated_predictions_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += predictions_.CalculateSize(_repeated_predictions_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrepareBankFeedbackRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data();
        }
        Input.MergeFrom(other.Input);
      }
      predictions_.Add(other.predictions_);
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Dataset = input.ReadString();
            break;
          }
          case 26: {
            if (input_ == null) {
              input_ = new global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data();
            }
            input.ReadMessage(input_);
            break;
          }
          case 34: {
            predictions_.AddEntriesFrom(input, _repeated_predictions_codec);
            break;
          }
          case 42: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
