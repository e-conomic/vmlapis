// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: asgt/dataservice/v1alpha1/dataservice.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Asgt.Dataservice.V1Alpha1 {

  /// <summary>Holder for reflection information generated from asgt/dataservice/v1alpha1/dataservice.proto</summary>
  public static partial class DataserviceReflection {

    #region Descriptor
    /// <summary>File descriptor for asgt/dataservice/v1alpha1/dataservice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataserviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cithc2d0L2RhdGFzZXJ2aWNlL3YxYWxwaGExL2RhdGFzZXJ2aWNlLnByb3Rv",
            "Ehlhc2d0LmRhdGFzZXJ2aWNlLnYxYWxwaGExGiFhc2d0L2plc3Rlci92MWFs",
            "cGhhMS9qZXN0ZXIucHJvdG8aHGdlbl9icV9zY2hlbWEvYnFfZmllbGQucHJv",
            "dG8aHGdlbl9icV9zY2hlbWEvYnFfdGFibGUucHJvdG8aHGdvb2dsZS9hcGkv",
            "YW5ub3RhdGlvbnMucHJvdG8aG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90",
            "bxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvIvcFCgVFbnRyeRI7",
            "CgJpZBgBIAEoCUIv6j8nIiVGZWVkYmFjayBJRCwgc2FtZSBhcyBFbnZveSBy",
            "ZXF1ZXN0IGlk6j8CCAESFwoIY29uc3VtZXIYAiABKAlCBeo/AggBEhMKBHVz",
            "ZXIYAyABKAlCBeo/AggBElQKBHRhZ3MYBCADKAlCRuo/QyJBVGFncyBkZWZp",
            "bmVkIGJ5IGNvbnN1bWVyLCBlbnJpY2hlZCBieSBzZXJ2aWNlIGlmIHZhbGV0",
            "a2V5IGlzIHVzZWQSOgoFaW5wdXQYBSADKAsyKy5hc2d0LmRhdGFzZXJ2aWNl",
            "LnYxYWxwaGExLkVudHJ5LklucHV0RW50cnkSRQoLdHJ1ZV92YWx1ZXMYBiAD",
            "KAsyMC5hc2d0LmRhdGFzZXJ2aWNlLnYxYWxwaGExLkVudHJ5LlRydWVWYWx1",
            "ZXNFbnRyeRJRChFwcmVkaWN0aW9uX3ZhbHVlcxgHIAMoCzI2LmFzZ3QuZGF0",
            "YXNlcnZpY2UudjFhbHBoYTEuRW50cnkuUHJlZGljdGlvblZhbHVlc0VudHJ5",
            "EicKDWZlZWRiYWNrX3RpbWUYCCABKARCEOo/DQgBEglUSU1FU1RBTVAaVgoK",
            "SW5wdXRFbnRyeRILCgNrZXkYASABKAkSNwoFdmFsdWUYAiABKAsyKC5hc2d0",
            "LmRhdGFzZXJ2aWNlLnYxYWxwaGExLkZlZWRiYWNrVmFsdWU6AjgBGlsKD1Ry",
            "dWVWYWx1ZXNFbnRyeRILCgNrZXkYASABKAkSNwoFdmFsdWUYAiABKAsyKC5h",
            "c2d0LmRhdGFzZXJ2aWNlLnYxYWxwaGExLkZlZWRiYWNrVmFsdWU6AjgBGmUK",
            "FVByZWRpY3Rpb25WYWx1ZXNFbnRyeRILCgNrZXkYASABKAkSOwoFdmFsdWUY",
            "AiABKAsyLC5hc2d0LmRhdGFzZXJ2aWNlLnYxYWxwaGExLkZlZWRiYWNrVmFs",
            "dWVMaXN0OgI4AToS6j8PCg10cmFpbmluZ19kYXRhIoEBCg1GZWVkYmFja1Zh",
            "bHVlEhkKD2ZlZWRiYWNrX3N0cmluZxgBIAEoCUgAEhYKDGZlZWRiYWNrX2lu",
            "dBgCIAEoBUgAEjUKDmZlZWRiYWNrX2Zsb2F0GAMgASgLMhsuZ29vZ2xlLnBy",
            "b3RvYnVmLkZsb2F0VmFsdWVIAEIGCgR0eXBlIk0KEUZlZWRiYWNrVmFsdWVM",
            "aXN0EjgKBnZhbHVlcxgBIAMoCzIoLmFzZ3QuZGF0YXNlcnZpY2UudjFhbHBo",
            "YTEuRmVlZGJhY2tWYWx1ZSL1AgoWUHJlcGFyZUZlZWRiYWNrUmVxdWVzdBIK",
            "CgJpZBgBIAEoCRIMCgR1c2VyGAIgASgJElIKFXNjYW5uZWRfaW52b2ljZV9p",
            "bnB1dBgDIAEoCzIxLmFzZ3QuamVzdGVyLnYxYWxwaGExLlNjYW5uZWRJbnZv",
            "aWNlUmVxdWVzdC5JbnB1dEgAEmAKHWVsZWN0cm9uaWNfaW52b2ljZV9saW5l",
            "X2lucHV0GAQgASgLMjcuYXNndC5qZXN0ZXIudjFhbHBoYTEuRWxlY3Ryb25p",
            "Y0ludm9pY0xpbmVSZXF1ZXN0LklucHV0SAASPQoKYmFua19pbnB1dBgFIAEo",
            "CzInLmFzZ3QuamVzdGVyLnYxYWxwaGExLkJhbmtSZXF1ZXN0LklucHV0SAAS",
            "NQoLcHJlZGljdGlvbnMYBiADKAsyIC5hc2d0Lmplc3Rlci52MWFscGhhMS5Q",
            "cmVkaWN0aW9uEgwKBHRhZ3MYByADKAlCBwoFaW5wdXQi2QEKD0ZlZWRiYWNr",
            "UmVxdWVzdBIKCgJpZBgBIAEoCRIMCgR0YWdzGAIgAygJEk8KC3RydWVfdmFs",
            "dWVzGAMgAygLMjouYXNndC5kYXRhc2VydmljZS52MWFscGhhMS5GZWVkYmFj",
            "a1JlcXVlc3QuVHJ1ZVZhbHVlc0VudHJ5GlsKD1RydWVWYWx1ZXNFbnRyeRIL",
            "CgNrZXkYASABKAkSNwoFdmFsdWUYAiABKAsyKC5hc2d0LmRhdGFzZXJ2aWNl",
            "LnYxYWxwaGExLkZlZWRiYWNrVmFsdWU6AjgBIh0KDURlbGV0ZVJlcXVlc3QS",
            "DAoEdGFncxgBIAMoCTLTAgoLRGF0YVNlcnZpY2USXAoPUHJlcGFyZUZlZWRi",
            "YWNrEjEuYXNndC5kYXRhc2VydmljZS52MWFscGhhMS5QcmVwYXJlRmVlZGJh",
            "Y2tSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5EnQKCEZlZWRiYWNr",
            "EiouYXNndC5kYXRhc2VydmljZS52MWFscGhhMS5GZWVkYmFja1JlcXVlc3Qa",
            "Fi5nb29nbGUucHJvdG9idWYuRW1wdHkiJILT5JMCHiIZL3YxYWxwaGExL2Zl",
            "ZWRiYWNrOmNyZWF0ZToBKhJwCgZEZWxldGUSKC5hc2d0LmRhdGFzZXJ2aWNl",
            "LnYxYWxwaGExLkRlbGV0ZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkiJILT5JMCHiIZL3YxYWxwaGExL2ZlZWRiYWNrOmRlbGV0ZToBKkINWgtk",
            "YXRhc2VydmljZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor, global::GenBqSchema.BqFieldReflection.Descriptor, global::GenBqSchema.BqTableReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.Entry), global::Asgt.Dataservice.V1Alpha1.Entry.Parser, new[]{ "Id", "Consumer", "User", "Tags", "Input", "TrueValues", "PredictionValues", "FeedbackTime" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.FeedbackValue), global::Asgt.Dataservice.V1Alpha1.FeedbackValue.Parser, new[]{ "FeedbackString", "FeedbackInt", "FeedbackFloat" }, new[]{ "Type" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.FeedbackValueList), global::Asgt.Dataservice.V1Alpha1.FeedbackValueList.Parser, new[]{ "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.PrepareFeedbackRequest), global::Asgt.Dataservice.V1Alpha1.PrepareFeedbackRequest.Parser, new[]{ "Id", "User", "ScannedInvoiceInput", "ElectronicInvoiceLineInput", "BankInput", "Predictions", "Tags" }, new[]{ "Input" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.FeedbackRequest), global::Asgt.Dataservice.V1Alpha1.FeedbackRequest.Parser, new[]{ "Id", "Tags", "TrueValues" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.DeleteRequest), global::Asgt.Dataservice.V1Alpha1.DeleteRequest.Parser, new[]{ "Tags" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Entry : pb::IMessage<Entry> {
    private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Entry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entry(Entry other) : this() {
      id_ = other.id_;
      consumer_ = other.consumer_;
      user_ = other.user_;
      tags_ = other.tags_.Clone();
      input_ = other.input_.Clone();
      trueValues_ = other.trueValues_.Clone();
      predictionValues_ = other.predictionValues_.Clone();
      feedbackTime_ = other.feedbackTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entry Clone() {
      return new Entry(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "consumer" field.</summary>
    public const int ConsumerFieldNumber = 2;
    private string consumer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Consumer {
      get { return consumer_; }
      set {
        consumer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 3;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 5;
    private static readonly pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue>.Codec _map_input_codec
        = new pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Asgt.Dataservice.V1Alpha1.FeedbackValue.Parser), 42);
    private readonly pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue> input_ = new pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue>();
    /// <summary>
    /// input is not bq required, to make it repeated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue> Input {
      get { return input_; }
    }

    /// <summary>Field number for the "true_values" field.</summary>
    public const int TrueValuesFieldNumber = 6;
    private static readonly pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue>.Codec _map_trueValues_codec
        = new pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Asgt.Dataservice.V1Alpha1.FeedbackValue.Parser), 50);
    private readonly pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue> trueValues_ = new pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue>();
    /// <summary>
    /// true_values is not bq required, to make it repeated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue> TrueValues {
      get { return trueValues_; }
    }

    /// <summary>Field number for the "prediction_values" field.</summary>
    public const int PredictionValuesFieldNumber = 7;
    private static readonly pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValueList>.Codec _map_predictionValues_codec
        = new pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValueList>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Asgt.Dataservice.V1Alpha1.FeedbackValueList.Parser), 58);
    private readonly pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValueList> predictionValues_ = new pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValueList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValueList> PredictionValues {
      get { return predictionValues_; }
    }

    /// <summary>Field number for the "feedback_time" field.</summary>
    public const int FeedbackTimeFieldNumber = 8;
    private ulong feedbackTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FeedbackTime {
      get { return feedbackTime_; }
      set {
        feedbackTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Entry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Entry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Consumer != other.Consumer) return false;
      if (User != other.User) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!Input.Equals(other.Input)) return false;
      if (!TrueValues.Equals(other.TrueValues)) return false;
      if (!PredictionValues.Equals(other.PredictionValues)) return false;
      if (FeedbackTime != other.FeedbackTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Consumer.Length != 0) hash ^= Consumer.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= Input.GetHashCode();
      hash ^= TrueValues.GetHashCode();
      hash ^= PredictionValues.GetHashCode();
      if (FeedbackTime != 0UL) hash ^= FeedbackTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Consumer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Consumer);
      }
      if (User.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(User);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      input_.WriteTo(output, _map_input_codec);
      trueValues_.WriteTo(output, _map_trueValues_codec);
      predictionValues_.WriteTo(output, _map_predictionValues_codec);
      if (FeedbackTime != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(FeedbackTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Consumer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Consumer);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += input_.CalculateSize(_map_input_codec);
      size += trueValues_.CalculateSize(_map_trueValues_codec);
      size += predictionValues_.CalculateSize(_map_predictionValues_codec);
      if (FeedbackTime != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FeedbackTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Entry other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Consumer.Length != 0) {
        Consumer = other.Consumer;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      tags_.Add(other.tags_);
      input_.Add(other.input_);
      trueValues_.Add(other.trueValues_);
      predictionValues_.Add(other.predictionValues_);
      if (other.FeedbackTime != 0UL) {
        FeedbackTime = other.FeedbackTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Consumer = input.ReadString();
            break;
          }
          case 26: {
            User = input.ReadString();
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 42: {
            input_.AddEntriesFrom(input, _map_input_codec);
            break;
          }
          case 50: {
            trueValues_.AddEntriesFrom(input, _map_trueValues_codec);
            break;
          }
          case 58: {
            predictionValues_.AddEntriesFrom(input, _map_predictionValues_codec);
            break;
          }
          case 64: {
            FeedbackTime = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeedbackValue : pb::IMessage<FeedbackValue> {
    private static readonly pb::MessageParser<FeedbackValue> _parser = new pb::MessageParser<FeedbackValue>(() => new FeedbackValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedbackValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackValue(FeedbackValue other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.FeedbackString:
          FeedbackString = other.FeedbackString;
          break;
        case TypeOneofCase.FeedbackInt:
          FeedbackInt = other.FeedbackInt;
          break;
        case TypeOneofCase.FeedbackFloat:
          FeedbackFloat = other.FeedbackFloat;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackValue Clone() {
      return new FeedbackValue(this);
    }

    /// <summary>Field number for the "feedback_string" field.</summary>
    public const int FeedbackStringFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FeedbackString {
      get { return typeCase_ == TypeOneofCase.FeedbackString ? (string) type_ : ""; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        typeCase_ = TypeOneofCase.FeedbackString;
      }
    }

    /// <summary>Field number for the "feedback_int" field.</summary>
    public const int FeedbackIntFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FeedbackInt {
      get { return typeCase_ == TypeOneofCase.FeedbackInt ? (int) type_ : 0; }
      set {
        type_ = value;
        typeCase_ = TypeOneofCase.FeedbackInt;
      }
    }

    /// <summary>Field number for the "feedback_float" field.</summary>
    public const int FeedbackFloatFieldNumber = 3;
    private static readonly pb::FieldCodec<float?> _oneof_feedbackFloat_codec = pb::FieldCodec.ForStructWrapper<float>(26);
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? FeedbackFloat {
      get { return typeCase_ == TypeOneofCase.FeedbackFloat ? (float?) type_ : (float?) null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.FeedbackFloat;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      FeedbackString = 1,
      FeedbackInt = 2,
      FeedbackFloat = 3,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedbackValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedbackValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FeedbackString != other.FeedbackString) return false;
      if (FeedbackInt != other.FeedbackInt) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(FeedbackFloat, other.FeedbackFloat)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.FeedbackString) hash ^= FeedbackString.GetHashCode();
      if (typeCase_ == TypeOneofCase.FeedbackInt) hash ^= FeedbackInt.GetHashCode();
      if (typeCase_ == TypeOneofCase.FeedbackFloat) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(FeedbackFloat);
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.FeedbackString) {
        output.WriteRawTag(10);
        output.WriteString(FeedbackString);
      }
      if (typeCase_ == TypeOneofCase.FeedbackInt) {
        output.WriteRawTag(16);
        output.WriteInt32(FeedbackInt);
      }
      if (typeCase_ == TypeOneofCase.FeedbackFloat) {
        _oneof_feedbackFloat_codec.WriteTagAndValue(output, (float?) type_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.FeedbackString) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FeedbackString);
      }
      if (typeCase_ == TypeOneofCase.FeedbackInt) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeedbackInt);
      }
      if (typeCase_ == TypeOneofCase.FeedbackFloat) {
        size += _oneof_feedbackFloat_codec.CalculateSizeWithTag(FeedbackFloat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedbackValue other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.FeedbackString:
          FeedbackString = other.FeedbackString;
          break;
        case TypeOneofCase.FeedbackInt:
          FeedbackInt = other.FeedbackInt;
          break;
        case TypeOneofCase.FeedbackFloat:
          FeedbackFloat = other.FeedbackFloat;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FeedbackString = input.ReadString();
            break;
          }
          case 16: {
            FeedbackInt = input.ReadInt32();
            break;
          }
          case 26: {
            FeedbackFloat = _oneof_feedbackFloat_codec.Read(input);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeedbackValueList : pb::IMessage<FeedbackValueList> {
    private static readonly pb::MessageParser<FeedbackValueList> _parser = new pb::MessageParser<FeedbackValueList>(() => new FeedbackValueList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedbackValueList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackValueList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackValueList(FeedbackValueList other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackValueList Clone() {
      return new FeedbackValueList(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.FeedbackValue> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Asgt.Dataservice.V1Alpha1.FeedbackValue.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.FeedbackValue> values_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.FeedbackValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.FeedbackValue> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedbackValueList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedbackValueList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedbackValueList other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrepareFeedbackRequest : pb::IMessage<PrepareFeedbackRequest> {
    private static readonly pb::MessageParser<PrepareFeedbackRequest> _parser = new pb::MessageParser<PrepareFeedbackRequest>(() => new PrepareFeedbackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrepareFeedbackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareFeedbackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareFeedbackRequest(PrepareFeedbackRequest other) : this() {
      id_ = other.id_;
      user_ = other.user_;
      predictions_ = other.predictions_.Clone();
      tags_ = other.tags_.Clone();
      switch (other.InputCase) {
        case InputOneofCase.ScannedInvoiceInput:
          ScannedInvoiceInput = other.ScannedInvoiceInput.Clone();
          break;
        case InputOneofCase.ElectronicInvoiceLineInput:
          ElectronicInvoiceLineInput = other.ElectronicInvoiceLineInput.Clone();
          break;
        case InputOneofCase.BankInput:
          BankInput = other.BankInput.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrepareFeedbackRequest Clone() {
      return new PrepareFeedbackRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scanned_invoice_input" field.</summary>
    public const int ScannedInvoiceInputFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Input ScannedInvoiceInput {
      get { return inputCase_ == InputOneofCase.ScannedInvoiceInput ? (global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Input) input_ : null; }
      set {
        input_ = value;
        inputCase_ = value == null ? InputOneofCase.None : InputOneofCase.ScannedInvoiceInput;
      }
    }

    /// <summary>Field number for the "electronic_invoice_line_input" field.</summary>
    public const int ElectronicInvoiceLineInputFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.ElectronicInvoicLineRequest.Types.Input ElectronicInvoiceLineInput {
      get { return inputCase_ == InputOneofCase.ElectronicInvoiceLineInput ? (global::Asgt.Jester.V1Alpha1.ElectronicInvoicLineRequest.Types.Input) input_ : null; }
      set {
        input_ = value;
        inputCase_ = value == null ? InputOneofCase.None : InputOneofCase.ElectronicInvoiceLineInput;
      }
    }

    /// <summary>Field number for the "bank_input" field.</summary>
    public const int BankInputFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.BankRequest.Types.Input BankInput {
      get { return inputCase_ == InputOneofCase.BankInput ? (global::Asgt.Jester.V1Alpha1.BankRequest.Types.Input) input_ : null; }
      set {
        input_ = value;
        inputCase_ = value == null ? InputOneofCase.None : InputOneofCase.BankInput;
      }
    }

    /// <summary>Field number for the "predictions" field.</summary>
    public const int PredictionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Asgt.Jester.V1Alpha1.Prediction> _repeated_predictions_codec
        = pb::FieldCodec.ForMessage(50, global::Asgt.Jester.V1Alpha1.Prediction.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction> predictions_ = new pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction> Predictions {
      get { return predictions_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    private object input_;
    /// <summary>Enum of possible cases for the "input" oneof.</summary>
    public enum InputOneofCase {
      None = 0,
      ScannedInvoiceInput = 3,
      ElectronicInvoiceLineInput = 4,
      BankInput = 5,
    }
    private InputOneofCase inputCase_ = InputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InputOneofCase InputCase {
      get { return inputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInput() {
      inputCase_ = InputOneofCase.None;
      input_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrepareFeedbackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrepareFeedbackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (User != other.User) return false;
      if (!object.Equals(ScannedInvoiceInput, other.ScannedInvoiceInput)) return false;
      if (!object.Equals(ElectronicInvoiceLineInput, other.ElectronicInvoiceLineInput)) return false;
      if (!object.Equals(BankInput, other.BankInput)) return false;
      if(!predictions_.Equals(other.predictions_)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (InputCase != other.InputCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (inputCase_ == InputOneofCase.ScannedInvoiceInput) hash ^= ScannedInvoiceInput.GetHashCode();
      if (inputCase_ == InputOneofCase.ElectronicInvoiceLineInput) hash ^= ElectronicInvoiceLineInput.GetHashCode();
      if (inputCase_ == InputOneofCase.BankInput) hash ^= BankInput.GetHashCode();
      hash ^= predictions_.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= (int) inputCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (User.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(User);
      }
      if (inputCase_ == InputOneofCase.ScannedInvoiceInput) {
        output.WriteRawTag(26);
        output.WriteMessage(ScannedInvoiceInput);
      }
      if (inputCase_ == InputOneofCase.ElectronicInvoiceLineInput) {
        output.WriteRawTag(34);
        output.WriteMessage(ElectronicInvoiceLineInput);
      }
      if (inputCase_ == InputOneofCase.BankInput) {
        output.WriteRawTag(42);
        output.WriteMessage(BankInput);
      }
      predictions_.WriteTo(output, _repeated_predictions_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (inputCase_ == InputOneofCase.ScannedInvoiceInput) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScannedInvoiceInput);
      }
      if (inputCase_ == InputOneofCase.ElectronicInvoiceLineInput) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ElectronicInvoiceLineInput);
      }
      if (inputCase_ == InputOneofCase.BankInput) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BankInput);
      }
      size += predictions_.CalculateSize(_repeated_predictions_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrepareFeedbackRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      predictions_.Add(other.predictions_);
      tags_.Add(other.tags_);
      switch (other.InputCase) {
        case InputOneofCase.ScannedInvoiceInput:
          if (ScannedInvoiceInput == null) {
            ScannedInvoiceInput = new global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Input();
          }
          ScannedInvoiceInput.MergeFrom(other.ScannedInvoiceInput);
          break;
        case InputOneofCase.ElectronicInvoiceLineInput:
          if (ElectronicInvoiceLineInput == null) {
            ElectronicInvoiceLineInput = new global::Asgt.Jester.V1Alpha1.ElectronicInvoicLineRequest.Types.Input();
          }
          ElectronicInvoiceLineInput.MergeFrom(other.ElectronicInvoiceLineInput);
          break;
        case InputOneofCase.BankInput:
          if (BankInput == null) {
            BankInput = new global::Asgt.Jester.V1Alpha1.BankRequest.Types.Input();
          }
          BankInput.MergeFrom(other.BankInput);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            User = input.ReadString();
            break;
          }
          case 26: {
            global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Input subBuilder = new global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Input();
            if (inputCase_ == InputOneofCase.ScannedInvoiceInput) {
              subBuilder.MergeFrom(ScannedInvoiceInput);
            }
            input.ReadMessage(subBuilder);
            ScannedInvoiceInput = subBuilder;
            break;
          }
          case 34: {
            global::Asgt.Jester.V1Alpha1.ElectronicInvoicLineRequest.Types.Input subBuilder = new global::Asgt.Jester.V1Alpha1.ElectronicInvoicLineRequest.Types.Input();
            if (inputCase_ == InputOneofCase.ElectronicInvoiceLineInput) {
              subBuilder.MergeFrom(ElectronicInvoiceLineInput);
            }
            input.ReadMessage(subBuilder);
            ElectronicInvoiceLineInput = subBuilder;
            break;
          }
          case 42: {
            global::Asgt.Jester.V1Alpha1.BankRequest.Types.Input subBuilder = new global::Asgt.Jester.V1Alpha1.BankRequest.Types.Input();
            if (inputCase_ == InputOneofCase.BankInput) {
              subBuilder.MergeFrom(BankInput);
            }
            input.ReadMessage(subBuilder);
            BankInput = subBuilder;
            break;
          }
          case 50: {
            predictions_.AddEntriesFrom(input, _repeated_predictions_codec);
            break;
          }
          case 58: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeedbackRequest : pb::IMessage<FeedbackRequest> {
    private static readonly pb::MessageParser<FeedbackRequest> _parser = new pb::MessageParser<FeedbackRequest>(() => new FeedbackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedbackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackRequest(FeedbackRequest other) : this() {
      id_ = other.id_;
      tags_ = other.tags_.Clone();
      trueValues_ = other.trueValues_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackRequest Clone() {
      return new FeedbackRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "true_values" field.</summary>
    public const int TrueValuesFieldNumber = 3;
    private static readonly pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue>.Codec _map_trueValues_codec
        = new pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Asgt.Dataservice.V1Alpha1.FeedbackValue.Parser), 26);
    private readonly pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue> trueValues_ = new pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Asgt.Dataservice.V1Alpha1.FeedbackValue> TrueValues {
      get { return trueValues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedbackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedbackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!TrueValues.Equals(other.TrueValues)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= TrueValues.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      trueValues_.WriteTo(output, _map_trueValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += trueValues_.CalculateSize(_map_trueValues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedbackRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      tags_.Add(other.tags_);
      trueValues_.Add(other.trueValues_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 26: {
            trueValues_.AddEntriesFrom(input, _map_trueValues_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRequest : pb::IMessage<DeleteRequest> {
    private static readonly pb::MessageParser<DeleteRequest> _parser = new pb::MessageParser<DeleteRequest>(() => new DeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.DataserviceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest(DeleteRequest other) : this() {
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest Clone() {
      return new DeleteRequest(this);
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRequest other) {
      if (other == null) {
        return;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
