// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: asgt/jester/v1alpha1/jester.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Asgt.Jester.V1Alpha1 {

  /// <summary>Holder for reflection information generated from asgt/jester/v1alpha1/jester.proto</summary>
  public static partial class JesterReflection {

    #region Descriptor
    /// <summary>File descriptor for asgt/jester/v1alpha1/jester.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static JesterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFhc2d0L2plc3Rlci92MWFscGhhMS9qZXN0ZXIucHJvdG8SFGFzZ3QuamVz",
            "dGVyLnYxYWxwaGExGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGh5n",
            "b29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8ivgEKCkNvbmZpZGVuY2US",
            "NQoFbGV2ZWwYASABKA4yJi5hc2d0Lmplc3Rlci52MWFscGhhMS5Db25maWRl",
            "bmNlLkxldmVsEioKBXZhbHVlGAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkZs",
            "b2F0VmFsdWUiTQoFTGV2ZWwSCwoHVU5LTk9XThAAEgwKCFZFUllfTE9XEAES",
            "BwoDTE9XEAISBwoDTUlEEAMSCAoESElHSBAEEg0KCVZFUllfSElHSBAFIq4B",
            "CgpQcmVkaWN0aW9uEg4KBnRhcmdldBgBIAEoCRI+CgpjYW5kaWRhdGVzGAIg",
            "AygLMiouYXNndC5qZXN0ZXIudjFhbHBoYTEuUHJlZGljdGlvbi5DYW5kaWRh",
            "dGUaUAoJQ2FuZGlkYXRlEg0KBWxhYmVsGAEgASgJEjQKCmNvbmZpZGVuY2UY",
            "AiABKAsyIC5hc2d0Lmplc3Rlci52MWFscGhhMS5Db25maWRlbmNlIkwKE1N1",
            "Z2dlc3Rpb25zUmVzcG9uc2USNQoLcHJlZGljdGlvbnMYASADKAsyIC5hc2d0",
            "Lmplc3Rlci52MWFscGhhMS5QcmVkaWN0aW9uIm0KEVN1Z2dlc3Rpb25PcHRp",
            "b25zEhgKEHN1Z2dlc3Rpb25fbGltaXQYASABKAUSPgoObWluX2NvbmZpZGVu",
            "Y2UYAiABKA4yJi5hc2d0Lmplc3Rlci52MWFscGhhMS5Db25maWRlbmNlLkxl",
            "dmVsIsEBChVTY2FubmVkSW52b2ljZVJlcXVlc3QSQAoGaW5wdXRzGAEgAygL",
            "MjAuYXNndC5qZXN0ZXIudjFhbHBoYTEuU2Nhbm5lZEludm9pY2VSZXF1ZXN0",
            "LkRhdGESDwoHdGFyZ2V0cxgCIAMoCRI4CgdvcHRpb25zGAMgASgLMicuYXNn",
            "dC5qZXN0ZXIudjFhbHBoYTEuU3VnZ2VzdGlvbk9wdGlvbnMaGwoERGF0YRIT",
            "CgtkZXNjcmlwdGlvbhgBIAEoCSLyAgocRWxlY3Ryb25pY0ludm9pY2VMaW5l",
            "UmVxdWVzdBJHCgZpbnB1dHMYASADKAsyNy5hc2d0Lmplc3Rlci52MWFscGhh",
            "MS5FbGVjdHJvbmljSW52b2ljZUxpbmVSZXF1ZXN0LkRhdGESDwoHdGFyZ2V0",
            "cxgCIAMoCRI4CgdvcHRpb25zGAMgASgLMicuYXNndC5qZXN0ZXIudjFhbHBo",
            "YTEuU3VnZ2VzdGlvbk9wdGlvbnMavQEKBERhdGESEgoKaXNzdWVfZGF0ZRgB",
            "IAEoCRIQCghjdXJyZW5jeRgCIAEoCRITCgtzdXBwbGllcl9pZBgDIAEoCRIV",
            "Cg1zdXBwbGllcl9uYW1lGAQgASgJEhoKEnN1cHBsaWVyX2dsb2JhbF9pZBgF",
            "IAEoCRIUCgxjdXN0b21lcl9yZWYYBiABKAkSDQoFdG90YWwYByABKAUSEQoJ",
            "bGluZV90ZXh0GAggASgJEg8KB2xpbmVfaWQYCSABKAkilAIKC0JhbmtSZXF1",
            "ZXN0EjYKBmlucHV0cxgBIAMoCzImLmFzZ3QuamVzdGVyLnYxYWxwaGExLkJh",
            "bmtSZXF1ZXN0LkRhdGESDwoHdGFyZ2V0cxgCIAMoCRI4CgdvcHRpb25zGAMg",
            "ASgLMicuYXNndC5qZXN0ZXIudjFhbHBoYTEuU3VnZ2VzdGlvbk9wdGlvbnMa",
            "gQEKBERhdGESFgoOYWNjb3VudF9udW1iZXIYASABKAUSKwoGYW1vdW50GAIg",
            "ASgLMhsuZ29vZ2xlLnByb3RvYnVmLkZsb2F0VmFsdWUSEgoKZW50cnlfdHlw",
            "ZRgDIAEoBRIMCgR0ZXh0GAQgASgJEhIKCnRpbWVfc3RhbXAYBSABKAUy1AMK",
            "Bkplc3RlchKaAQoZU2Nhbm5lZEludm9pY2VTdWdnZXN0aW9ucxIrLmFzZ3Qu",
            "amVzdGVyLnYxYWxwaGExLlNjYW5uZWRJbnZvaWNlUmVxdWVzdBopLmFzZ3Qu",
            "amVzdGVyLnYxYWxwaGExLlN1Z2dlc3Rpb25zUmVzcG9uc2UiJYLT5JMCHyIa",
            "L3YxL3N1Z2dlc3Q6c2Nhbm5lZGludm9pY2U6ASoSrgEKH0VsZWN0cm9uaWNJ",
            "bnZvaWNMaW5lU3VnZ2VzdGlvbnMSMi5hc2d0Lmplc3Rlci52MWFscGhhMS5F",
            "bGVjdHJvbmljSW52b2ljZUxpbmVSZXF1ZXN0GikuYXNndC5qZXN0ZXIudjFh",
            "bHBoYTEuU3VnZ2VzdGlvbnNSZXNwb25zZSIsgtPkkwImIiEvdjEvc3VnZ2Vz",
            "dDplbGVjdHJvbmljaW52b2ljZWxpbmU6ASoSfAoPQmFua1N1Z2dlc3Rpb25z",
            "EiEuYXNndC5qZXN0ZXIudjFhbHBoYTEuQmFua1JlcXVlc3QaKS5hc2d0Lmpl",
            "c3Rlci52MWFscGhhMS5TdWdnZXN0aW9uc1Jlc3BvbnNlIhuC0+STAhUiEC92",
            "MS9zdWdnZXN0OmJhbms6ASpCCFoGamVzdGVyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.Confidence), global::Asgt.Jester.V1Alpha1.Confidence.Parser, new[]{ "Level", "Value" }, null, new[]{ typeof(global::Asgt.Jester.V1Alpha1.Confidence.Types.Level) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.Prediction), global::Asgt.Jester.V1Alpha1.Prediction.Parser, new[]{ "Target", "Candidates" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.Prediction.Types.Candidate), global::Asgt.Jester.V1Alpha1.Prediction.Types.Candidate.Parser, new[]{ "Label", "Confidence" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.SuggestionsResponse), global::Asgt.Jester.V1Alpha1.SuggestionsResponse.Parser, new[]{ "Predictions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.SuggestionOptions), global::Asgt.Jester.V1Alpha1.SuggestionOptions.Parser, new[]{ "SuggestionLimit", "MinConfidence" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest), global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Parser, new[]{ "Inputs", "Targets", "Options" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data), global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data.Parser, new[]{ "Description" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest), global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Parser, new[]{ "Inputs", "Targets", "Options" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data), global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data.Parser, new[]{ "IssueDate", "Currency", "SupplierId", "SupplierName", "SupplierGlobalId", "CustomerRef", "Total", "LineText", "LineId" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.BankRequest), global::Asgt.Jester.V1Alpha1.BankRequest.Parser, new[]{ "Inputs", "Targets", "Options" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data), global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data.Parser, new[]{ "AccountNumber", "Amount", "EntryType", "Text", "TimeStamp" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Common types
  /// </summary>
  public sealed partial class Confidence : pb::IMessage<Confidence> {
    private static readonly pb::MessageParser<Confidence> _parser = new pb::MessageParser<Confidence>(() => new Confidence());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Confidence> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Confidence() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Confidence(Confidence other) : this() {
      level_ = other.level_;
      Value = other.Value;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Confidence Clone() {
      return new Confidence(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private global::Asgt.Jester.V1Alpha1.Confidence.Types.Level level_ = 0;
    /// <summary>
    /// A bucketized representation of confidence, which is intended to give clients
    /// highly stable results across model upgrades.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.Confidence.Types.Level Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private static readonly pb::FieldCodec<float?> _single_value_codec = pb::FieldCodec.ForStructWrapper<float>(18);
    private float? value_;
    /// <summary>
    /// The confidence value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Confidence);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Confidence other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0) hash ^= Level.GetHashCode();
      if (value_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (value_ != null) {
        _single_value_codec.WriteTagAndValue(output, Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (value_ != null) {
        size += _single_value_codec.CalculateSizeWithTag(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Confidence other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.value_ != null) {
        if (value_ == null || other.Value != 0F) {
          Value = other.Value;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            level_ = (global::Asgt.Jester.V1Alpha1.Confidence.Types.Level) input.ReadEnum();
            break;
          }
          case 18: {
            float? value = _single_value_codec.Read(input);
            if (value_ == null || value != 0F) {
              Value = value;
            }
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Confidence message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Level {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("VERY_LOW")] VeryLow = 1,
        [pbr::OriginalName("LOW")] Low = 2,
        [pbr::OriginalName("MID")] Mid = 3,
        [pbr::OriginalName("HIGH")] High = 4,
        [pbr::OriginalName("VERY_HIGH")] VeryHigh = 5,
      }

    }
    #endregion

  }

  public sealed partial class Prediction : pb::IMessage<Prediction> {
    private static readonly pb::MessageParser<Prediction> _parser = new pb::MessageParser<Prediction>(() => new Prediction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Prediction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Prediction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Prediction(Prediction other) : this() {
      target_ = other.target_;
      candidates_ = other.candidates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Prediction Clone() {
      return new Prediction(this);
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 1;
    private string target_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "candidates" field.</summary>
    public const int CandidatesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Asgt.Jester.V1Alpha1.Prediction.Types.Candidate> _repeated_candidates_codec
        = pb::FieldCodec.ForMessage(18, global::Asgt.Jester.V1Alpha1.Prediction.Types.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction.Types.Candidate> candidates_ = new pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction.Types.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction.Types.Candidate> Candidates {
      get { return candidates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Prediction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Prediction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Target != other.Target) return false;
      if(!candidates_.Equals(other.candidates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      hash ^= candidates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Target.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Target);
      }
      candidates_.WriteTo(output, _repeated_candidates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      size += candidates_.CalculateSize(_repeated_candidates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Prediction other) {
      if (other == null) {
        return;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      candidates_.Add(other.candidates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Target = input.ReadString();
            break;
          }
          case 18: {
            candidates_.AddEntriesFrom(input, _repeated_candidates_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Prediction message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Candidate : pb::IMessage<Candidate> {
        private static readonly pb::MessageParser<Candidate> _parser = new pb::MessageParser<Candidate>(() => new Candidate());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Candidate> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Asgt.Jester.V1Alpha1.Prediction.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Candidate() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Candidate(Candidate other) : this() {
          label_ = other.label_;
          confidence_ = other.confidence_ != null ? other.confidence_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Candidate Clone() {
          return new Candidate(this);
        }

        /// <summary>Field number for the "label" field.</summary>
        public const int LabelFieldNumber = 1;
        private string label_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Label {
          get { return label_; }
          set {
            label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "confidence" field.</summary>
        public const int ConfidenceFieldNumber = 2;
        private global::Asgt.Jester.V1Alpha1.Confidence confidence_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Asgt.Jester.V1Alpha1.Confidence Confidence {
          get { return confidence_; }
          set {
            confidence_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Candidate);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Candidate other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Label != other.Label) return false;
          if (!object.Equals(Confidence, other.Confidence)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Label.Length != 0) hash ^= Label.GetHashCode();
          if (confidence_ != null) hash ^= Confidence.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Label.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Label);
          }
          if (confidence_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Confidence);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Label.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
          }
          if (confidence_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Confidence);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Candidate other) {
          if (other == null) {
            return;
          }
          if (other.Label.Length != 0) {
            Label = other.Label;
          }
          if (other.confidence_ != null) {
            if (confidence_ == null) {
              confidence_ = new global::Asgt.Jester.V1Alpha1.Confidence();
            }
            Confidence.MergeFrom(other.Confidence);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Label = input.ReadString();
                break;
              }
              case 18: {
                if (confidence_ == null) {
                  confidence_ = new global::Asgt.Jester.V1Alpha1.Confidence();
                }
                input.ReadMessage(confidence_);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// AutoSuggest
  /// </summary>
  public sealed partial class SuggestionsResponse : pb::IMessage<SuggestionsResponse> {
    private static readonly pb::MessageParser<SuggestionsResponse> _parser = new pb::MessageParser<SuggestionsResponse>(() => new SuggestionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuggestionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionsResponse(SuggestionsResponse other) : this() {
      predictions_ = other.predictions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionsResponse Clone() {
      return new SuggestionsResponse(this);
    }

    /// <summary>Field number for the "predictions" field.</summary>
    public const int PredictionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Asgt.Jester.V1Alpha1.Prediction> _repeated_predictions_codec
        = pb::FieldCodec.ForMessage(10, global::Asgt.Jester.V1Alpha1.Prediction.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction> predictions_ = new pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.Prediction> Predictions {
      get { return predictions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuggestionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuggestionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!predictions_.Equals(other.predictions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= predictions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      predictions_.WriteTo(output, _repeated_predictions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += predictions_.CalculateSize(_repeated_predictions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuggestionsResponse other) {
      if (other == null) {
        return;
      }
      predictions_.Add(other.predictions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            predictions_.AddEntriesFrom(input, _repeated_predictions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SuggestionOptions : pb::IMessage<SuggestionOptions> {
    private static readonly pb::MessageParser<SuggestionOptions> _parser = new pb::MessageParser<SuggestionOptions>(() => new SuggestionOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuggestionOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionOptions(SuggestionOptions other) : this() {
      suggestionLimit_ = other.suggestionLimit_;
      minConfidence_ = other.minConfidence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionOptions Clone() {
      return new SuggestionOptions(this);
    }

    /// <summary>Field number for the "suggestion_limit" field.</summary>
    public const int SuggestionLimitFieldNumber = 1;
    private int suggestionLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SuggestionLimit {
      get { return suggestionLimit_; }
      set {
        suggestionLimit_ = value;
      }
    }

    /// <summary>Field number for the "min_confidence" field.</summary>
    public const int MinConfidenceFieldNumber = 2;
    private global::Asgt.Jester.V1Alpha1.Confidence.Types.Level minConfidence_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.Confidence.Types.Level MinConfidence {
      get { return minConfidence_; }
      set {
        minConfidence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuggestionOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuggestionOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SuggestionLimit != other.SuggestionLimit) return false;
      if (MinConfidence != other.MinConfidence) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SuggestionLimit != 0) hash ^= SuggestionLimit.GetHashCode();
      if (MinConfidence != 0) hash ^= MinConfidence.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SuggestionLimit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SuggestionLimit);
      }
      if (MinConfidence != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MinConfidence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SuggestionLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuggestionLimit);
      }
      if (MinConfidence != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MinConfidence);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuggestionOptions other) {
      if (other == null) {
        return;
      }
      if (other.SuggestionLimit != 0) {
        SuggestionLimit = other.SuggestionLimit;
      }
      if (other.MinConfidence != 0) {
        MinConfidence = other.MinConfidence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SuggestionLimit = input.ReadInt32();
            break;
          }
          case 16: {
            minConfidence_ = (global::Asgt.Jester.V1Alpha1.Confidence.Types.Level) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Scanned Invoice
  /// </summary>
  public sealed partial class ScannedInvoiceRequest : pb::IMessage<ScannedInvoiceRequest> {
    private static readonly pb::MessageParser<ScannedInvoiceRequest> _parser = new pb::MessageParser<ScannedInvoiceRequest>(() => new ScannedInvoiceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScannedInvoiceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceRequest(ScannedInvoiceRequest other) : this() {
      inputs_ = other.inputs_.Clone();
      targets_ = other.targets_.Clone();
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceRequest Clone() {
      return new ScannedInvoiceRequest(this);
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(10, global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data> inputs_ = new pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_targets_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> targets_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Targets {
      get { return targets_; }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Asgt.Jester.V1Alpha1.SuggestionOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.SuggestionOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScannedInvoiceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScannedInvoiceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inputs_.Equals(other.inputs_)) return false;
      if(!targets_.Equals(other.targets_)) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inputs_.GetHashCode();
      hash ^= targets_.GetHashCode();
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      inputs_.WriteTo(output, _repeated_inputs_codec);
      targets_.WriteTo(output, _repeated_targets_codec);
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      size += targets_.CalculateSize(_repeated_targets_codec);
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScannedInvoiceRequest other) {
      if (other == null) {
        return;
      }
      inputs_.Add(other.inputs_);
      targets_.Add(other.targets_);
      if (other.options_ != null) {
        if (options_ == null) {
          options_ = new global::Asgt.Jester.V1Alpha1.SuggestionOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 18: {
            targets_.AddEntriesFrom(input, _repeated_targets_codec);
            break;
          }
          case 26: {
            if (options_ == null) {
              options_ = new global::Asgt.Jester.V1Alpha1.SuggestionOptions();
            }
            input.ReadMessage(options_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ScannedInvoiceRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Data : pb::IMessage<Data> {
        private static readonly pb::MessageParser<Data> _parser = new pb::MessageParser<Data>(() => new Data());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Data> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data(Data other) : this() {
          description_ = other.description_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data Clone() {
          return new Data(this);
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 1;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Data);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Data other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Description != other.Description) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Description.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Description);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Data other) {
          if (other == null) {
            return;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Description = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Electronic Invoice Line
  /// </summary>
  public sealed partial class ElectronicInvoiceLineRequest : pb::IMessage<ElectronicInvoiceLineRequest> {
    private static readonly pb::MessageParser<ElectronicInvoiceLineRequest> _parser = new pb::MessageParser<ElectronicInvoiceLineRequest>(() => new ElectronicInvoiceLineRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectronicInvoiceLineRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineRequest(ElectronicInvoiceLineRequest other) : this() {
      inputs_ = other.inputs_.Clone();
      targets_ = other.targets_.Clone();
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineRequest Clone() {
      return new ElectronicInvoiceLineRequest(this);
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(10, global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data> inputs_ = new pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_targets_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> targets_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Targets {
      get { return targets_; }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Asgt.Jester.V1Alpha1.SuggestionOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.SuggestionOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectronicInvoiceLineRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectronicInvoiceLineRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inputs_.Equals(other.inputs_)) return false;
      if(!targets_.Equals(other.targets_)) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inputs_.GetHashCode();
      hash ^= targets_.GetHashCode();
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      inputs_.WriteTo(output, _repeated_inputs_codec);
      targets_.WriteTo(output, _repeated_targets_codec);
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      size += targets_.CalculateSize(_repeated_targets_codec);
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectronicInvoiceLineRequest other) {
      if (other == null) {
        return;
      }
      inputs_.Add(other.inputs_);
      targets_.Add(other.targets_);
      if (other.options_ != null) {
        if (options_ == null) {
          options_ = new global::Asgt.Jester.V1Alpha1.SuggestionOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 18: {
            targets_.AddEntriesFrom(input, _repeated_targets_codec);
            break;
          }
          case 26: {
            if (options_ == null) {
              options_ = new global::Asgt.Jester.V1Alpha1.SuggestionOptions();
            }
            input.ReadMessage(options_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ElectronicInvoiceLineRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Data : pb::IMessage<Data> {
        private static readonly pb::MessageParser<Data> _parser = new pb::MessageParser<Data>(() => new Data());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Data> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data(Data other) : this() {
          issueDate_ = other.issueDate_;
          currency_ = other.currency_;
          supplierId_ = other.supplierId_;
          supplierName_ = other.supplierName_;
          supplierGlobalId_ = other.supplierGlobalId_;
          customerRef_ = other.customerRef_;
          total_ = other.total_;
          lineText_ = other.lineText_;
          lineId_ = other.lineId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data Clone() {
          return new Data(this);
        }

        /// <summary>Field number for the "issue_date" field.</summary>
        public const int IssueDateFieldNumber = 1;
        private string issueDate_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string IssueDate {
          get { return issueDate_; }
          set {
            issueDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "currency" field.</summary>
        public const int CurrencyFieldNumber = 2;
        private string currency_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Currency {
          get { return currency_; }
          set {
            currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "supplier_id" field.</summary>
        public const int SupplierIdFieldNumber = 3;
        private string supplierId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SupplierId {
          get { return supplierId_; }
          set {
            supplierId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "supplier_name" field.</summary>
        public const int SupplierNameFieldNumber = 4;
        private string supplierName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SupplierName {
          get { return supplierName_; }
          set {
            supplierName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "supplier_global_id" field.</summary>
        public const int SupplierGlobalIdFieldNumber = 5;
        private string supplierGlobalId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SupplierGlobalId {
          get { return supplierGlobalId_; }
          set {
            supplierGlobalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "customer_ref" field.</summary>
        public const int CustomerRefFieldNumber = 6;
        private string customerRef_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CustomerRef {
          get { return customerRef_; }
          set {
            customerRef_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "total" field.</summary>
        public const int TotalFieldNumber = 7;
        private int total_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Total {
          get { return total_; }
          set {
            total_ = value;
          }
        }

        /// <summary>Field number for the "line_text" field.</summary>
        public const int LineTextFieldNumber = 8;
        private string lineText_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LineText {
          get { return lineText_; }
          set {
            lineText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "line_id" field.</summary>
        public const int LineIdFieldNumber = 9;
        private string lineId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string LineId {
          get { return lineId_; }
          set {
            lineId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Data);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Data other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (IssueDate != other.IssueDate) return false;
          if (Currency != other.Currency) return false;
          if (SupplierId != other.SupplierId) return false;
          if (SupplierName != other.SupplierName) return false;
          if (SupplierGlobalId != other.SupplierGlobalId) return false;
          if (CustomerRef != other.CustomerRef) return false;
          if (Total != other.Total) return false;
          if (LineText != other.LineText) return false;
          if (LineId != other.LineId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (IssueDate.Length != 0) hash ^= IssueDate.GetHashCode();
          if (Currency.Length != 0) hash ^= Currency.GetHashCode();
          if (SupplierId.Length != 0) hash ^= SupplierId.GetHashCode();
          if (SupplierName.Length != 0) hash ^= SupplierName.GetHashCode();
          if (SupplierGlobalId.Length != 0) hash ^= SupplierGlobalId.GetHashCode();
          if (CustomerRef.Length != 0) hash ^= CustomerRef.GetHashCode();
          if (Total != 0) hash ^= Total.GetHashCode();
          if (LineText.Length != 0) hash ^= LineText.GetHashCode();
          if (LineId.Length != 0) hash ^= LineId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (IssueDate.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(IssueDate);
          }
          if (Currency.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Currency);
          }
          if (SupplierId.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(SupplierId);
          }
          if (SupplierName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(SupplierName);
          }
          if (SupplierGlobalId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(SupplierGlobalId);
          }
          if (CustomerRef.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(CustomerRef);
          }
          if (Total != 0) {
            output.WriteRawTag(56);
            output.WriteInt32(Total);
          }
          if (LineText.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(LineText);
          }
          if (LineId.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(LineId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (IssueDate.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(IssueDate);
          }
          if (Currency.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
          }
          if (SupplierId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SupplierId);
          }
          if (SupplierName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SupplierName);
          }
          if (SupplierGlobalId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SupplierGlobalId);
          }
          if (CustomerRef.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerRef);
          }
          if (Total != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
          }
          if (LineText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LineText);
          }
          if (LineId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LineId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Data other) {
          if (other == null) {
            return;
          }
          if (other.IssueDate.Length != 0) {
            IssueDate = other.IssueDate;
          }
          if (other.Currency.Length != 0) {
            Currency = other.Currency;
          }
          if (other.SupplierId.Length != 0) {
            SupplierId = other.SupplierId;
          }
          if (other.SupplierName.Length != 0) {
            SupplierName = other.SupplierName;
          }
          if (other.SupplierGlobalId.Length != 0) {
            SupplierGlobalId = other.SupplierGlobalId;
          }
          if (other.CustomerRef.Length != 0) {
            CustomerRef = other.CustomerRef;
          }
          if (other.Total != 0) {
            Total = other.Total;
          }
          if (other.LineText.Length != 0) {
            LineText = other.LineText;
          }
          if (other.LineId.Length != 0) {
            LineId = other.LineId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                IssueDate = input.ReadString();
                break;
              }
              case 18: {
                Currency = input.ReadString();
                break;
              }
              case 26: {
                SupplierId = input.ReadString();
                break;
              }
              case 34: {
                SupplierName = input.ReadString();
                break;
              }
              case 42: {
                SupplierGlobalId = input.ReadString();
                break;
              }
              case 50: {
                CustomerRef = input.ReadString();
                break;
              }
              case 56: {
                Total = input.ReadInt32();
                break;
              }
              case 66: {
                LineText = input.ReadString();
                break;
              }
              case 74: {
                LineId = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Bank
  /// </summary>
  public sealed partial class BankRequest : pb::IMessage<BankRequest> {
    private static readonly pb::MessageParser<BankRequest> _parser = new pb::MessageParser<BankRequest>(() => new BankRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BankRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankRequest(BankRequest other) : this() {
      inputs_ = other.inputs_.Clone();
      targets_ = other.targets_.Clone();
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankRequest Clone() {
      return new BankRequest(this);
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(10, global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data> inputs_ = new pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Jester.V1Alpha1.BankRequest.Types.Data> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_targets_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> targets_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Targets {
      get { return targets_; }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Asgt.Jester.V1Alpha1.SuggestionOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.SuggestionOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BankRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BankRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inputs_.Equals(other.inputs_)) return false;
      if(!targets_.Equals(other.targets_)) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inputs_.GetHashCode();
      hash ^= targets_.GetHashCode();
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      inputs_.WriteTo(output, _repeated_inputs_codec);
      targets_.WriteTo(output, _repeated_targets_codec);
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      size += targets_.CalculateSize(_repeated_targets_codec);
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BankRequest other) {
      if (other == null) {
        return;
      }
      inputs_.Add(other.inputs_);
      targets_.Add(other.targets_);
      if (other.options_ != null) {
        if (options_ == null) {
          options_ = new global::Asgt.Jester.V1Alpha1.SuggestionOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 18: {
            targets_.AddEntriesFrom(input, _repeated_targets_codec);
            break;
          }
          case 26: {
            if (options_ == null) {
              options_ = new global::Asgt.Jester.V1Alpha1.SuggestionOptions();
            }
            input.ReadMessage(options_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BankRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Data : pb::IMessage<Data> {
        private static readonly pb::MessageParser<Data> _parser = new pb::MessageParser<Data>(() => new Data());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Data> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Asgt.Jester.V1Alpha1.BankRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data(Data other) : this() {
          accountNumber_ = other.accountNumber_;
          Amount = other.Amount;
          entryType_ = other.entryType_;
          text_ = other.text_;
          timeStamp_ = other.timeStamp_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Data Clone() {
          return new Data(this);
        }

        /// <summary>Field number for the "account_number" field.</summary>
        public const int AccountNumberFieldNumber = 1;
        private int accountNumber_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int AccountNumber {
          get { return accountNumber_; }
          set {
            accountNumber_ = value;
          }
        }

        /// <summary>Field number for the "amount" field.</summary>
        public const int AmountFieldNumber = 2;
        private static readonly pb::FieldCodec<float?> _single_amount_codec = pb::FieldCodec.ForStructWrapper<float>(18);
        private float? amount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float? Amount {
          get { return amount_; }
          set {
            amount_ = value;
          }
        }

        /// <summary>Field number for the "entry_type" field.</summary>
        public const int EntryTypeFieldNumber = 3;
        private int entryType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int EntryType {
          get { return entryType_; }
          set {
            entryType_ = value;
          }
        }

        /// <summary>Field number for the "text" field.</summary>
        public const int TextFieldNumber = 4;
        private string text_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Text {
          get { return text_; }
          set {
            text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "time_stamp" field.</summary>
        public const int TimeStampFieldNumber = 5;
        private int timeStamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int TimeStamp {
          get { return timeStamp_; }
          set {
            timeStamp_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Data);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Data other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AccountNumber != other.AccountNumber) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(Amount, other.Amount)) return false;
          if (EntryType != other.EntryType) return false;
          if (Text != other.Text) return false;
          if (TimeStamp != other.TimeStamp) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AccountNumber != 0) hash ^= AccountNumber.GetHashCode();
          if (amount_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(Amount);
          if (EntryType != 0) hash ^= EntryType.GetHashCode();
          if (Text.Length != 0) hash ^= Text.GetHashCode();
          if (TimeStamp != 0) hash ^= TimeStamp.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (AccountNumber != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(AccountNumber);
          }
          if (amount_ != null) {
            _single_amount_codec.WriteTagAndValue(output, Amount);
          }
          if (EntryType != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(EntryType);
          }
          if (Text.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Text);
          }
          if (TimeStamp != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(TimeStamp);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AccountNumber != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(AccountNumber);
          }
          if (amount_ != null) {
            size += _single_amount_codec.CalculateSizeWithTag(Amount);
          }
          if (EntryType != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(EntryType);
          }
          if (Text.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
          }
          if (TimeStamp != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeStamp);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Data other) {
          if (other == null) {
            return;
          }
          if (other.AccountNumber != 0) {
            AccountNumber = other.AccountNumber;
          }
          if (other.amount_ != null) {
            if (amount_ == null || other.Amount != 0F) {
              Amount = other.Amount;
            }
          }
          if (other.EntryType != 0) {
            EntryType = other.EntryType;
          }
          if (other.Text.Length != 0) {
            Text = other.Text;
          }
          if (other.TimeStamp != 0) {
            TimeStamp = other.TimeStamp;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AccountNumber = input.ReadInt32();
                break;
              }
              case 18: {
                float? value = _single_amount_codec.Read(input);
                if (amount_ == null || value != 0F) {
                  Amount = value;
                }
                break;
              }
              case 24: {
                EntryType = input.ReadInt32();
                break;
              }
              case 34: {
                Text = input.ReadString();
                break;
              }
              case 40: {
                TimeStamp = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
