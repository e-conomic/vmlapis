// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gen_bq_schema/bq_field.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GenBqSchema {

  /// <summary>Holder for reflection information generated from gen_bq_schema/bq_field.proto</summary>
  public static partial class BqFieldReflection {

    #region Descriptor
    /// <summary>File descriptor for gen_bq_schema/bq_field.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BqFieldReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxnZW5fYnFfc2NoZW1hL2JxX2ZpZWxkLnByb3RvEg1nZW5fYnFfc2NoZW1h",
            "GiBnb29nbGUvcHJvdG9idWYvZGVzY3JpcHRvci5wcm90byJxChRCaWdRdWVy",
            "eUZpZWxkT3B0aW9ucxIPCgdyZXF1aXJlGAEgASgIEhUKDXR5cGVfb3ZlcnJp",
            "ZGUYAiABKAkSDgoGaWdub3JlGAMgASgIEhMKC2Rlc2NyaXB0aW9uGAQgASgJ",
            "EgwKBG5hbWUYBSABKAk6VQoIYmlncXVlcnkSHS5nb29nbGUucHJvdG9idWYu",
            "RmllbGRPcHRpb25zGP0HIAEoCzIjLmdlbl9icV9zY2hlbWEuQmlnUXVlcnlG",
            "aWVsZE9wdGlvbnNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { pbr::FileDescriptor.DescriptorProtoFileDescriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GenBqSchema.BigQueryFieldOptions), global::GenBqSchema.BigQueryFieldOptions.Parser, new[]{ "Require", "TypeOverride", "Ignore", "Description", "Name" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Message containing options related to BigQuery schema generation
  /// and management via Protobuf.
  /// </summary>
  public sealed partial class BigQueryFieldOptions : pb::IMessage<BigQueryFieldOptions> {
    private static readonly pb::MessageParser<BigQueryFieldOptions> _parser = new pb::MessageParser<BigQueryFieldOptions>(() => new BigQueryFieldOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BigQueryFieldOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GenBqSchema.BqFieldReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryFieldOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryFieldOptions(BigQueryFieldOptions other) : this() {
      require_ = other.require_;
      typeOverride_ = other.typeOverride_;
      ignore_ = other.ignore_;
      description_ = other.description_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigQueryFieldOptions Clone() {
      return new BigQueryFieldOptions(this);
    }

    /// <summary>Field number for the "require" field.</summary>
    public const int RequireFieldNumber = 1;
    private bool require_;
    /// <summary>
    /// Flag to specify that a field should be marked as 'REQUIRED' when
    /// used to generate schema for BigQuery.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Require {
      get { return require_; }
      set {
        require_ = value;
      }
    }

    /// <summary>Field number for the "type_override" field.</summary>
    public const int TypeOverrideFieldNumber = 2;
    private string typeOverride_ = "";
    /// <summary>
    /// Optionally override whatever type is resolved by the schema
    /// generator. This is useful, for example, to store epoch timestamps
    /// with the underlying 'TIMESTAMP' type, when normally, they would
    /// be structured as 'INTEGER' fields.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TypeOverride {
      get { return typeOverride_; }
      set {
        typeOverride_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ignore" field.</summary>
    public const int IgnoreFieldNumber = 3;
    private bool ignore_;
    /// <summary>
    /// Optionally omit a field from BigQuery schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ignore {
      get { return ignore_; }
      set {
        ignore_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// Set the description for a field in BigQuery schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// Customize the name of the field in the BigQuery schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BigQueryFieldOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BigQueryFieldOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Require != other.Require) return false;
      if (TypeOverride != other.TypeOverride) return false;
      if (Ignore != other.Ignore) return false;
      if (Description != other.Description) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Require != false) hash ^= Require.GetHashCode();
      if (TypeOverride.Length != 0) hash ^= TypeOverride.GetHashCode();
      if (Ignore != false) hash ^= Ignore.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Require != false) {
        output.WriteRawTag(8);
        output.WriteBool(Require);
      }
      if (TypeOverride.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TypeOverride);
      }
      if (Ignore != false) {
        output.WriteRawTag(24);
        output.WriteBool(Ignore);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Require != false) {
        size += 1 + 1;
      }
      if (TypeOverride.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeOverride);
      }
      if (Ignore != false) {
        size += 1 + 1;
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BigQueryFieldOptions other) {
      if (other == null) {
        return;
      }
      if (other.Require != false) {
        Require = other.Require;
      }
      if (other.TypeOverride.Length != 0) {
        TypeOverride = other.TypeOverride;
      }
      if (other.Ignore != false) {
        Ignore = other.Ignore;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Require = input.ReadBool();
            break;
          }
          case 18: {
            TypeOverride = input.ReadString();
            break;
          }
          case 24: {
            Ignore = input.ReadBool();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
