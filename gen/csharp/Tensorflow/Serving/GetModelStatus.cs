// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tensorflow_serving/apis/get_model_status.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tensorflow.Serving {

  /// <summary>Holder for reflection information generated from tensorflow_serving/apis/get_model_status.proto</summary>
  public static partial class GetModelStatusReflection {

    #region Descriptor
    /// <summary>File descriptor for tensorflow_serving/apis/get_model_status.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GetModelStatusReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci50ZW5zb3JmbG93X3NlcnZpbmcvYXBpcy9nZXRfbW9kZWxfc3RhdHVzLnBy",
            "b3RvEhJ0ZW5zb3JmbG93LnNlcnZpbmcaI3RlbnNvcmZsb3dfc2VydmluZy9h",
            "cGlzL21vZGVsLnByb3RvGiR0ZW5zb3JmbG93X3NlcnZpbmcvdXRpbC9zdGF0",
            "dXMucHJvdG8iSgoVR2V0TW9kZWxTdGF0dXNSZXF1ZXN0EjEKCm1vZGVsX3Nw",
            "ZWMYASABKAsyHS50ZW5zb3JmbG93LnNlcnZpbmcuTW9kZWxTcGVjIugBChJN",
            "b2RlbFZlcnNpb25TdGF0dXMSDwoHdmVyc2lvbhgBIAEoAxI7CgVzdGF0ZRgC",
            "IAEoDjIsLnRlbnNvcmZsb3cuc2VydmluZy5Nb2RlbFZlcnNpb25TdGF0dXMu",
            "U3RhdGUSLwoGc3RhdHVzGAMgASgLMh8udGVuc29yZmxvdy5zZXJ2aW5nLlN0",
            "YXR1c1Byb3RvIlMKBVN0YXRlEgsKB1VOS05PV04QABIJCgVTVEFSVBAKEgsK",
            "B0xPQURJTkcQFBINCglBVkFJTEFCTEUQHhINCglVTkxPQURJTkcQKBIHCgNF",
            "TkQQMiJ0ChZHZXRNb2RlbFN0YXR1c1Jlc3BvbnNlEloKFG1vZGVsX3ZlcnNp",
            "b25fc3RhdHVzGAEgAygLMiYudGVuc29yZmxvdy5zZXJ2aW5nLk1vZGVsVmVy",
            "c2lvblN0YXR1c1IUbW9kZWxfdmVyc2lvbl9zdGF0dXNCA/gBAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tensorflow.Serving.ModelReflection.Descriptor, global::Tensorflow.Serving.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Serving.GetModelStatusRequest), global::Tensorflow.Serving.GetModelStatusRequest.Parser, new[]{ "ModelSpec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Serving.ModelVersionStatus), global::Tensorflow.Serving.ModelVersionStatus.Parser, new[]{ "Version", "State", "Status" }, null, new[]{ typeof(global::Tensorflow.Serving.ModelVersionStatus.Types.State) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Serving.GetModelStatusResponse), global::Tensorflow.Serving.GetModelStatusResponse.Parser, new[]{ "ModelVersionStatus" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// GetModelStatusRequest contains a ModelSpec indicating the tfserving for which
  /// to get status.
  /// </summary>
  public sealed partial class GetModelStatusRequest : pb::IMessage<GetModelStatusRequest> {
    private static readonly pb::MessageParser<GetModelStatusRequest> _parser = new pb::MessageParser<GetModelStatusRequest>(() => new GetModelStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetModelStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Serving.GetModelStatusReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelStatusRequest(GetModelStatusRequest other) : this() {
      modelSpec_ = other.modelSpec_ != null ? other.modelSpec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelStatusRequest Clone() {
      return new GetModelStatusRequest(this);
    }

    /// <summary>Field number for the "model_spec" field.</summary>
    public const int ModelSpecFieldNumber = 1;
    private global::Tensorflow.Serving.ModelSpec modelSpec_;
    /// <summary>
    /// Model Specification. If version is not specified, information about all
    /// versions of the tfserving will be returned. If a version is specified, the
    /// status of only that version will be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Serving.ModelSpec ModelSpec {
      get { return modelSpec_; }
      set {
        modelSpec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetModelStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetModelStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ModelSpec, other.ModelSpec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (modelSpec_ != null) hash ^= ModelSpec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (modelSpec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ModelSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (modelSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelSpec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetModelStatusRequest other) {
      if (other == null) {
        return;
      }
      if (other.modelSpec_ != null) {
        if (modelSpec_ == null) {
          modelSpec_ = new global::Tensorflow.Serving.ModelSpec();
        }
        ModelSpec.MergeFrom(other.ModelSpec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (modelSpec_ == null) {
              modelSpec_ = new global::Tensorflow.Serving.ModelSpec();
            }
            input.ReadMessage(modelSpec_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Version number, state, and status for a single version of a tfserving.
  /// </summary>
  public sealed partial class ModelVersionStatus : pb::IMessage<ModelVersionStatus> {
    private static readonly pb::MessageParser<ModelVersionStatus> _parser = new pb::MessageParser<ModelVersionStatus>(() => new ModelVersionStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelVersionStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Serving.GetModelStatusReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelVersionStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelVersionStatus(ModelVersionStatus other) : this() {
      version_ = other.version_;
      state_ = other.state_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelVersionStatus Clone() {
      return new ModelVersionStatus(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private long version_;
    /// <summary>
    /// Model version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Tensorflow.Serving.ModelVersionStatus.Types.State state_ = 0;
    /// <summary>
    /// Model state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Serving.ModelVersionStatus.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Tensorflow.Serving.StatusProto status_;
    /// <summary>
    /// Model status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Serving.StatusProto Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelVersionStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelVersionStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (State != other.State) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0L) hash ^= Version.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Version);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Version);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelVersionStatus other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0L) {
        Version = other.Version;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::Tensorflow.Serving.StatusProto();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt64();
            break;
          }
          case 16: {
            state_ = (global::Tensorflow.Serving.ModelVersionStatus.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            if (status_ == null) {
              status_ = new global::Tensorflow.Serving.StatusProto();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ModelVersionStatus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// States that map to ManagerState enum in
      /// tensorflow_serving/core/servable_state.h
      /// </summary>
      public enum State {
        /// <summary>
        /// Default value.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        /// <summary>
        /// The manager is tracking this servable, but has not initiated any action
        /// pertaining to it.
        /// </summary>
        [pbr::OriginalName("START")] Start = 10,
        /// <summary>
        /// The manager has decided to load this servable. In particular, checks
        /// around resource availability and other aspects have passed, and the
        /// manager is about to invoke the loader's Load() method.
        /// </summary>
        [pbr::OriginalName("LOADING")] Loading = 20,
        /// <summary>
        /// The manager has successfully loaded this servable and made it available
        /// for serving (i.e. GetServableHandle(id) will succeed). To avoid races,
        /// this state is not reported until *after* the servable is made
        /// available.
        /// </summary>
        [pbr::OriginalName("AVAILABLE")] Available = 30,
        /// <summary>
        /// The manager has decided to make this servable unavailable, and unload
        /// it. To avoid races, this state is reported *before* the servable is
        /// made unavailable.
        /// </summary>
        [pbr::OriginalName("UNLOADING")] Unloading = 40,
        /// <summary>
        /// This servable has reached the end of its journey in the manager. Either
        /// it loaded and ultimately unloaded successfully, or it hit an core at
        /// some point in its lifecycle.
        /// </summary>
        [pbr::OriginalName("END")] End = 50,
      }

    }
    #endregion

  }

  /// <summary>
  /// Response for ModelStatusRequest on successful run.
  /// </summary>
  public sealed partial class GetModelStatusResponse : pb::IMessage<GetModelStatusResponse> {
    private static readonly pb::MessageParser<GetModelStatusResponse> _parser = new pb::MessageParser<GetModelStatusResponse>(() => new GetModelStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetModelStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Serving.GetModelStatusReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelStatusResponse(GetModelStatusResponse other) : this() {
      modelVersionStatus_ = other.modelVersionStatus_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelStatusResponse Clone() {
      return new GetModelStatusResponse(this);
    }

    /// <summary>Field number for the "model_version_status" field.</summary>
    public const int ModelVersionStatusFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tensorflow.Serving.ModelVersionStatus> _repeated_modelVersionStatus_codec
        = pb::FieldCodec.ForMessage(10, global::Tensorflow.Serving.ModelVersionStatus.Parser);
    private readonly pbc::RepeatedField<global::Tensorflow.Serving.ModelVersionStatus> modelVersionStatus_ = new pbc::RepeatedField<global::Tensorflow.Serving.ModelVersionStatus>();
    /// <summary>
    /// Version number and status information for applicable tfserving version(s).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tensorflow.Serving.ModelVersionStatus> ModelVersionStatus {
      get { return modelVersionStatus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetModelStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetModelStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!modelVersionStatus_.Equals(other.modelVersionStatus_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= modelVersionStatus_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      modelVersionStatus_.WriteTo(output, _repeated_modelVersionStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += modelVersionStatus_.CalculateSize(_repeated_modelVersionStatus_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetModelStatusResponse other) {
      if (other == null) {
        return;
      }
      modelVersionStatus_.Add(other.modelVersionStatus_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            modelVersionStatus_.AddEntriesFrom(input, _repeated_modelVersionStatus_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
