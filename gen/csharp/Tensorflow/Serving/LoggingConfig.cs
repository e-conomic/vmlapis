// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tensorflow_serving/config/logging_config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tensorflow.Serving {

  /// <summary>Holder for reflection information generated from tensorflow_serving/config/logging_config.proto</summary>
  public static partial class LoggingConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for tensorflow_serving/config/logging_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoggingConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci50ZW5zb3JmbG93X3NlcnZpbmcvY29uZmlnL2xvZ2dpbmdfY29uZmlnLnBy",
            "b3RvEhJ0ZW5zb3JmbG93LnNlcnZpbmcaNHRlbnNvcmZsb3dfc2VydmluZy9j",
            "b25maWcvbG9nX2NvbGxlY3Rvcl9jb25maWcucHJvdG8iJwoOU2FtcGxpbmdD",
            "b25maWcSFQoNc2FtcGxpbmdfcmF0ZRgBIAEoASKSAQoNTG9nZ2luZ0NvbmZp",
            "ZxJEChRsb2dfY29sbGVjdG9yX2NvbmZpZxgBIAEoCzImLnRlbnNvcmZsb3cu",
            "c2VydmluZy5Mb2dDb2xsZWN0b3JDb25maWcSOwoPc2FtcGxpbmdfY29uZmln",
            "GAIgASgLMiIudGVuc29yZmxvdy5zZXJ2aW5nLlNhbXBsaW5nQ29uZmlnQgP4",
            "AQFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tensorflow.Serving.LogCollectorConfigReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Serving.SamplingConfig), global::Tensorflow.Serving.SamplingConfig.Parser, new[]{ "SamplingRate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tensorflow.Serving.LoggingConfig), global::Tensorflow.Serving.LoggingConfig.Parser, new[]{ "LogCollectorConfig", "SamplingConfig" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SamplingConfig : pb::IMessage<SamplingConfig> {
    private static readonly pb::MessageParser<SamplingConfig> _parser = new pb::MessageParser<SamplingConfig>(() => new SamplingConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SamplingConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Serving.LoggingConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SamplingConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SamplingConfig(SamplingConfig other) : this() {
      samplingRate_ = other.samplingRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SamplingConfig Clone() {
      return new SamplingConfig(this);
    }

    /// <summary>Field number for the "sampling_rate" field.</summary>
    public const int SamplingRateFieldNumber = 1;
    private double samplingRate_;
    /// <summary>
    /// Requests will be logged uniformly at random with this probability. Valid
    /// range: [0, 1.0].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double SamplingRate {
      get { return samplingRate_; }
      set {
        samplingRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SamplingConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SamplingConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SamplingRate, other.SamplingRate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SamplingRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SamplingRate);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SamplingRate != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(SamplingRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SamplingRate != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SamplingConfig other) {
      if (other == null) {
        return;
      }
      if (other.SamplingRate != 0D) {
        SamplingRate = other.SamplingRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SamplingRate = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration for logging query/responses.
  /// </summary>
  public sealed partial class LoggingConfig : pb::IMessage<LoggingConfig> {
    private static readonly pb::MessageParser<LoggingConfig> _parser = new pb::MessageParser<LoggingConfig>(() => new LoggingConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoggingConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tensorflow.Serving.LoggingConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoggingConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoggingConfig(LoggingConfig other) : this() {
      logCollectorConfig_ = other.logCollectorConfig_ != null ? other.logCollectorConfig_.Clone() : null;
      samplingConfig_ = other.samplingConfig_ != null ? other.samplingConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoggingConfig Clone() {
      return new LoggingConfig(this);
    }

    /// <summary>Field number for the "log_collector_config" field.</summary>
    public const int LogCollectorConfigFieldNumber = 1;
    private global::Tensorflow.Serving.LogCollectorConfig logCollectorConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Serving.LogCollectorConfig LogCollectorConfig {
      get { return logCollectorConfig_; }
      set {
        logCollectorConfig_ = value;
      }
    }

    /// <summary>Field number for the "sampling_config" field.</summary>
    public const int SamplingConfigFieldNumber = 2;
    private global::Tensorflow.Serving.SamplingConfig samplingConfig_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Serving.SamplingConfig SamplingConfig {
      get { return samplingConfig_; }
      set {
        samplingConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoggingConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoggingConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogCollectorConfig, other.LogCollectorConfig)) return false;
      if (!object.Equals(SamplingConfig, other.SamplingConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (logCollectorConfig_ != null) hash ^= LogCollectorConfig.GetHashCode();
      if (samplingConfig_ != null) hash ^= SamplingConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (logCollectorConfig_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogCollectorConfig);
      }
      if (samplingConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SamplingConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (logCollectorConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogCollectorConfig);
      }
      if (samplingConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SamplingConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoggingConfig other) {
      if (other == null) {
        return;
      }
      if (other.logCollectorConfig_ != null) {
        if (logCollectorConfig_ == null) {
          logCollectorConfig_ = new global::Tensorflow.Serving.LogCollectorConfig();
        }
        LogCollectorConfig.MergeFrom(other.LogCollectorConfig);
      }
      if (other.samplingConfig_ != null) {
        if (samplingConfig_ == null) {
          samplingConfig_ = new global::Tensorflow.Serving.SamplingConfig();
        }
        SamplingConfig.MergeFrom(other.SamplingConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logCollectorConfig_ == null) {
              logCollectorConfig_ = new global::Tensorflow.Serving.LogCollectorConfig();
            }
            input.ReadMessage(logCollectorConfig_);
            break;
          }
          case 18: {
            if (samplingConfig_ == null) {
              samplingConfig_ = new global::Tensorflow.Serving.SamplingConfig();
            }
            input.ReadMessage(samplingConfig_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
