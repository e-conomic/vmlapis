// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ssn/mlservice/v2/mlservice.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Ssn.Mlservice.V2 {

  /// <summary>Holder for reflection information generated from ssn/mlservice/v2/mlservice.proto</summary>
  public static partial class MlserviceReflection {

    #region Descriptor
    /// <summary>File descriptor for ssn/mlservice/v2/mlservice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MlserviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBzc24vbWxzZXJ2aWNlL3YyL21sc2VydmljZS5wcm90bxIQc3NuLm1sc2Vy",
            "dmljZS52MhoWZ29vZ2xlL3R5cGUvZGF0ZS5wcm90bxoZc3NuL3R5cGVzL2Nh",
            "bmRpZGF0ZS5wcm90bxofc3NuL3R5cGVzL3RleHRfYW5ub3RhdGlvbi5wcm90",
            "bxoldGVuc29yZmxvdy9jb3JlL2V4YW1wbGUvZXhhbXBsZS5wcm90byKiBgoR",
            "RmVhdHVyZUdlblJlcXVlc3QSRQoMdHJ1dGhfbGFiZWxzGAEgASgLMi8uc3Nu",
            "Lm1sc2VydmljZS52Mi5GZWF0dXJlR2VuUmVxdWVzdC5UcnV0aExhYmVscxIx",
            "Cg90ZXh0X2Fubm90YXRpb24YAiABKAsyGC5zc24udHlwZS5UZXh0QW5ub3Rh",
            "dGlvbhIKCgJpZBgDIAEoCRqGBQoLVHJ1dGhMYWJlbHMSFgoOdG90YWxfaW5j",
            "bF92YXQYASABKAESEQoJdG90YWxfdmF0GAIgASgBEhYKDnRvdGFsX2V4Y2xf",
            "dmF0GAMgASgBEiUKCm9yZGVyX2RhdGUYBCABKAsyES5nb29nbGUudHlwZS5E",
            "YXRlEisKEHBheW1lbnRfZHVlX2RhdGUYBSABKAsyES5nb29nbGUudHlwZS5E",
            "YXRlEhUKDWRvY3VtZW50X3R5cGUYBiABKAkSEAoIY3VycmVuY3kYByABKAkS",
            "GgoSY3JlZGl0X2NhcmRfbnVtYmVyGAggASgJEhYKDnBheW1lbnRfbWV0aG9k",
            "GAkgASgJEhgKEG9jcl9saW5lX2RrX3R5cGUYCiABKAkSHgoWb2NyX2xpbmVf",
            "ZGtfcGF5bWVudF9pZBgLIAEoCRIfChdvY3JfbGluZV9ka19jcmVkaXRvcl9p",
            "ZBgMIAEoCRIeChZvY3JfbGluZV9zZV9wYXltZW50X2lkGA0gASgJEigKIG9j",
            "cl9saW5lX3NlX2JhbmtnaXJvX2NyZWRpdG9yX2lkGA4gASgJEigKIG9jcl9s",
            "aW5lX3NlX3BsdXNnaXJvX2NyZWRpdG9yX2lkGA8gASgJEh4KFm9jcl9saW5l",
            "X25vX3BheW1lbnRfaWQYECABKAkSHgoWb2NyX2xpbmVfZmlfcGF5bWVudF9p",
            "ZBgRIAEoCRIeChZvY3JfbGluZV9ubF9wYXltZW50X2lkGBIgASgJEh0KFXN1",
            "cHBsaWVyX2NvcnBvcmF0ZV9pZBgTIAEoCRIdChVzdXBwbGllcl9jb3VudHJ5",
            "X2NvZGUYFCABKAkSFgoOaW52b2ljZV9udW1iZXIYFSABKAkiOgoSRmVhdHVy",
            "ZUdlblJlc3BvbnNlEiQKB2V4YW1wbGUYASABKAsyEy50ZW5zb3JmbG93LkV4",
            "YW1wbGUiVAoOUHJlZGljdFJlcXVlc3QSJAoHZXhhbXBsZRgBIAEoCzITLnRl",
            "bnNvcmZsb3cuRXhhbXBsZRIcChR0b3Bfbl9tb3N0X2NvbmZpZGVudBgCIAEo",
            "DSLoCAoPUHJlZGljdFJlc3BvbnNlEicKCm9yZGVyX2RhdGUYASADKAsyEy5z",
            "c24udHlwZS5DYW5kaWRhdGUSLQoQcGF5bWVudF9kdWVfZGF0ZRgCIAMoCzIT",
            "LnNzbi50eXBlLkNhbmRpZGF0ZRIlCghjdXJyZW5jeRgDIAMoCzITLnNzbi50",
            "eXBlLkNhbmRpZGF0ZRImCgl0b3RhbF92YXQYBCADKAsyEy5zc24udHlwZS5D",
            "YW5kaWRhdGUSKwoOdG90YWxfaW5jbF92YXQYBSADKAsyEy5zc24udHlwZS5D",
            "YW5kaWRhdGUSKwoOdG90YWxfZXhjbF92YXQYBiADKAsyEy5zc24udHlwZS5D",
            "YW5kaWRhdGUSMgoVc3VwcGxpZXJfY29ycG9yYXRlX2lkGAcgAygLMhMuc3Nu",
            "LnR5cGUuQ2FuZGlkYXRlEjIKFXN1cHBsaWVyX2NvdW50cnlfY29kZRgIIAMo",
            "CzITLnNzbi50eXBlLkNhbmRpZGF0ZRIqCg1kb2N1bWVudF90eXBlGAkgAygL",
            "MhMuc3NuLnR5cGUuQ2FuZGlkYXRlEisKDnBheW1lbnRfbWV0aG9kGAogAygL",
            "MhMuc3NuLnR5cGUuQ2FuZGlkYXRlEi8KEmNyZWRpdF9jYXJkX251bWJlchgL",
            "IAMoCzITLnNzbi50eXBlLkNhbmRpZGF0ZRIrCg5pbnZvaWNlX251bWJlchgM",
            "IAMoCzITLnNzbi50eXBlLkNhbmRpZGF0ZRItChBvY3JfbGluZV9ka190eXBl",
            "GA0gAygLMhMuc3NuLnR5cGUuQ2FuZGlkYXRlEjMKFm9jcl9saW5lX2RrX3Bh",
            "eW1lbnRfaWQYDiADKAsyEy5zc24udHlwZS5DYW5kaWRhdGUSNAoXb2NyX2xp",
            "bmVfZGtfY3JlZGl0b3JfaWQYDyADKAsyEy5zc24udHlwZS5DYW5kaWRhdGUS",
            "MwoWb2NyX2xpbmVfc2VfcGF5bWVudF9pZBgQIAMoCzITLnNzbi50eXBlLkNh",
            "bmRpZGF0ZRI9CiBvY3JfbGluZV9zZV9iYW5rZ2lyb19jcmVkaXRvcl9pZBgR",
            "IAMoCzITLnNzbi50eXBlLkNhbmRpZGF0ZRI9CiBvY3JfbGluZV9zZV9wbHVz",
            "Z2lyb19jcmVkaXRvcl9pZBgSIAMoCzITLnNzbi50eXBlLkNhbmRpZGF0ZRIz",
            "ChZvY3JfbGluZV9ub19wYXltZW50X2lkGBMgAygLMhMuc3NuLnR5cGUuQ2Fu",
            "ZGlkYXRlEjMKFm9jcl9saW5lX2ZpX3BheW1lbnRfaWQYFCADKAsyEy5zc24u",
            "dHlwZS5DYW5kaWRhdGUSMwoWb2NyX2xpbmVfbmxfcGF5bWVudF9pZBgVIAMo",
            "CzITLnNzbi50eXBlLkNhbmRpZGF0ZRIhCgRpYmFuGBYgAygLMhMuc3NuLnR5",
            "cGUuQ2FuZGlkYXRlEiYKBWxpbmVzGBcgAygLMhcuc3NuLnR5cGUuTGluZUNh",
            "bmRpZGF0ZSKXAQoYRmVhdHVyZUdlblByZWRpY3RSZXF1ZXN0EkAKE2ZlYXR1",
            "cmVfZ2VuX3JlcXVlc3QYASABKAsyIy5zc24ubWxzZXJ2aWNlLnYyLkZlYXR1",
            "cmVHZW5SZXF1ZXN0EjkKD3ByZWRpY3RfcmVxdWVzdBgCIAEoCzIgLnNzbi5t",
            "bHNlcnZpY2UudjIuUHJlZGljdFJlcXVlc3QymAIKCU1sU2VydmljZRJXCgpG",
            "ZWF0dXJlR2VuEiMuc3NuLm1sc2VydmljZS52Mi5GZWF0dXJlR2VuUmVxdWVz",
            "dBokLnNzbi5tbHNlcnZpY2UudjIuRmVhdHVyZUdlblJlc3BvbnNlEk4KB1By",
            "ZWRpY3QSIC5zc24ubWxzZXJ2aWNlLnYyLlByZWRpY3RSZXF1ZXN0GiEuc3Nu",
            "Lm1sc2VydmljZS52Mi5QcmVkaWN0UmVzcG9uc2USYgoRRmVhdHVyZUdlblBy",
            "ZWRpY3QSKi5zc24ubWxzZXJ2aWNlLnYyLkZlYXR1cmVHZW5QcmVkaWN0UmVx",
            "dWVzdBohLnNzbi5tbHNlcnZpY2UudjIuUHJlZGljdFJlc3BvbnNlQgtaCW1s",
            "c2VydmljZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Type.DateReflection.Descriptor, global::Ssn.Type.CandidateReflection.Descriptor, global::Ssn.Type.TextAnnotationReflection.Descriptor, global::Tensorflow.ExampleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Mlservice.V2.FeatureGenRequest), global::Ssn.Mlservice.V2.FeatureGenRequest.Parser, new[]{ "TruthLabels", "TextAnnotation", "Id" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Mlservice.V2.FeatureGenRequest.Types.TruthLabels), global::Ssn.Mlservice.V2.FeatureGenRequest.Types.TruthLabels.Parser, new[]{ "TotalInclVat", "TotalVat", "TotalExclVat", "OrderDate", "PaymentDueDate", "DocumentType", "Currency", "CreditCardNumber", "PaymentMethod", "OcrLineDkType", "OcrLineDkPaymentId", "OcrLineDkCreditorId", "OcrLineSePaymentId", "OcrLineSeBankgiroCreditorId", "OcrLineSePlusgiroCreditorId", "OcrLineNoPaymentId", "OcrLineFiPaymentId", "OcrLineNlPaymentId", "SupplierCorporateId", "SupplierCountryCode", "InvoiceNumber" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Mlservice.V2.FeatureGenResponse), global::Ssn.Mlservice.V2.FeatureGenResponse.Parser, new[]{ "Example" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Mlservice.V2.PredictRequest), global::Ssn.Mlservice.V2.PredictRequest.Parser, new[]{ "Example", "TopNMostConfident" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Mlservice.V2.PredictResponse), global::Ssn.Mlservice.V2.PredictResponse.Parser, new[]{ "OrderDate", "PaymentDueDate", "Currency", "TotalVat", "TotalInclVat", "TotalExclVat", "SupplierCorporateId", "SupplierCountryCode", "DocumentType", "PaymentMethod", "CreditCardNumber", "InvoiceNumber", "OcrLineDkType", "OcrLineDkPaymentId", "OcrLineDkCreditorId", "OcrLineSePaymentId", "OcrLineSeBankgiroCreditorId", "OcrLineSePlusgiroCreditorId", "OcrLineNoPaymentId", "OcrLineFiPaymentId", "OcrLineNlPaymentId", "Iban", "Lines" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Ssn.Mlservice.V2.FeatureGenPredictRequest), global::Ssn.Mlservice.V2.FeatureGenPredictRequest.Parser, new[]{ "FeatureGenRequest", "PredictRequest" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FeatureGenRequest : pb::IMessage<FeatureGenRequest> {
    private static readonly pb::MessageParser<FeatureGenRequest> _parser = new pb::MessageParser<FeatureGenRequest>(() => new FeatureGenRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureGenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Mlservice.V2.MlserviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureGenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureGenRequest(FeatureGenRequest other) : this() {
      truthLabels_ = other.truthLabels_ != null ? other.truthLabels_.Clone() : null;
      textAnnotation_ = other.textAnnotation_ != null ? other.textAnnotation_.Clone() : null;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureGenRequest Clone() {
      return new FeatureGenRequest(this);
    }

    /// <summary>Field number for the "truth_labels" field.</summary>
    public const int TruthLabelsFieldNumber = 1;
    private global::Ssn.Mlservice.V2.FeatureGenRequest.Types.TruthLabels truthLabels_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ssn.Mlservice.V2.FeatureGenRequest.Types.TruthLabels TruthLabels {
      get { return truthLabels_; }
      set {
        truthLabels_ = value;
      }
    }

    /// <summary>Field number for the "text_annotation" field.</summary>
    public const int TextAnnotationFieldNumber = 2;
    private global::Ssn.Type.TextAnnotation textAnnotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ssn.Type.TextAnnotation TextAnnotation {
      get { return textAnnotation_; }
      set {
        textAnnotation_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureGenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureGenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TruthLabels, other.TruthLabels)) return false;
      if (!object.Equals(TextAnnotation, other.TextAnnotation)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (truthLabels_ != null) hash ^= TruthLabels.GetHashCode();
      if (textAnnotation_ != null) hash ^= TextAnnotation.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (truthLabels_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TruthLabels);
      }
      if (textAnnotation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TextAnnotation);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (truthLabels_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TruthLabels);
      }
      if (textAnnotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextAnnotation);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureGenRequest other) {
      if (other == null) {
        return;
      }
      if (other.truthLabels_ != null) {
        if (truthLabels_ == null) {
          truthLabels_ = new global::Ssn.Mlservice.V2.FeatureGenRequest.Types.TruthLabels();
        }
        TruthLabels.MergeFrom(other.TruthLabels);
      }
      if (other.textAnnotation_ != null) {
        if (textAnnotation_ == null) {
          textAnnotation_ = new global::Ssn.Type.TextAnnotation();
        }
        TextAnnotation.MergeFrom(other.TextAnnotation);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (truthLabels_ == null) {
              truthLabels_ = new global::Ssn.Mlservice.V2.FeatureGenRequest.Types.TruthLabels();
            }
            input.ReadMessage(truthLabels_);
            break;
          }
          case 18: {
            if (textAnnotation_ == null) {
              textAnnotation_ = new global::Ssn.Type.TextAnnotation();
            }
            input.ReadMessage(textAnnotation_);
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FeatureGenRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class TruthLabels : pb::IMessage<TruthLabels> {
        private static readonly pb::MessageParser<TruthLabels> _parser = new pb::MessageParser<TruthLabels>(() => new TruthLabels());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TruthLabels> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Ssn.Mlservice.V2.FeatureGenRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TruthLabels() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TruthLabels(TruthLabels other) : this() {
          totalInclVat_ = other.totalInclVat_;
          totalVat_ = other.totalVat_;
          totalExclVat_ = other.totalExclVat_;
          orderDate_ = other.orderDate_ != null ? other.orderDate_.Clone() : null;
          paymentDueDate_ = other.paymentDueDate_ != null ? other.paymentDueDate_.Clone() : null;
          documentType_ = other.documentType_;
          currency_ = other.currency_;
          creditCardNumber_ = other.creditCardNumber_;
          paymentMethod_ = other.paymentMethod_;
          ocrLineDkType_ = other.ocrLineDkType_;
          ocrLineDkPaymentId_ = other.ocrLineDkPaymentId_;
          ocrLineDkCreditorId_ = other.ocrLineDkCreditorId_;
          ocrLineSePaymentId_ = other.ocrLineSePaymentId_;
          ocrLineSeBankgiroCreditorId_ = other.ocrLineSeBankgiroCreditorId_;
          ocrLineSePlusgiroCreditorId_ = other.ocrLineSePlusgiroCreditorId_;
          ocrLineNoPaymentId_ = other.ocrLineNoPaymentId_;
          ocrLineFiPaymentId_ = other.ocrLineFiPaymentId_;
          ocrLineNlPaymentId_ = other.ocrLineNlPaymentId_;
          supplierCorporateId_ = other.supplierCorporateId_;
          supplierCountryCode_ = other.supplierCountryCode_;
          invoiceNumber_ = other.invoiceNumber_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TruthLabels Clone() {
          return new TruthLabels(this);
        }

        /// <summary>Field number for the "total_incl_vat" field.</summary>
        public const int TotalInclVatFieldNumber = 1;
        private double totalInclVat_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double TotalInclVat {
          get { return totalInclVat_; }
          set {
            totalInclVat_ = value;
          }
        }

        /// <summary>Field number for the "total_vat" field.</summary>
        public const int TotalVatFieldNumber = 2;
        private double totalVat_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double TotalVat {
          get { return totalVat_; }
          set {
            totalVat_ = value;
          }
        }

        /// <summary>Field number for the "total_excl_vat" field.</summary>
        public const int TotalExclVatFieldNumber = 3;
        private double totalExclVat_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public double TotalExclVat {
          get { return totalExclVat_; }
          set {
            totalExclVat_ = value;
          }
        }

        /// <summary>Field number for the "order_date" field.</summary>
        public const int OrderDateFieldNumber = 4;
        private global::Google.Type.Date orderDate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Type.Date OrderDate {
          get { return orderDate_; }
          set {
            orderDate_ = value;
          }
        }

        /// <summary>Field number for the "payment_due_date" field.</summary>
        public const int PaymentDueDateFieldNumber = 5;
        private global::Google.Type.Date paymentDueDate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Type.Date PaymentDueDate {
          get { return paymentDueDate_; }
          set {
            paymentDueDate_ = value;
          }
        }

        /// <summary>Field number for the "document_type" field.</summary>
        public const int DocumentTypeFieldNumber = 6;
        private string documentType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DocumentType {
          get { return documentType_; }
          set {
            documentType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "currency" field.</summary>
        public const int CurrencyFieldNumber = 7;
        private string currency_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Currency {
          get { return currency_; }
          set {
            currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "credit_card_number" field.</summary>
        public const int CreditCardNumberFieldNumber = 8;
        private string creditCardNumber_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CreditCardNumber {
          get { return creditCardNumber_; }
          set {
            creditCardNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "payment_method" field.</summary>
        public const int PaymentMethodFieldNumber = 9;
        private string paymentMethod_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PaymentMethod {
          get { return paymentMethod_; }
          set {
            paymentMethod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ocr_line_dk_type" field.</summary>
        public const int OcrLineDkTypeFieldNumber = 10;
        private string ocrLineDkType_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OcrLineDkType {
          get { return ocrLineDkType_; }
          set {
            ocrLineDkType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ocr_line_dk_payment_id" field.</summary>
        public const int OcrLineDkPaymentIdFieldNumber = 11;
        private string ocrLineDkPaymentId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OcrLineDkPaymentId {
          get { return ocrLineDkPaymentId_; }
          set {
            ocrLineDkPaymentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ocr_line_dk_creditor_id" field.</summary>
        public const int OcrLineDkCreditorIdFieldNumber = 12;
        private string ocrLineDkCreditorId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OcrLineDkCreditorId {
          get { return ocrLineDkCreditorId_; }
          set {
            ocrLineDkCreditorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ocr_line_se_payment_id" field.</summary>
        public const int OcrLineSePaymentIdFieldNumber = 13;
        private string ocrLineSePaymentId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OcrLineSePaymentId {
          get { return ocrLineSePaymentId_; }
          set {
            ocrLineSePaymentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ocr_line_se_bankgiro_creditor_id" field.</summary>
        public const int OcrLineSeBankgiroCreditorIdFieldNumber = 14;
        private string ocrLineSeBankgiroCreditorId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OcrLineSeBankgiroCreditorId {
          get { return ocrLineSeBankgiroCreditorId_; }
          set {
            ocrLineSeBankgiroCreditorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ocr_line_se_plusgiro_creditor_id" field.</summary>
        public const int OcrLineSePlusgiroCreditorIdFieldNumber = 15;
        private string ocrLineSePlusgiroCreditorId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OcrLineSePlusgiroCreditorId {
          get { return ocrLineSePlusgiroCreditorId_; }
          set {
            ocrLineSePlusgiroCreditorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ocr_line_no_payment_id" field.</summary>
        public const int OcrLineNoPaymentIdFieldNumber = 16;
        private string ocrLineNoPaymentId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OcrLineNoPaymentId {
          get { return ocrLineNoPaymentId_; }
          set {
            ocrLineNoPaymentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ocr_line_fi_payment_id" field.</summary>
        public const int OcrLineFiPaymentIdFieldNumber = 17;
        private string ocrLineFiPaymentId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OcrLineFiPaymentId {
          get { return ocrLineFiPaymentId_; }
          set {
            ocrLineFiPaymentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ocr_line_nl_payment_id" field.</summary>
        public const int OcrLineNlPaymentIdFieldNumber = 18;
        private string ocrLineNlPaymentId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string OcrLineNlPaymentId {
          get { return ocrLineNlPaymentId_; }
          set {
            ocrLineNlPaymentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "supplier_corporate_id" field.</summary>
        public const int SupplierCorporateIdFieldNumber = 19;
        private string supplierCorporateId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SupplierCorporateId {
          get { return supplierCorporateId_; }
          set {
            supplierCorporateId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "supplier_country_code" field.</summary>
        public const int SupplierCountryCodeFieldNumber = 20;
        private string supplierCountryCode_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SupplierCountryCode {
          get { return supplierCountryCode_; }
          set {
            supplierCountryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "invoice_number" field.</summary>
        public const int InvoiceNumberFieldNumber = 21;
        private string invoiceNumber_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string InvoiceNumber {
          get { return invoiceNumber_; }
          set {
            invoiceNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TruthLabels);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TruthLabels other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalInclVat, other.TotalInclVat)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalVat, other.TotalVat)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalExclVat, other.TotalExclVat)) return false;
          if (!object.Equals(OrderDate, other.OrderDate)) return false;
          if (!object.Equals(PaymentDueDate, other.PaymentDueDate)) return false;
          if (DocumentType != other.DocumentType) return false;
          if (Currency != other.Currency) return false;
          if (CreditCardNumber != other.CreditCardNumber) return false;
          if (PaymentMethod != other.PaymentMethod) return false;
          if (OcrLineDkType != other.OcrLineDkType) return false;
          if (OcrLineDkPaymentId != other.OcrLineDkPaymentId) return false;
          if (OcrLineDkCreditorId != other.OcrLineDkCreditorId) return false;
          if (OcrLineSePaymentId != other.OcrLineSePaymentId) return false;
          if (OcrLineSeBankgiroCreditorId != other.OcrLineSeBankgiroCreditorId) return false;
          if (OcrLineSePlusgiroCreditorId != other.OcrLineSePlusgiroCreditorId) return false;
          if (OcrLineNoPaymentId != other.OcrLineNoPaymentId) return false;
          if (OcrLineFiPaymentId != other.OcrLineFiPaymentId) return false;
          if (OcrLineNlPaymentId != other.OcrLineNlPaymentId) return false;
          if (SupplierCorporateId != other.SupplierCorporateId) return false;
          if (SupplierCountryCode != other.SupplierCountryCode) return false;
          if (InvoiceNumber != other.InvoiceNumber) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TotalInclVat != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalInclVat);
          if (TotalVat != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalVat);
          if (TotalExclVat != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalExclVat);
          if (orderDate_ != null) hash ^= OrderDate.GetHashCode();
          if (paymentDueDate_ != null) hash ^= PaymentDueDate.GetHashCode();
          if (DocumentType.Length != 0) hash ^= DocumentType.GetHashCode();
          if (Currency.Length != 0) hash ^= Currency.GetHashCode();
          if (CreditCardNumber.Length != 0) hash ^= CreditCardNumber.GetHashCode();
          if (PaymentMethod.Length != 0) hash ^= PaymentMethod.GetHashCode();
          if (OcrLineDkType.Length != 0) hash ^= OcrLineDkType.GetHashCode();
          if (OcrLineDkPaymentId.Length != 0) hash ^= OcrLineDkPaymentId.GetHashCode();
          if (OcrLineDkCreditorId.Length != 0) hash ^= OcrLineDkCreditorId.GetHashCode();
          if (OcrLineSePaymentId.Length != 0) hash ^= OcrLineSePaymentId.GetHashCode();
          if (OcrLineSeBankgiroCreditorId.Length != 0) hash ^= OcrLineSeBankgiroCreditorId.GetHashCode();
          if (OcrLineSePlusgiroCreditorId.Length != 0) hash ^= OcrLineSePlusgiroCreditorId.GetHashCode();
          if (OcrLineNoPaymentId.Length != 0) hash ^= OcrLineNoPaymentId.GetHashCode();
          if (OcrLineFiPaymentId.Length != 0) hash ^= OcrLineFiPaymentId.GetHashCode();
          if (OcrLineNlPaymentId.Length != 0) hash ^= OcrLineNlPaymentId.GetHashCode();
          if (SupplierCorporateId.Length != 0) hash ^= SupplierCorporateId.GetHashCode();
          if (SupplierCountryCode.Length != 0) hash ^= SupplierCountryCode.GetHashCode();
          if (InvoiceNumber.Length != 0) hash ^= InvoiceNumber.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TotalInclVat != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(TotalInclVat);
          }
          if (TotalVat != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(TotalVat);
          }
          if (TotalExclVat != 0D) {
            output.WriteRawTag(25);
            output.WriteDouble(TotalExclVat);
          }
          if (orderDate_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(OrderDate);
          }
          if (paymentDueDate_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(PaymentDueDate);
          }
          if (DocumentType.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DocumentType);
          }
          if (Currency.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Currency);
          }
          if (CreditCardNumber.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(CreditCardNumber);
          }
          if (PaymentMethod.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(PaymentMethod);
          }
          if (OcrLineDkType.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(OcrLineDkType);
          }
          if (OcrLineDkPaymentId.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(OcrLineDkPaymentId);
          }
          if (OcrLineDkCreditorId.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(OcrLineDkCreditorId);
          }
          if (OcrLineSePaymentId.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(OcrLineSePaymentId);
          }
          if (OcrLineSeBankgiroCreditorId.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(OcrLineSeBankgiroCreditorId);
          }
          if (OcrLineSePlusgiroCreditorId.Length != 0) {
            output.WriteRawTag(122);
            output.WriteString(OcrLineSePlusgiroCreditorId);
          }
          if (OcrLineNoPaymentId.Length != 0) {
            output.WriteRawTag(130, 1);
            output.WriteString(OcrLineNoPaymentId);
          }
          if (OcrLineFiPaymentId.Length != 0) {
            output.WriteRawTag(138, 1);
            output.WriteString(OcrLineFiPaymentId);
          }
          if (OcrLineNlPaymentId.Length != 0) {
            output.WriteRawTag(146, 1);
            output.WriteString(OcrLineNlPaymentId);
          }
          if (SupplierCorporateId.Length != 0) {
            output.WriteRawTag(154, 1);
            output.WriteString(SupplierCorporateId);
          }
          if (SupplierCountryCode.Length != 0) {
            output.WriteRawTag(162, 1);
            output.WriteString(SupplierCountryCode);
          }
          if (InvoiceNumber.Length != 0) {
            output.WriteRawTag(170, 1);
            output.WriteString(InvoiceNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TotalInclVat != 0D) {
            size += 1 + 8;
          }
          if (TotalVat != 0D) {
            size += 1 + 8;
          }
          if (TotalExclVat != 0D) {
            size += 1 + 8;
          }
          if (orderDate_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderDate);
          }
          if (paymentDueDate_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PaymentDueDate);
          }
          if (DocumentType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DocumentType);
          }
          if (Currency.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
          }
          if (CreditCardNumber.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CreditCardNumber);
          }
          if (PaymentMethod.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PaymentMethod);
          }
          if (OcrLineDkType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OcrLineDkType);
          }
          if (OcrLineDkPaymentId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OcrLineDkPaymentId);
          }
          if (OcrLineDkCreditorId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OcrLineDkCreditorId);
          }
          if (OcrLineSePaymentId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OcrLineSePaymentId);
          }
          if (OcrLineSeBankgiroCreditorId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OcrLineSeBankgiroCreditorId);
          }
          if (OcrLineSePlusgiroCreditorId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OcrLineSePlusgiroCreditorId);
          }
          if (OcrLineNoPaymentId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(OcrLineNoPaymentId);
          }
          if (OcrLineFiPaymentId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(OcrLineFiPaymentId);
          }
          if (OcrLineNlPaymentId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(OcrLineNlPaymentId);
          }
          if (SupplierCorporateId.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(SupplierCorporateId);
          }
          if (SupplierCountryCode.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(SupplierCountryCode);
          }
          if (InvoiceNumber.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(InvoiceNumber);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TruthLabels other) {
          if (other == null) {
            return;
          }
          if (other.TotalInclVat != 0D) {
            TotalInclVat = other.TotalInclVat;
          }
          if (other.TotalVat != 0D) {
            TotalVat = other.TotalVat;
          }
          if (other.TotalExclVat != 0D) {
            TotalExclVat = other.TotalExclVat;
          }
          if (other.orderDate_ != null) {
            if (orderDate_ == null) {
              orderDate_ = new global::Google.Type.Date();
            }
            OrderDate.MergeFrom(other.OrderDate);
          }
          if (other.paymentDueDate_ != null) {
            if (paymentDueDate_ == null) {
              paymentDueDate_ = new global::Google.Type.Date();
            }
            PaymentDueDate.MergeFrom(other.PaymentDueDate);
          }
          if (other.DocumentType.Length != 0) {
            DocumentType = other.DocumentType;
          }
          if (other.Currency.Length != 0) {
            Currency = other.Currency;
          }
          if (other.CreditCardNumber.Length != 0) {
            CreditCardNumber = other.CreditCardNumber;
          }
          if (other.PaymentMethod.Length != 0) {
            PaymentMethod = other.PaymentMethod;
          }
          if (other.OcrLineDkType.Length != 0) {
            OcrLineDkType = other.OcrLineDkType;
          }
          if (other.OcrLineDkPaymentId.Length != 0) {
            OcrLineDkPaymentId = other.OcrLineDkPaymentId;
          }
          if (other.OcrLineDkCreditorId.Length != 0) {
            OcrLineDkCreditorId = other.OcrLineDkCreditorId;
          }
          if (other.OcrLineSePaymentId.Length != 0) {
            OcrLineSePaymentId = other.OcrLineSePaymentId;
          }
          if (other.OcrLineSeBankgiroCreditorId.Length != 0) {
            OcrLineSeBankgiroCreditorId = other.OcrLineSeBankgiroCreditorId;
          }
          if (other.OcrLineSePlusgiroCreditorId.Length != 0) {
            OcrLineSePlusgiroCreditorId = other.OcrLineSePlusgiroCreditorId;
          }
          if (other.OcrLineNoPaymentId.Length != 0) {
            OcrLineNoPaymentId = other.OcrLineNoPaymentId;
          }
          if (other.OcrLineFiPaymentId.Length != 0) {
            OcrLineFiPaymentId = other.OcrLineFiPaymentId;
          }
          if (other.OcrLineNlPaymentId.Length != 0) {
            OcrLineNlPaymentId = other.OcrLineNlPaymentId;
          }
          if (other.SupplierCorporateId.Length != 0) {
            SupplierCorporateId = other.SupplierCorporateId;
          }
          if (other.SupplierCountryCode.Length != 0) {
            SupplierCountryCode = other.SupplierCountryCode;
          }
          if (other.InvoiceNumber.Length != 0) {
            InvoiceNumber = other.InvoiceNumber;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                TotalInclVat = input.ReadDouble();
                break;
              }
              case 17: {
                TotalVat = input.ReadDouble();
                break;
              }
              case 25: {
                TotalExclVat = input.ReadDouble();
                break;
              }
              case 34: {
                if (orderDate_ == null) {
                  orderDate_ = new global::Google.Type.Date();
                }
                input.ReadMessage(orderDate_);
                break;
              }
              case 42: {
                if (paymentDueDate_ == null) {
                  paymentDueDate_ = new global::Google.Type.Date();
                }
                input.ReadMessage(paymentDueDate_);
                break;
              }
              case 50: {
                DocumentType = input.ReadString();
                break;
              }
              case 58: {
                Currency = input.ReadString();
                break;
              }
              case 66: {
                CreditCardNumber = input.ReadString();
                break;
              }
              case 74: {
                PaymentMethod = input.ReadString();
                break;
              }
              case 82: {
                OcrLineDkType = input.ReadString();
                break;
              }
              case 90: {
                OcrLineDkPaymentId = input.ReadString();
                break;
              }
              case 98: {
                OcrLineDkCreditorId = input.ReadString();
                break;
              }
              case 106: {
                OcrLineSePaymentId = input.ReadString();
                break;
              }
              case 114: {
                OcrLineSeBankgiroCreditorId = input.ReadString();
                break;
              }
              case 122: {
                OcrLineSePlusgiroCreditorId = input.ReadString();
                break;
              }
              case 130: {
                OcrLineNoPaymentId = input.ReadString();
                break;
              }
              case 138: {
                OcrLineFiPaymentId = input.ReadString();
                break;
              }
              case 146: {
                OcrLineNlPaymentId = input.ReadString();
                break;
              }
              case 154: {
                SupplierCorporateId = input.ReadString();
                break;
              }
              case 162: {
                SupplierCountryCode = input.ReadString();
                break;
              }
              case 170: {
                InvoiceNumber = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class FeatureGenResponse : pb::IMessage<FeatureGenResponse> {
    private static readonly pb::MessageParser<FeatureGenResponse> _parser = new pb::MessageParser<FeatureGenResponse>(() => new FeatureGenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureGenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Mlservice.V2.MlserviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureGenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureGenResponse(FeatureGenResponse other) : this() {
      example_ = other.example_ != null ? other.example_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureGenResponse Clone() {
      return new FeatureGenResponse(this);
    }

    /// <summary>Field number for the "example" field.</summary>
    public const int ExampleFieldNumber = 1;
    private global::Tensorflow.Example example_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Example Example {
      get { return example_; }
      set {
        example_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureGenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureGenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Example, other.Example)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (example_ != null) hash ^= Example.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (example_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Example);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (example_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Example);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureGenResponse other) {
      if (other == null) {
        return;
      }
      if (other.example_ != null) {
        if (example_ == null) {
          example_ = new global::Tensorflow.Example();
        }
        Example.MergeFrom(other.Example);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (example_ == null) {
              example_ = new global::Tensorflow.Example();
            }
            input.ReadMessage(example_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PredictRequest : pb::IMessage<PredictRequest> {
    private static readonly pb::MessageParser<PredictRequest> _parser = new pb::MessageParser<PredictRequest>(() => new PredictRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Mlservice.V2.MlserviceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictRequest(PredictRequest other) : this() {
      example_ = other.example_ != null ? other.example_.Clone() : null;
      topNMostConfident_ = other.topNMostConfident_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictRequest Clone() {
      return new PredictRequest(this);
    }

    /// <summary>Field number for the "example" field.</summary>
    public const int ExampleFieldNumber = 1;
    private global::Tensorflow.Example example_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tensorflow.Example Example {
      get { return example_; }
      set {
        example_ = value;
      }
    }

    /// <summary>Field number for the "top_n_most_confident" field.</summary>
    public const int TopNMostConfidentFieldNumber = 2;
    private uint topNMostConfident_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TopNMostConfident {
      get { return topNMostConfident_; }
      set {
        topNMostConfident_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Example, other.Example)) return false;
      if (TopNMostConfident != other.TopNMostConfident) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (example_ != null) hash ^= Example.GetHashCode();
      if (TopNMostConfident != 0) hash ^= TopNMostConfident.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (example_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Example);
      }
      if (TopNMostConfident != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TopNMostConfident);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (example_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Example);
      }
      if (TopNMostConfident != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TopNMostConfident);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictRequest other) {
      if (other == null) {
        return;
      }
      if (other.example_ != null) {
        if (example_ == null) {
          example_ = new global::Tensorflow.Example();
        }
        Example.MergeFrom(other.Example);
      }
      if (other.TopNMostConfident != 0) {
        TopNMostConfident = other.TopNMostConfident;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (example_ == null) {
              example_ = new global::Tensorflow.Example();
            }
            input.ReadMessage(example_);
            break;
          }
          case 16: {
            TopNMostConfident = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// maps to FieldsPrediction
  /// </summary>
  public sealed partial class PredictResponse : pb::IMessage<PredictResponse> {
    private static readonly pb::MessageParser<PredictResponse> _parser = new pb::MessageParser<PredictResponse>(() => new PredictResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PredictResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Mlservice.V2.MlserviceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictResponse(PredictResponse other) : this() {
      orderDate_ = other.orderDate_.Clone();
      paymentDueDate_ = other.paymentDueDate_.Clone();
      currency_ = other.currency_.Clone();
      totalVat_ = other.totalVat_.Clone();
      totalInclVat_ = other.totalInclVat_.Clone();
      totalExclVat_ = other.totalExclVat_.Clone();
      supplierCorporateId_ = other.supplierCorporateId_.Clone();
      supplierCountryCode_ = other.supplierCountryCode_.Clone();
      documentType_ = other.documentType_.Clone();
      paymentMethod_ = other.paymentMethod_.Clone();
      creditCardNumber_ = other.creditCardNumber_.Clone();
      invoiceNumber_ = other.invoiceNumber_.Clone();
      ocrLineDkType_ = other.ocrLineDkType_.Clone();
      ocrLineDkPaymentId_ = other.ocrLineDkPaymentId_.Clone();
      ocrLineDkCreditorId_ = other.ocrLineDkCreditorId_.Clone();
      ocrLineSePaymentId_ = other.ocrLineSePaymentId_.Clone();
      ocrLineSeBankgiroCreditorId_ = other.ocrLineSeBankgiroCreditorId_.Clone();
      ocrLineSePlusgiroCreditorId_ = other.ocrLineSePlusgiroCreditorId_.Clone();
      ocrLineNoPaymentId_ = other.ocrLineNoPaymentId_.Clone();
      ocrLineFiPaymentId_ = other.ocrLineFiPaymentId_.Clone();
      ocrLineNlPaymentId_ = other.ocrLineNlPaymentId_.Clone();
      iban_ = other.iban_.Clone();
      lines_ = other.lines_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PredictResponse Clone() {
      return new PredictResponse(this);
    }

    /// <summary>Field number for the "order_date" field.</summary>
    public const int OrderDateFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_orderDate_codec
        = pb::FieldCodec.ForMessage(10, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> orderDate_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> OrderDate {
      get { return orderDate_; }
    }

    /// <summary>Field number for the "payment_due_date" field.</summary>
    public const int PaymentDueDateFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_paymentDueDate_codec
        = pb::FieldCodec.ForMessage(18, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> paymentDueDate_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> PaymentDueDate {
      get { return paymentDueDate_; }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_currency_codec
        = pb::FieldCodec.ForMessage(26, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> currency_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> Currency {
      get { return currency_; }
    }

    /// <summary>Field number for the "total_vat" field.</summary>
    public const int TotalVatFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_totalVat_codec
        = pb::FieldCodec.ForMessage(34, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> totalVat_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> TotalVat {
      get { return totalVat_; }
    }

    /// <summary>Field number for the "total_incl_vat" field.</summary>
    public const int TotalInclVatFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_totalInclVat_codec
        = pb::FieldCodec.ForMessage(42, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> totalInclVat_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> TotalInclVat {
      get { return totalInclVat_; }
    }

    /// <summary>Field number for the "total_excl_vat" field.</summary>
    public const int TotalExclVatFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_totalExclVat_codec
        = pb::FieldCodec.ForMessage(50, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> totalExclVat_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> TotalExclVat {
      get { return totalExclVat_; }
    }

    /// <summary>Field number for the "supplier_corporate_id" field.</summary>
    public const int SupplierCorporateIdFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_supplierCorporateId_codec
        = pb::FieldCodec.ForMessage(58, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> supplierCorporateId_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> SupplierCorporateId {
      get { return supplierCorporateId_; }
    }

    /// <summary>Field number for the "supplier_country_code" field.</summary>
    public const int SupplierCountryCodeFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_supplierCountryCode_codec
        = pb::FieldCodec.ForMessage(66, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> supplierCountryCode_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> SupplierCountryCode {
      get { return supplierCountryCode_; }
    }

    /// <summary>Field number for the "document_type" field.</summary>
    public const int DocumentTypeFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_documentType_codec
        = pb::FieldCodec.ForMessage(74, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> documentType_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> DocumentType {
      get { return documentType_; }
    }

    /// <summary>Field number for the "payment_method" field.</summary>
    public const int PaymentMethodFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_paymentMethod_codec
        = pb::FieldCodec.ForMessage(82, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> paymentMethod_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> PaymentMethod {
      get { return paymentMethod_; }
    }

    /// <summary>Field number for the "credit_card_number" field.</summary>
    public const int CreditCardNumberFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_creditCardNumber_codec
        = pb::FieldCodec.ForMessage(90, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> creditCardNumber_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> CreditCardNumber {
      get { return creditCardNumber_; }
    }

    /// <summary>Field number for the "invoice_number" field.</summary>
    public const int InvoiceNumberFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_invoiceNumber_codec
        = pb::FieldCodec.ForMessage(98, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> invoiceNumber_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> InvoiceNumber {
      get { return invoiceNumber_; }
    }

    /// <summary>Field number for the "ocr_line_dk_type" field.</summary>
    public const int OcrLineDkTypeFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_ocrLineDkType_codec
        = pb::FieldCodec.ForMessage(106, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> ocrLineDkType_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> OcrLineDkType {
      get { return ocrLineDkType_; }
    }

    /// <summary>Field number for the "ocr_line_dk_payment_id" field.</summary>
    public const int OcrLineDkPaymentIdFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_ocrLineDkPaymentId_codec
        = pb::FieldCodec.ForMessage(114, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> ocrLineDkPaymentId_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> OcrLineDkPaymentId {
      get { return ocrLineDkPaymentId_; }
    }

    /// <summary>Field number for the "ocr_line_dk_creditor_id" field.</summary>
    public const int OcrLineDkCreditorIdFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_ocrLineDkCreditorId_codec
        = pb::FieldCodec.ForMessage(122, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> ocrLineDkCreditorId_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> OcrLineDkCreditorId {
      get { return ocrLineDkCreditorId_; }
    }

    /// <summary>Field number for the "ocr_line_se_payment_id" field.</summary>
    public const int OcrLineSePaymentIdFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_ocrLineSePaymentId_codec
        = pb::FieldCodec.ForMessage(130, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> ocrLineSePaymentId_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> OcrLineSePaymentId {
      get { return ocrLineSePaymentId_; }
    }

    /// <summary>Field number for the "ocr_line_se_bankgiro_creditor_id" field.</summary>
    public const int OcrLineSeBankgiroCreditorIdFieldNumber = 17;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_ocrLineSeBankgiroCreditorId_codec
        = pb::FieldCodec.ForMessage(138, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> ocrLineSeBankgiroCreditorId_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> OcrLineSeBankgiroCreditorId {
      get { return ocrLineSeBankgiroCreditorId_; }
    }

    /// <summary>Field number for the "ocr_line_se_plusgiro_creditor_id" field.</summary>
    public const int OcrLineSePlusgiroCreditorIdFieldNumber = 18;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_ocrLineSePlusgiroCreditorId_codec
        = pb::FieldCodec.ForMessage(146, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> ocrLineSePlusgiroCreditorId_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> OcrLineSePlusgiroCreditorId {
      get { return ocrLineSePlusgiroCreditorId_; }
    }

    /// <summary>Field number for the "ocr_line_no_payment_id" field.</summary>
    public const int OcrLineNoPaymentIdFieldNumber = 19;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_ocrLineNoPaymentId_codec
        = pb::FieldCodec.ForMessage(154, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> ocrLineNoPaymentId_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> OcrLineNoPaymentId {
      get { return ocrLineNoPaymentId_; }
    }

    /// <summary>Field number for the "ocr_line_fi_payment_id" field.</summary>
    public const int OcrLineFiPaymentIdFieldNumber = 20;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_ocrLineFiPaymentId_codec
        = pb::FieldCodec.ForMessage(162, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> ocrLineFiPaymentId_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> OcrLineFiPaymentId {
      get { return ocrLineFiPaymentId_; }
    }

    /// <summary>Field number for the "ocr_line_nl_payment_id" field.</summary>
    public const int OcrLineNlPaymentIdFieldNumber = 21;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_ocrLineNlPaymentId_codec
        = pb::FieldCodec.ForMessage(170, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> ocrLineNlPaymentId_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> OcrLineNlPaymentId {
      get { return ocrLineNlPaymentId_; }
    }

    /// <summary>Field number for the "iban" field.</summary>
    public const int IbanFieldNumber = 22;
    private static readonly pb::FieldCodec<global::Ssn.Type.Candidate> _repeated_iban_codec
        = pb::FieldCodec.ForMessage(178, global::Ssn.Type.Candidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.Candidate> iban_ = new pbc::RepeatedField<global::Ssn.Type.Candidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.Candidate> Iban {
      get { return iban_; }
    }

    /// <summary>Field number for the "lines" field.</summary>
    public const int LinesFieldNumber = 23;
    private static readonly pb::FieldCodec<global::Ssn.Type.LineCandidate> _repeated_lines_codec
        = pb::FieldCodec.ForMessage(186, global::Ssn.Type.LineCandidate.Parser);
    private readonly pbc::RepeatedField<global::Ssn.Type.LineCandidate> lines_ = new pbc::RepeatedField<global::Ssn.Type.LineCandidate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Ssn.Type.LineCandidate> Lines {
      get { return lines_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PredictResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PredictResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!orderDate_.Equals(other.orderDate_)) return false;
      if(!paymentDueDate_.Equals(other.paymentDueDate_)) return false;
      if(!currency_.Equals(other.currency_)) return false;
      if(!totalVat_.Equals(other.totalVat_)) return false;
      if(!totalInclVat_.Equals(other.totalInclVat_)) return false;
      if(!totalExclVat_.Equals(other.totalExclVat_)) return false;
      if(!supplierCorporateId_.Equals(other.supplierCorporateId_)) return false;
      if(!supplierCountryCode_.Equals(other.supplierCountryCode_)) return false;
      if(!documentType_.Equals(other.documentType_)) return false;
      if(!paymentMethod_.Equals(other.paymentMethod_)) return false;
      if(!creditCardNumber_.Equals(other.creditCardNumber_)) return false;
      if(!invoiceNumber_.Equals(other.invoiceNumber_)) return false;
      if(!ocrLineDkType_.Equals(other.ocrLineDkType_)) return false;
      if(!ocrLineDkPaymentId_.Equals(other.ocrLineDkPaymentId_)) return false;
      if(!ocrLineDkCreditorId_.Equals(other.ocrLineDkCreditorId_)) return false;
      if(!ocrLineSePaymentId_.Equals(other.ocrLineSePaymentId_)) return false;
      if(!ocrLineSeBankgiroCreditorId_.Equals(other.ocrLineSeBankgiroCreditorId_)) return false;
      if(!ocrLineSePlusgiroCreditorId_.Equals(other.ocrLineSePlusgiroCreditorId_)) return false;
      if(!ocrLineNoPaymentId_.Equals(other.ocrLineNoPaymentId_)) return false;
      if(!ocrLineFiPaymentId_.Equals(other.ocrLineFiPaymentId_)) return false;
      if(!ocrLineNlPaymentId_.Equals(other.ocrLineNlPaymentId_)) return false;
      if(!iban_.Equals(other.iban_)) return false;
      if(!lines_.Equals(other.lines_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= orderDate_.GetHashCode();
      hash ^= paymentDueDate_.GetHashCode();
      hash ^= currency_.GetHashCode();
      hash ^= totalVat_.GetHashCode();
      hash ^= totalInclVat_.GetHashCode();
      hash ^= totalExclVat_.GetHashCode();
      hash ^= supplierCorporateId_.GetHashCode();
      hash ^= supplierCountryCode_.GetHashCode();
      hash ^= documentType_.GetHashCode();
      hash ^= paymentMethod_.GetHashCode();
      hash ^= creditCardNumber_.GetHashCode();
      hash ^= invoiceNumber_.GetHashCode();
      hash ^= ocrLineDkType_.GetHashCode();
      hash ^= ocrLineDkPaymentId_.GetHashCode();
      hash ^= ocrLineDkCreditorId_.GetHashCode();
      hash ^= ocrLineSePaymentId_.GetHashCode();
      hash ^= ocrLineSeBankgiroCreditorId_.GetHashCode();
      hash ^= ocrLineSePlusgiroCreditorId_.GetHashCode();
      hash ^= ocrLineNoPaymentId_.GetHashCode();
      hash ^= ocrLineFiPaymentId_.GetHashCode();
      hash ^= ocrLineNlPaymentId_.GetHashCode();
      hash ^= iban_.GetHashCode();
      hash ^= lines_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      orderDate_.WriteTo(output, _repeated_orderDate_codec);
      paymentDueDate_.WriteTo(output, _repeated_paymentDueDate_codec);
      currency_.WriteTo(output, _repeated_currency_codec);
      totalVat_.WriteTo(output, _repeated_totalVat_codec);
      totalInclVat_.WriteTo(output, _repeated_totalInclVat_codec);
      totalExclVat_.WriteTo(output, _repeated_totalExclVat_codec);
      supplierCorporateId_.WriteTo(output, _repeated_supplierCorporateId_codec);
      supplierCountryCode_.WriteTo(output, _repeated_supplierCountryCode_codec);
      documentType_.WriteTo(output, _repeated_documentType_codec);
      paymentMethod_.WriteTo(output, _repeated_paymentMethod_codec);
      creditCardNumber_.WriteTo(output, _repeated_creditCardNumber_codec);
      invoiceNumber_.WriteTo(output, _repeated_invoiceNumber_codec);
      ocrLineDkType_.WriteTo(output, _repeated_ocrLineDkType_codec);
      ocrLineDkPaymentId_.WriteTo(output, _repeated_ocrLineDkPaymentId_codec);
      ocrLineDkCreditorId_.WriteTo(output, _repeated_ocrLineDkCreditorId_codec);
      ocrLineSePaymentId_.WriteTo(output, _repeated_ocrLineSePaymentId_codec);
      ocrLineSeBankgiroCreditorId_.WriteTo(output, _repeated_ocrLineSeBankgiroCreditorId_codec);
      ocrLineSePlusgiroCreditorId_.WriteTo(output, _repeated_ocrLineSePlusgiroCreditorId_codec);
      ocrLineNoPaymentId_.WriteTo(output, _repeated_ocrLineNoPaymentId_codec);
      ocrLineFiPaymentId_.WriteTo(output, _repeated_ocrLineFiPaymentId_codec);
      ocrLineNlPaymentId_.WriteTo(output, _repeated_ocrLineNlPaymentId_codec);
      iban_.WriteTo(output, _repeated_iban_codec);
      lines_.WriteTo(output, _repeated_lines_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += orderDate_.CalculateSize(_repeated_orderDate_codec);
      size += paymentDueDate_.CalculateSize(_repeated_paymentDueDate_codec);
      size += currency_.CalculateSize(_repeated_currency_codec);
      size += totalVat_.CalculateSize(_repeated_totalVat_codec);
      size += totalInclVat_.CalculateSize(_repeated_totalInclVat_codec);
      size += totalExclVat_.CalculateSize(_repeated_totalExclVat_codec);
      size += supplierCorporateId_.CalculateSize(_repeated_supplierCorporateId_codec);
      size += supplierCountryCode_.CalculateSize(_repeated_supplierCountryCode_codec);
      size += documentType_.CalculateSize(_repeated_documentType_codec);
      size += paymentMethod_.CalculateSize(_repeated_paymentMethod_codec);
      size += creditCardNumber_.CalculateSize(_repeated_creditCardNumber_codec);
      size += invoiceNumber_.CalculateSize(_repeated_invoiceNumber_codec);
      size += ocrLineDkType_.CalculateSize(_repeated_ocrLineDkType_codec);
      size += ocrLineDkPaymentId_.CalculateSize(_repeated_ocrLineDkPaymentId_codec);
      size += ocrLineDkCreditorId_.CalculateSize(_repeated_ocrLineDkCreditorId_codec);
      size += ocrLineSePaymentId_.CalculateSize(_repeated_ocrLineSePaymentId_codec);
      size += ocrLineSeBankgiroCreditorId_.CalculateSize(_repeated_ocrLineSeBankgiroCreditorId_codec);
      size += ocrLineSePlusgiroCreditorId_.CalculateSize(_repeated_ocrLineSePlusgiroCreditorId_codec);
      size += ocrLineNoPaymentId_.CalculateSize(_repeated_ocrLineNoPaymentId_codec);
      size += ocrLineFiPaymentId_.CalculateSize(_repeated_ocrLineFiPaymentId_codec);
      size += ocrLineNlPaymentId_.CalculateSize(_repeated_ocrLineNlPaymentId_codec);
      size += iban_.CalculateSize(_repeated_iban_codec);
      size += lines_.CalculateSize(_repeated_lines_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PredictResponse other) {
      if (other == null) {
        return;
      }
      orderDate_.Add(other.orderDate_);
      paymentDueDate_.Add(other.paymentDueDate_);
      currency_.Add(other.currency_);
      totalVat_.Add(other.totalVat_);
      totalInclVat_.Add(other.totalInclVat_);
      totalExclVat_.Add(other.totalExclVat_);
      supplierCorporateId_.Add(other.supplierCorporateId_);
      supplierCountryCode_.Add(other.supplierCountryCode_);
      documentType_.Add(other.documentType_);
      paymentMethod_.Add(other.paymentMethod_);
      creditCardNumber_.Add(other.creditCardNumber_);
      invoiceNumber_.Add(other.invoiceNumber_);
      ocrLineDkType_.Add(other.ocrLineDkType_);
      ocrLineDkPaymentId_.Add(other.ocrLineDkPaymentId_);
      ocrLineDkCreditorId_.Add(other.ocrLineDkCreditorId_);
      ocrLineSePaymentId_.Add(other.ocrLineSePaymentId_);
      ocrLineSeBankgiroCreditorId_.Add(other.ocrLineSeBankgiroCreditorId_);
      ocrLineSePlusgiroCreditorId_.Add(other.ocrLineSePlusgiroCreditorId_);
      ocrLineNoPaymentId_.Add(other.ocrLineNoPaymentId_);
      ocrLineFiPaymentId_.Add(other.ocrLineFiPaymentId_);
      ocrLineNlPaymentId_.Add(other.ocrLineNlPaymentId_);
      iban_.Add(other.iban_);
      lines_.Add(other.lines_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            orderDate_.AddEntriesFrom(input, _repeated_orderDate_codec);
            break;
          }
          case 18: {
            paymentDueDate_.AddEntriesFrom(input, _repeated_paymentDueDate_codec);
            break;
          }
          case 26: {
            currency_.AddEntriesFrom(input, _repeated_currency_codec);
            break;
          }
          case 34: {
            totalVat_.AddEntriesFrom(input, _repeated_totalVat_codec);
            break;
          }
          case 42: {
            totalInclVat_.AddEntriesFrom(input, _repeated_totalInclVat_codec);
            break;
          }
          case 50: {
            totalExclVat_.AddEntriesFrom(input, _repeated_totalExclVat_codec);
            break;
          }
          case 58: {
            supplierCorporateId_.AddEntriesFrom(input, _repeated_supplierCorporateId_codec);
            break;
          }
          case 66: {
            supplierCountryCode_.AddEntriesFrom(input, _repeated_supplierCountryCode_codec);
            break;
          }
          case 74: {
            documentType_.AddEntriesFrom(input, _repeated_documentType_codec);
            break;
          }
          case 82: {
            paymentMethod_.AddEntriesFrom(input, _repeated_paymentMethod_codec);
            break;
          }
          case 90: {
            creditCardNumber_.AddEntriesFrom(input, _repeated_creditCardNumber_codec);
            break;
          }
          case 98: {
            invoiceNumber_.AddEntriesFrom(input, _repeated_invoiceNumber_codec);
            break;
          }
          case 106: {
            ocrLineDkType_.AddEntriesFrom(input, _repeated_ocrLineDkType_codec);
            break;
          }
          case 114: {
            ocrLineDkPaymentId_.AddEntriesFrom(input, _repeated_ocrLineDkPaymentId_codec);
            break;
          }
          case 122: {
            ocrLineDkCreditorId_.AddEntriesFrom(input, _repeated_ocrLineDkCreditorId_codec);
            break;
          }
          case 130: {
            ocrLineSePaymentId_.AddEntriesFrom(input, _repeated_ocrLineSePaymentId_codec);
            break;
          }
          case 138: {
            ocrLineSeBankgiroCreditorId_.AddEntriesFrom(input, _repeated_ocrLineSeBankgiroCreditorId_codec);
            break;
          }
          case 146: {
            ocrLineSePlusgiroCreditorId_.AddEntriesFrom(input, _repeated_ocrLineSePlusgiroCreditorId_codec);
            break;
          }
          case 154: {
            ocrLineNoPaymentId_.AddEntriesFrom(input, _repeated_ocrLineNoPaymentId_codec);
            break;
          }
          case 162: {
            ocrLineFiPaymentId_.AddEntriesFrom(input, _repeated_ocrLineFiPaymentId_codec);
            break;
          }
          case 170: {
            ocrLineNlPaymentId_.AddEntriesFrom(input, _repeated_ocrLineNlPaymentId_codec);
            break;
          }
          case 178: {
            iban_.AddEntriesFrom(input, _repeated_iban_codec);
            break;
          }
          case 186: {
            lines_.AddEntriesFrom(input, _repeated_lines_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeatureGenPredictRequest : pb::IMessage<FeatureGenPredictRequest> {
    private static readonly pb::MessageParser<FeatureGenPredictRequest> _parser = new pb::MessageParser<FeatureGenPredictRequest>(() => new FeatureGenPredictRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureGenPredictRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Ssn.Mlservice.V2.MlserviceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureGenPredictRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureGenPredictRequest(FeatureGenPredictRequest other) : this() {
      featureGenRequest_ = other.featureGenRequest_ != null ? other.featureGenRequest_.Clone() : null;
      predictRequest_ = other.predictRequest_ != null ? other.predictRequest_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureGenPredictRequest Clone() {
      return new FeatureGenPredictRequest(this);
    }

    /// <summary>Field number for the "feature_gen_request" field.</summary>
    public const int FeatureGenRequestFieldNumber = 1;
    private global::Ssn.Mlservice.V2.FeatureGenRequest featureGenRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ssn.Mlservice.V2.FeatureGenRequest FeatureGenRequest {
      get { return featureGenRequest_; }
      set {
        featureGenRequest_ = value;
      }
    }

    /// <summary>Field number for the "predict_request" field.</summary>
    public const int PredictRequestFieldNumber = 2;
    private global::Ssn.Mlservice.V2.PredictRequest predictRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Ssn.Mlservice.V2.PredictRequest PredictRequest {
      get { return predictRequest_; }
      set {
        predictRequest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureGenPredictRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureGenPredictRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FeatureGenRequest, other.FeatureGenRequest)) return false;
      if (!object.Equals(PredictRequest, other.PredictRequest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (featureGenRequest_ != null) hash ^= FeatureGenRequest.GetHashCode();
      if (predictRequest_ != null) hash ^= PredictRequest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (featureGenRequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FeatureGenRequest);
      }
      if (predictRequest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PredictRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (featureGenRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FeatureGenRequest);
      }
      if (predictRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PredictRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureGenPredictRequest other) {
      if (other == null) {
        return;
      }
      if (other.featureGenRequest_ != null) {
        if (featureGenRequest_ == null) {
          featureGenRequest_ = new global::Ssn.Mlservice.V2.FeatureGenRequest();
        }
        FeatureGenRequest.MergeFrom(other.FeatureGenRequest);
      }
      if (other.predictRequest_ != null) {
        if (predictRequest_ == null) {
          predictRequest_ = new global::Ssn.Mlservice.V2.PredictRequest();
        }
        PredictRequest.MergeFrom(other.PredictRequest);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (featureGenRequest_ == null) {
              featureGenRequest_ = new global::Ssn.Mlservice.V2.FeatureGenRequest();
            }
            input.ReadMessage(featureGenRequest_);
            break;
          }
          case 18: {
            if (predictRequest_ == null) {
              predictRequest_ = new global::Ssn.Mlservice.V2.PredictRequest();
            }
            input.ReadMessage(predictRequest_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
