// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: asgt/type/model_metadata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Asgt.Type {

  /// <summary>Holder for reflection information generated from asgt/type/model_metadata.proto</summary>
  public static partial class ModelMetadataReflection {

    #region Descriptor
    /// <summary>File descriptor for asgt/type/model_metadata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ModelMetadataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5hc2d0L3R5cGUvbW9kZWxfbWV0YWRhdGEucHJvdG8SCWFzZ3QudHlwZSJM",
            "Cg1Nb2RlbE1ldGFkYXRhEhUKDW1vZGVsX3ZlcnNpb24YASABKAMSDwoHdGFy",
            "Z2V0cxgCIAEoCRITCgtzYW1wbGVfc2l6ZRgDIAEoBUIGWgR0eXBlYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Type.ModelMetadata), global::Asgt.Type.ModelMetadata.Parser, new[]{ "ModelVersion", "Targets", "SampleSize" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ModelMetadata : pb::IMessage<ModelMetadata> {
    private static readonly pb::MessageParser<ModelMetadata> _parser = new pb::MessageParser<ModelMetadata>(() => new ModelMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModelMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Type.ModelMetadataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelMetadata(ModelMetadata other) : this() {
      modelVersion_ = other.modelVersion_;
      targets_ = other.targets_;
      sampleSize_ = other.sampleSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModelMetadata Clone() {
      return new ModelMetadata(this);
    }

    /// <summary>Field number for the "model_version" field.</summary>
    public const int ModelVersionFieldNumber = 1;
    private long modelVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ModelVersion {
      get { return modelVersion_; }
      set {
        modelVersion_ = value;
      }
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 2;
    private string targets_ = "";
    /// <summary>
    /// Targets used to train the model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Targets {
      get { return targets_; }
      set {
        targets_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sample_size" field.</summary>
    public const int SampleSizeFieldNumber = 3;
    private int sampleSize_;
    /// <summary>
    /// Number of samples used to train the model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SampleSize {
      get { return sampleSize_; }
      set {
        sampleSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModelMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModelMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelVersion != other.ModelVersion) return false;
      if (Targets != other.Targets) return false;
      if (SampleSize != other.SampleSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelVersion != 0L) hash ^= ModelVersion.GetHashCode();
      if (Targets.Length != 0) hash ^= Targets.GetHashCode();
      if (SampleSize != 0) hash ^= SampleSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ModelVersion != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ModelVersion);
      }
      if (Targets.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Targets);
      }
      if (SampleSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SampleSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModelVersion != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ModelVersion);
      }
      if (Targets.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Targets);
      }
      if (SampleSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SampleSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModelMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ModelVersion != 0L) {
        ModelVersion = other.ModelVersion;
      }
      if (other.Targets.Length != 0) {
        Targets = other.Targets;
      }
      if (other.SampleSize != 0) {
        SampleSize = other.SampleSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ModelVersion = input.ReadInt64();
            break;
          }
          case 18: {
            Targets = input.ReadString();
            break;
          }
          case 24: {
            SampleSize = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
