// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: asgt/type/train_statistics.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Asgt.Type {

  /// <summary>Holder for reflection information generated from asgt/type/train_statistics.proto</summary>
  public static partial class TrainStatisticsReflection {

    #region Descriptor
    /// <summary>File descriptor for asgt/type/train_statistics.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TrainStatisticsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBhc2d0L3R5cGUvdHJhaW5fc3RhdGlzdGljcy5wcm90bxIJYXNndC50eXBl",
            "IrYECg9UcmFpblN0YXRpc3RpY3MSFQoNZmVhdHVyZV9jb3VudBgBIAEoAhIV",
            "Cg1mZWF0dXJlX25hbWVzGAIgAygJEhQKDHRhcmdldF9uYW1lcxgDIAMoCRJB",
            "Cgx0YXJnZXRfY291bnQYBCADKAsyKy5hc2d0LnR5cGUuVHJhaW5TdGF0aXN0",
            "aWNzLlRhcmdldENvdW50RW50cnkSSwoRaW5mb3JtYXRpb25fZ2FpbnMYBSAD",
            "KAsyMC5hc2d0LnR5cGUuVHJhaW5TdGF0aXN0aWNzLkluZm9ybWF0aW9uR2Fp",
            "bnNFbnRyeRIYChBzaW1pbGFyaXR5X2luZGV4GAYgASgCGpsBCg9JbmZvcm1h",
            "dGlvbkdhaW4SUwoNZmVhdHVyZV9nYWlucxgBIAMoCzI8LmFzZ3QudHlwZS5U",
            "cmFpblN0YXRpc3RpY3MuSW5mb3JtYXRpb25HYWluLkZlYXR1cmVHYWluc0Vu",
            "dHJ5GjMKEUZlYXR1cmVHYWluc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1",
            "ZRgCIAEoAjoCOAEaMgoQVGFyZ2V0Q291bnRFbnRyeRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAI6AjgBGmMKFUluZm9ybWF0aW9uR2FpbnNFbnRyeRIL",
            "CgNrZXkYASABKAkSOQoFdmFsdWUYAiABKAsyKi5hc2d0LnR5cGUuVHJhaW5T",
            "dGF0aXN0aWNzLkluZm9ybWF0aW9uR2FpbjoCOAFCOFo2Z2l0aHViLmNvbS9l",
            "LWNvbm9taWMvdm1sYXBpcy9nZW4vZ28vYXNndC90eXBlO2FzZ3R0eXBlYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Type.TrainStatistics), global::Asgt.Type.TrainStatistics.Parser, new[]{ "FeatureCount", "FeatureNames", "TargetNames", "TargetCount", "InformationGains", "SimilarityIndex" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Type.TrainStatistics.Types.InformationGain), global::Asgt.Type.TrainStatistics.Types.InformationGain.Parser, new[]{ "FeatureGains" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TrainStatistics : pb::IMessage<TrainStatistics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrainStatistics> _parser = new pb::MessageParser<TrainStatistics>(() => new TrainStatistics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainStatistics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Type.TrainStatisticsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainStatistics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainStatistics(TrainStatistics other) : this() {
      featureCount_ = other.featureCount_;
      featureNames_ = other.featureNames_.Clone();
      targetNames_ = other.targetNames_.Clone();
      targetCount_ = other.targetCount_.Clone();
      informationGains_ = other.informationGains_.Clone();
      similarityIndex_ = other.similarityIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainStatistics Clone() {
      return new TrainStatistics(this);
    }

    /// <summary>Field number for the "feature_count" field.</summary>
    public const int FeatureCountFieldNumber = 1;
    private float featureCount_;
    /// <summary>
    ///number of input features for the model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float FeatureCount {
      get { return featureCount_; }
      set {
        featureCount_ = value;
      }
    }

    /// <summary>Field number for the "feature_names" field.</summary>
    public const int FeatureNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_featureNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> featureNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///feature names
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FeatureNames {
      get { return featureNames_; }
    }

    /// <summary>Field number for the "target_names" field.</summary>
    public const int TargetNamesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_targetNames_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> targetNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///target names
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TargetNames {
      get { return targetNames_; }
    }

    /// <summary>Field number for the "target_count" field.</summary>
    public const int TargetCountFieldNumber = 4;
    private static readonly pbc::MapField<string, float>.Codec _map_targetCount_codec
        = new pbc::MapField<string, float>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForFloat(21, 0F), 34);
    private readonly pbc::MapField<string, float> targetCount_ = new pbc::MapField<string, float>();
    /// <summary>
    /// for each target count of its
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, float> TargetCount {
      get { return targetCount_; }
    }

    /// <summary>Field number for the "information_gains" field.</summary>
    public const int InformationGainsFieldNumber = 5;
    private static readonly pbc::MapField<string, global::Asgt.Type.TrainStatistics.Types.InformationGain>.Codec _map_informationGains_codec
        = new pbc::MapField<string, global::Asgt.Type.TrainStatistics.Types.InformationGain>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Asgt.Type.TrainStatistics.Types.InformationGain.Parser), 42);
    private readonly pbc::MapField<string, global::Asgt.Type.TrainStatistics.Types.InformationGain> informationGains_ = new pbc::MapField<string, global::Asgt.Type.TrainStatistics.Types.InformationGain>();
    /// <summary>
    ///feature information gains for each of the targets
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Asgt.Type.TrainStatistics.Types.InformationGain> InformationGains {
      get { return informationGains_; }
    }

    /// <summary>Field number for the "similarity_index" field.</summary>
    public const int SimilarityIndexFieldNumber = 6;
    private float similarityIndex_;
    /// <summary>
    /// similarity index between train and test dataset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SimilarityIndex {
      get { return similarityIndex_; }
      set {
        similarityIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainStatistics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainStatistics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FeatureCount, other.FeatureCount)) return false;
      if(!featureNames_.Equals(other.featureNames_)) return false;
      if(!targetNames_.Equals(other.targetNames_)) return false;
      if (!TargetCount.Equals(other.TargetCount)) return false;
      if (!InformationGains.Equals(other.InformationGains)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SimilarityIndex, other.SimilarityIndex)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FeatureCount != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FeatureCount);
      hash ^= featureNames_.GetHashCode();
      hash ^= targetNames_.GetHashCode();
      hash ^= TargetCount.GetHashCode();
      hash ^= InformationGains.GetHashCode();
      if (SimilarityIndex != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SimilarityIndex);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FeatureCount != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(FeatureCount);
      }
      featureNames_.WriteTo(output, _repeated_featureNames_codec);
      targetNames_.WriteTo(output, _repeated_targetNames_codec);
      targetCount_.WriteTo(output, _map_targetCount_codec);
      informationGains_.WriteTo(output, _map_informationGains_codec);
      if (SimilarityIndex != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(SimilarityIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FeatureCount != 0F) {
        size += 1 + 4;
      }
      size += featureNames_.CalculateSize(_repeated_featureNames_codec);
      size += targetNames_.CalculateSize(_repeated_targetNames_codec);
      size += targetCount_.CalculateSize(_map_targetCount_codec);
      size += informationGains_.CalculateSize(_map_informationGains_codec);
      if (SimilarityIndex != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainStatistics other) {
      if (other == null) {
        return;
      }
      if (other.FeatureCount != 0F) {
        FeatureCount = other.FeatureCount;
      }
      featureNames_.Add(other.featureNames_);
      targetNames_.Add(other.targetNames_);
      targetCount_.Add(other.targetCount_);
      informationGains_.Add(other.informationGains_);
      if (other.SimilarityIndex != 0F) {
        SimilarityIndex = other.SimilarityIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            FeatureCount = input.ReadFloat();
            break;
          }
          case 18: {
            featureNames_.AddEntriesFrom(input, _repeated_featureNames_codec);
            break;
          }
          case 26: {
            targetNames_.AddEntriesFrom(input, _repeated_targetNames_codec);
            break;
          }
          case 34: {
            targetCount_.AddEntriesFrom(input, _map_targetCount_codec);
            break;
          }
          case 42: {
            informationGains_.AddEntriesFrom(input, _map_informationGains_codec);
            break;
          }
          case 53: {
            SimilarityIndex = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            FeatureCount = input.ReadFloat();
            break;
          }
          case 18: {
            featureNames_.AddEntriesFrom(ref input, _repeated_featureNames_codec);
            break;
          }
          case 26: {
            targetNames_.AddEntriesFrom(ref input, _repeated_targetNames_codec);
            break;
          }
          case 34: {
            targetCount_.AddEntriesFrom(ref input, _map_targetCount_codec);
            break;
          }
          case 42: {
            informationGains_.AddEntriesFrom(ref input, _map_informationGains_codec);
            break;
          }
          case 53: {
            SimilarityIndex = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TrainStatistics message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class InformationGain : pb::IMessage<InformationGain>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InformationGain> _parser = new pb::MessageParser<InformationGain>(() => new InformationGain());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InformationGain> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Asgt.Type.TrainStatistics.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InformationGain() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InformationGain(InformationGain other) : this() {
          featureGains_ = other.featureGains_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InformationGain Clone() {
          return new InformationGain(this);
        }

        /// <summary>Field number for the "feature_gains" field.</summary>
        public const int FeatureGainsFieldNumber = 1;
        private static readonly pbc::MapField<string, float>.Codec _map_featureGains_codec
            = new pbc::MapField<string, float>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForFloat(21, 0F), 10);
        private readonly pbc::MapField<string, float> featureGains_ = new pbc::MapField<string, float>();
        /// <summary>
        ///feature information gains for a single target
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::MapField<string, float> FeatureGains {
          get { return featureGains_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InformationGain);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InformationGain other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!FeatureGains.Equals(other.FeatureGains)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= FeatureGains.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          featureGains_.WriteTo(output, _map_featureGains_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += featureGains_.CalculateSize(_map_featureGains_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InformationGain other) {
          if (other == null) {
            return;
          }
          featureGains_.Add(other.featureGains_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                featureGains_.AddEntriesFrom(input, _map_featureGains_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                featureGains_.AddEntriesFrom(ref input, _map_featureGains_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
