// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: asgt/type/invoice_line.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Asgt.Type {

  /// <summary>Holder for reflection information generated from asgt/type/invoice_line.proto</summary>
  public static partial class InvoiceLineReflection {

    #region Descriptor
    /// <summary>File descriptor for asgt/type/invoice_line.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InvoiceLineReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chxhc2d0L3R5cGUvaW52b2ljZV9saW5lLnByb3RvEglhc2d0LnR5cGUaH2dv",
            "b2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aHmdvb2dsZS9wcm90b2J1",
            "Zi93cmFwcGVycy5wcm90byKxAwoLSW52b2ljZUxpbmUSLgoKaXNzdWVfZGF0",
            "ZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoIY3VycmVu",
            "Y3kYAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSEwoLc3Vw",
            "cGxpZXJfaWQYAyABKAkSMwoNc3VwcGxpZXJfbmFtZRgEIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI4ChJzdXBwbGllcl9nbG9iYWxfaWQY",
            "BSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMgoMY3VzdG9t",
            "ZXJfcmVmGAYgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEioK",
            "BXRvdGFsGAcgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkZsb2F0VmFsdWUSLwoJ",
            "bGluZV90ZXh0GAggASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "Ei0KB2xpbmVfaWQYCSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWVCBloEdHlwZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Type.InvoiceLine), global::Asgt.Type.InvoiceLine.Parser, new[]{ "IssueDate", "Currency", "SupplierId", "SupplierName", "SupplierGlobalId", "CustomerRef", "Total", "LineText", "LineId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// NOTE(lys) previously: ElectronicInvoiceLine
  /// NOTE(lys) review whether all these values are nullable
  /// </summary>
  public sealed partial class InvoiceLine : pb::IMessage<InvoiceLine> {
    private static readonly pb::MessageParser<InvoiceLine> _parser = new pb::MessageParser<InvoiceLine>(() => new InvoiceLine());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvoiceLine> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Type.InvoiceLineReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvoiceLine() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvoiceLine(InvoiceLine other) : this() {
      issueDate_ = other.issueDate_ != null ? other.issueDate_.Clone() : null;
      Currency = other.Currency;
      supplierId_ = other.supplierId_;
      SupplierName = other.SupplierName;
      SupplierGlobalId = other.SupplierGlobalId;
      CustomerRef = other.CustomerRef;
      Total = other.Total;
      LineText = other.LineText;
      LineId = other.LineId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvoiceLine Clone() {
      return new InvoiceLine(this);
    }

    /// <summary>Field number for the "issue_date" field.</summary>
    public const int IssueDateFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp issueDate_;
    /// <summary>
    /// NOTE(lys) why is this called a date when it is not a date?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp IssueDate {
      get { return issueDate_; }
      set {
        issueDate_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_currency_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string currency_;
    /// <summary>
    /// name of the currency as a string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = value;
      }
    }

    /// <summary>Field number for the "supplier_id" field.</summary>
    public const int SupplierIdFieldNumber = 3;
    private string supplierId_ = "";
    /// <summary>
    ///  id of the supplier, not nullable
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SupplierId {
      get { return supplierId_; }
      set {
        supplierId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "supplier_name" field.</summary>
    public const int SupplierNameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_supplierName_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string supplierName_;
    /// <summary>
    /// name of the supplier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SupplierName {
      get { return supplierName_; }
      set {
        supplierName_ = value;
      }
    }

    /// <summary>Field number for the "supplier_global_id" field.</summary>
    public const int SupplierGlobalIdFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_supplierGlobalId_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string supplierGlobalId_;
    /// <summary>
    /// global id of the supplier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SupplierGlobalId {
      get { return supplierGlobalId_; }
      set {
        supplierGlobalId_ = value;
      }
    }

    /// <summary>Field number for the "customer_ref" field.</summary>
    public const int CustomerRefFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_customerRef_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string customerRef_;
    /// <summary>
    /// reference of the customer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerRef {
      get { return customerRef_; }
      set {
        customerRef_ = value;
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 7;
    private static readonly pb::FieldCodec<float?> _single_total_codec = pb::FieldCodec.ForStructWrapper<float>(58);
    private float? total_;
    /// <summary>
    /// total of the invoice
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "line_text" field.</summary>
    public const int LineTextFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_lineText_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string lineText_;
    /// <summary>
    /// text of the invoice line
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LineText {
      get { return lineText_; }
      set {
        lineText_ = value;
      }
    }

    /// <summary>Field number for the "line_id" field.</summary>
    public const int LineIdFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_lineId_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string lineId_;
    /// <summary>
    /// id of the line
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LineId {
      get { return lineId_; }
      set {
        lineId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvoiceLine);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvoiceLine other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(IssueDate, other.IssueDate)) return false;
      if (Currency != other.Currency) return false;
      if (SupplierId != other.SupplierId) return false;
      if (SupplierName != other.SupplierName) return false;
      if (SupplierGlobalId != other.SupplierGlobalId) return false;
      if (CustomerRef != other.CustomerRef) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(Total, other.Total)) return false;
      if (LineText != other.LineText) return false;
      if (LineId != other.LineId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (issueDate_ != null) hash ^= IssueDate.GetHashCode();
      if (currency_ != null) hash ^= Currency.GetHashCode();
      if (SupplierId.Length != 0) hash ^= SupplierId.GetHashCode();
      if (supplierName_ != null) hash ^= SupplierName.GetHashCode();
      if (supplierGlobalId_ != null) hash ^= SupplierGlobalId.GetHashCode();
      if (customerRef_ != null) hash ^= CustomerRef.GetHashCode();
      if (total_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(Total);
      if (lineText_ != null) hash ^= LineText.GetHashCode();
      if (lineId_ != null) hash ^= LineId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (issueDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(IssueDate);
      }
      if (currency_ != null) {
        _single_currency_codec.WriteTagAndValue(output, Currency);
      }
      if (SupplierId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SupplierId);
      }
      if (supplierName_ != null) {
        _single_supplierName_codec.WriteTagAndValue(output, SupplierName);
      }
      if (supplierGlobalId_ != null) {
        _single_supplierGlobalId_codec.WriteTagAndValue(output, SupplierGlobalId);
      }
      if (customerRef_ != null) {
        _single_customerRef_codec.WriteTagAndValue(output, CustomerRef);
      }
      if (total_ != null) {
        _single_total_codec.WriteTagAndValue(output, Total);
      }
      if (lineText_ != null) {
        _single_lineText_codec.WriteTagAndValue(output, LineText);
      }
      if (lineId_ != null) {
        _single_lineId_codec.WriteTagAndValue(output, LineId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (issueDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IssueDate);
      }
      if (currency_ != null) {
        size += _single_currency_codec.CalculateSizeWithTag(Currency);
      }
      if (SupplierId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SupplierId);
      }
      if (supplierName_ != null) {
        size += _single_supplierName_codec.CalculateSizeWithTag(SupplierName);
      }
      if (supplierGlobalId_ != null) {
        size += _single_supplierGlobalId_codec.CalculateSizeWithTag(SupplierGlobalId);
      }
      if (customerRef_ != null) {
        size += _single_customerRef_codec.CalculateSizeWithTag(CustomerRef);
      }
      if (total_ != null) {
        size += _single_total_codec.CalculateSizeWithTag(Total);
      }
      if (lineText_ != null) {
        size += _single_lineText_codec.CalculateSizeWithTag(LineText);
      }
      if (lineId_ != null) {
        size += _single_lineId_codec.CalculateSizeWithTag(LineId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvoiceLine other) {
      if (other == null) {
        return;
      }
      if (other.issueDate_ != null) {
        if (issueDate_ == null) {
          issueDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        IssueDate.MergeFrom(other.IssueDate);
      }
      if (other.currency_ != null) {
        if (currency_ == null || other.Currency != "") {
          Currency = other.Currency;
        }
      }
      if (other.SupplierId.Length != 0) {
        SupplierId = other.SupplierId;
      }
      if (other.supplierName_ != null) {
        if (supplierName_ == null || other.SupplierName != "") {
          SupplierName = other.SupplierName;
        }
      }
      if (other.supplierGlobalId_ != null) {
        if (supplierGlobalId_ == null || other.SupplierGlobalId != "") {
          SupplierGlobalId = other.SupplierGlobalId;
        }
      }
      if (other.customerRef_ != null) {
        if (customerRef_ == null || other.CustomerRef != "") {
          CustomerRef = other.CustomerRef;
        }
      }
      if (other.total_ != null) {
        if (total_ == null || other.Total != 0F) {
          Total = other.Total;
        }
      }
      if (other.lineText_ != null) {
        if (lineText_ == null || other.LineText != "") {
          LineText = other.LineText;
        }
      }
      if (other.lineId_ != null) {
        if (lineId_ == null || other.LineId != "") {
          LineId = other.LineId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (issueDate_ == null) {
              issueDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(issueDate_);
            break;
          }
          case 18: {
            string value = _single_currency_codec.Read(input);
            if (currency_ == null || value != "") {
              Currency = value;
            }
            break;
          }
          case 26: {
            SupplierId = input.ReadString();
            break;
          }
          case 34: {
            string value = _single_supplierName_codec.Read(input);
            if (supplierName_ == null || value != "") {
              SupplierName = value;
            }
            break;
          }
          case 42: {
            string value = _single_supplierGlobalId_codec.Read(input);
            if (supplierGlobalId_ == null || value != "") {
              SupplierGlobalId = value;
            }
            break;
          }
          case 50: {
            string value = _single_customerRef_codec.Read(input);
            if (customerRef_ == null || value != "") {
              CustomerRef = value;
            }
            break;
          }
          case 58: {
            float? value = _single_total_codec.Read(input);
            if (total_ == null || value != 0F) {
              Total = value;
            }
            break;
          }
          case 66: {
            string value = _single_lineText_codec.Read(input);
            if (lineText_ == null || value != "") {
              LineText = value;
            }
            break;
          }
          case 74: {
            string value = _single_lineId_codec.Read(input);
            if (lineId_ == null || value != "") {
              LineId = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
