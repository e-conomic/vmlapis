// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: asgt/jester/v1alpha1/jester.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Asgt.Jester.V1Alpha1 {

  /// <summary>Holder for reflection information generated from asgt/jester/v1alpha1/jester.proto</summary>
  public static partial class JesterReflection {

    #region Descriptor
    /// <summary>File descriptor for asgt/jester/v1alpha1/jester.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static JesterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFhc2d0L2plc3Rlci92MWFscGhhMS9qZXN0ZXIucHJvdG8SFGFzZ3QuamVz",
            "dGVyLnYxYWxwaGExGiBhc2d0L3R5cGUvYmFua190cmFuc2FjdGlvbi5wcm90",
            "bxocYXNndC90eXBlL2ludm9pY2VfbGluZS5wcm90bxoaYXNndC90eXBlL21v",
            "ZGVsX2luZm8ucHJvdG8aGmFzZ3QvdHlwZS9wcmVkaWN0aW9uLnByb3RvGh9h",
            "c2d0L3R5cGUvc2Nhbm5lZF9pbnZvaWNlLnByb3RvGhxnb29nbGUvYXBpL2Fu",
            "bm90YXRpb25zLnByb3RvImYKE1N1Z2dlc3Rpb25zUmVzcG9uc2USKgoLcHJl",
            "ZGljdGlvbnMYASADKAsyFS5hc2d0LnR5cGUuUHJlZGljdGlvbhIjCgVtb2Rl",
            "bBgCIAEoCzIULmFzZ3QudHlwZS5Nb2RlbEluZm8iYgoRU3VnZ2VzdGlvbk9w",
            "dGlvbnMSGAoQc3VnZ2VzdGlvbl9saW1pdBgBIAEoBRIzCg5taW5fY29uZmlk",
            "ZW5jZRgCIAEoDjIbLmFzZ3QudHlwZS5Db25maWRlbmNlLkxldmVsIpIBChVT",
            "Y2FubmVkSW52b2ljZVJlcXVlc3QSKQoGaW5wdXRzGAEgAygLMhkuYXNndC50",
            "eXBlLlNjYW5uZWRJbnZvaWNlEhQKDGRhdGFzZXRfbmFtZRgCIAEoCRI4Cgdv",
            "cHRpb25zGAMgASgLMicuYXNndC5qZXN0ZXIudjFhbHBoYTEuU3VnZ2VzdGlv",
            "bk9wdGlvbnMilgEKHEVsZWN0cm9uaWNJbnZvaWNlTGluZVJlcXVlc3QSJgoG",
            "aW5wdXRzGAEgAygLMhYuYXNndC50eXBlLkludm9pY2VMaW5lEhQKDGRhdGFz",
            "ZXRfbmFtZRgCIAEoCRI4CgdvcHRpb25zGAMgASgLMicuYXNndC5qZXN0ZXIu",
            "djFhbHBoYTEuU3VnZ2VzdGlvbk9wdGlvbnMiiQEKC0JhbmtSZXF1ZXN0EioK",
            "BmlucHV0cxgBIAMoCzIaLmFzZ3QudHlwZS5CYW5rVHJhbnNhY3Rpb24SFAoM",
            "ZGF0YXNldF9uYW1lGAIgASgJEjgKB29wdGlvbnMYAyABKAsyJy5hc2d0Lmpl",
            "c3Rlci52MWFscGhhMS5TdWdnZXN0aW9uT3B0aW9uczLrAwoGSmVzdGVyEqEB",
            "ChlTY2FubmVkSW52b2ljZVN1Z2dlc3Rpb25zEisuYXNndC5qZXN0ZXIudjFh",
            "bHBoYTEuU2Nhbm5lZEludm9pY2VSZXF1ZXN0GikuYXNndC5qZXN0ZXIudjFh",
            "bHBoYTEuU3VnZ2VzdGlvbnNSZXNwb25zZSIsgtPkkwImIiEvdjFhbHBoYTEv",
            "c2Nhbm5lZC1pbnZvaWNlOnN1Z2dlc3Q6ASoStwEKIEVsZWN0cm9uaWNJbnZv",
            "aWNlTGluZVN1Z2dlc3Rpb25zEjIuYXNndC5qZXN0ZXIudjFhbHBoYTEuRWxl",
            "Y3Ryb25pY0ludm9pY2VMaW5lUmVxdWVzdBopLmFzZ3QuamVzdGVyLnYxYWxw",
            "aGExLlN1Z2dlc3Rpb25zUmVzcG9uc2UiNILT5JMCLiIpL3YxYWxwaGExL2Vs",
            "ZWN0cm9uaWMtaW52b2ljZS1saW5lOnN1Z2dlc3Q6ASoSggEKD0JhbmtTdWdn",
            "ZXN0aW9ucxIhLmFzZ3QuamVzdGVyLnYxYWxwaGExLkJhbmtSZXF1ZXN0Giku",
            "YXNndC5qZXN0ZXIudjFhbHBoYTEuU3VnZ2VzdGlvbnNSZXNwb25zZSIhgtPk",
            "kwIbIhYvdjFhbHBoYTEvYmFuazpzdWdnZXN0OgEqQghaBmplc3RlcmIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Asgt.Type.BankTransactionReflection.Descriptor, global::Asgt.Type.InvoiceLineReflection.Descriptor, global::Asgt.Type.ModelInfoReflection.Descriptor, global::Asgt.Type.PredictionReflection.Descriptor, global::Asgt.Type.ScannedInvoiceReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.SuggestionsResponse), global::Asgt.Jester.V1Alpha1.SuggestionsResponse.Parser, new[]{ "Predictions", "Model" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.SuggestionOptions), global::Asgt.Jester.V1Alpha1.SuggestionOptions.Parser, new[]{ "SuggestionLimit", "MinConfidence" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest), global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Parser, new[]{ "Inputs", "DatasetName", "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest), global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Parser, new[]{ "Inputs", "DatasetName", "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Jester.V1Alpha1.BankRequest), global::Asgt.Jester.V1Alpha1.BankRequest.Parser, new[]{ "Inputs", "DatasetName", "Options" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// AutoSuggest
  /// </summary>
  public sealed partial class SuggestionsResponse : pb::IMessage<SuggestionsResponse> {
    private static readonly pb::MessageParser<SuggestionsResponse> _parser = new pb::MessageParser<SuggestionsResponse>(() => new SuggestionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuggestionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionsResponse(SuggestionsResponse other) : this() {
      predictions_ = other.predictions_.Clone();
      model_ = other.model_ != null ? other.model_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionsResponse Clone() {
      return new SuggestionsResponse(this);
    }

    /// <summary>Field number for the "predictions" field.</summary>
    public const int PredictionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Asgt.Type.Prediction> _repeated_predictions_codec
        = pb::FieldCodec.ForMessage(10, global::Asgt.Type.Prediction.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Type.Prediction> predictions_ = new pbc::RepeatedField<global::Asgt.Type.Prediction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Type.Prediction> Predictions {
      get { return predictions_; }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 2;
    private global::Asgt.Type.ModelInfo model_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Type.ModelInfo Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuggestionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuggestionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!predictions_.Equals(other.predictions_)) return false;
      if (!object.Equals(Model, other.Model)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= predictions_.GetHashCode();
      if (model_ != null) hash ^= Model.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      predictions_.WriteTo(output, _repeated_predictions_codec);
      if (model_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Model);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += predictions_.CalculateSize(_repeated_predictions_codec);
      if (model_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuggestionsResponse other) {
      if (other == null) {
        return;
      }
      predictions_.Add(other.predictions_);
      if (other.model_ != null) {
        if (model_ == null) {
          model_ = new global::Asgt.Type.ModelInfo();
        }
        Model.MergeFrom(other.Model);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            predictions_.AddEntriesFrom(input, _repeated_predictions_codec);
            break;
          }
          case 18: {
            if (model_ == null) {
              model_ = new global::Asgt.Type.ModelInfo();
            }
            input.ReadMessage(model_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SuggestionOptions : pb::IMessage<SuggestionOptions> {
    private static readonly pb::MessageParser<SuggestionOptions> _parser = new pb::MessageParser<SuggestionOptions>(() => new SuggestionOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuggestionOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionOptions(SuggestionOptions other) : this() {
      suggestionLimit_ = other.suggestionLimit_;
      minConfidence_ = other.minConfidence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestionOptions Clone() {
      return new SuggestionOptions(this);
    }

    /// <summary>Field number for the "suggestion_limit" field.</summary>
    public const int SuggestionLimitFieldNumber = 1;
    private int suggestionLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SuggestionLimit {
      get { return suggestionLimit_; }
      set {
        suggestionLimit_ = value;
      }
    }

    /// <summary>Field number for the "min_confidence" field.</summary>
    public const int MinConfidenceFieldNumber = 2;
    private global::Asgt.Type.Confidence.Types.Level minConfidence_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Type.Confidence.Types.Level MinConfidence {
      get { return minConfidence_; }
      set {
        minConfidence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuggestionOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuggestionOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SuggestionLimit != other.SuggestionLimit) return false;
      if (MinConfidence != other.MinConfidence) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SuggestionLimit != 0) hash ^= SuggestionLimit.GetHashCode();
      if (MinConfidence != 0) hash ^= MinConfidence.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SuggestionLimit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SuggestionLimit);
      }
      if (MinConfidence != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MinConfidence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SuggestionLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SuggestionLimit);
      }
      if (MinConfidence != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MinConfidence);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuggestionOptions other) {
      if (other == null) {
        return;
      }
      if (other.SuggestionLimit != 0) {
        SuggestionLimit = other.SuggestionLimit;
      }
      if (other.MinConfidence != 0) {
        MinConfidence = other.MinConfidence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SuggestionLimit = input.ReadInt32();
            break;
          }
          case 16: {
            minConfidence_ = (global::Asgt.Type.Confidence.Types.Level) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Scanned Invoice
  /// </summary>
  public sealed partial class ScannedInvoiceRequest : pb::IMessage<ScannedInvoiceRequest> {
    private static readonly pb::MessageParser<ScannedInvoiceRequest> _parser = new pb::MessageParser<ScannedInvoiceRequest>(() => new ScannedInvoiceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScannedInvoiceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceRequest(ScannedInvoiceRequest other) : this() {
      inputs_ = other.inputs_.Clone();
      datasetName_ = other.datasetName_;
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceRequest Clone() {
      return new ScannedInvoiceRequest(this);
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Asgt.Type.ScannedInvoice> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(10, global::Asgt.Type.ScannedInvoice.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Type.ScannedInvoice> inputs_ = new pbc::RepeatedField<global::Asgt.Type.ScannedInvoice>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Type.ScannedInvoice> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "dataset_name" field.</summary>
    public const int DatasetNameFieldNumber = 2;
    private string datasetName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasetName {
      get { return datasetName_; }
      set {
        datasetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Asgt.Jester.V1Alpha1.SuggestionOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.SuggestionOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScannedInvoiceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScannedInvoiceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inputs_.Equals(other.inputs_)) return false;
      if (DatasetName != other.DatasetName) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inputs_.GetHashCode();
      if (DatasetName.Length != 0) hash ^= DatasetName.GetHashCode();
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (DatasetName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DatasetName);
      }
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (DatasetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetName);
      }
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScannedInvoiceRequest other) {
      if (other == null) {
        return;
      }
      inputs_.Add(other.inputs_);
      if (other.DatasetName.Length != 0) {
        DatasetName = other.DatasetName;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          options_ = new global::Asgt.Jester.V1Alpha1.SuggestionOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 18: {
            DatasetName = input.ReadString();
            break;
          }
          case 26: {
            if (options_ == null) {
              options_ = new global::Asgt.Jester.V1Alpha1.SuggestionOptions();
            }
            input.ReadMessage(options_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Electronic Invoice Line
  /// </summary>
  public sealed partial class ElectronicInvoiceLineRequest : pb::IMessage<ElectronicInvoiceLineRequest> {
    private static readonly pb::MessageParser<ElectronicInvoiceLineRequest> _parser = new pb::MessageParser<ElectronicInvoiceLineRequest>(() => new ElectronicInvoiceLineRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectronicInvoiceLineRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineRequest(ElectronicInvoiceLineRequest other) : this() {
      inputs_ = other.inputs_.Clone();
      datasetName_ = other.datasetName_;
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineRequest Clone() {
      return new ElectronicInvoiceLineRequest(this);
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Asgt.Type.InvoiceLine> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(10, global::Asgt.Type.InvoiceLine.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Type.InvoiceLine> inputs_ = new pbc::RepeatedField<global::Asgt.Type.InvoiceLine>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Type.InvoiceLine> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "dataset_name" field.</summary>
    public const int DatasetNameFieldNumber = 2;
    private string datasetName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasetName {
      get { return datasetName_; }
      set {
        datasetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Asgt.Jester.V1Alpha1.SuggestionOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.SuggestionOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectronicInvoiceLineRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectronicInvoiceLineRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inputs_.Equals(other.inputs_)) return false;
      if (DatasetName != other.DatasetName) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inputs_.GetHashCode();
      if (DatasetName.Length != 0) hash ^= DatasetName.GetHashCode();
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (DatasetName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DatasetName);
      }
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (DatasetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetName);
      }
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectronicInvoiceLineRequest other) {
      if (other == null) {
        return;
      }
      inputs_.Add(other.inputs_);
      if (other.DatasetName.Length != 0) {
        DatasetName = other.DatasetName;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          options_ = new global::Asgt.Jester.V1Alpha1.SuggestionOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 18: {
            DatasetName = input.ReadString();
            break;
          }
          case 26: {
            if (options_ == null) {
              options_ = new global::Asgt.Jester.V1Alpha1.SuggestionOptions();
            }
            input.ReadMessage(options_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Bank
  /// </summary>
  public sealed partial class BankRequest : pb::IMessage<BankRequest> {
    private static readonly pb::MessageParser<BankRequest> _parser = new pb::MessageParser<BankRequest>(() => new BankRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BankRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankRequest(BankRequest other) : this() {
      inputs_ = other.inputs_.Clone();
      datasetName_ = other.datasetName_;
      options_ = other.options_ != null ? other.options_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankRequest Clone() {
      return new BankRequest(this);
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Asgt.Type.BankTransaction> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(10, global::Asgt.Type.BankTransaction.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Type.BankTransaction> inputs_ = new pbc::RepeatedField<global::Asgt.Type.BankTransaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Type.BankTransaction> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "dataset_name" field.</summary>
    public const int DatasetNameFieldNumber = 2;
    private string datasetName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasetName {
      get { return datasetName_; }
      set {
        datasetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private global::Asgt.Jester.V1Alpha1.SuggestionOptions options_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.SuggestionOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BankRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BankRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inputs_.Equals(other.inputs_)) return false;
      if (DatasetName != other.DatasetName) return false;
      if (!object.Equals(Options, other.Options)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inputs_.GetHashCode();
      if (DatasetName.Length != 0) hash ^= DatasetName.GetHashCode();
      if (options_ != null) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (DatasetName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DatasetName);
      }
      if (options_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (DatasetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetName);
      }
      if (options_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BankRequest other) {
      if (other == null) {
        return;
      }
      inputs_.Add(other.inputs_);
      if (other.DatasetName.Length != 0) {
        DatasetName = other.DatasetName;
      }
      if (other.options_ != null) {
        if (options_ == null) {
          options_ = new global::Asgt.Jester.V1Alpha1.SuggestionOptions();
        }
        Options.MergeFrom(other.Options);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 18: {
            DatasetName = input.ReadString();
            break;
          }
          case 26: {
            if (options_ == null) {
              options_ = new global::Asgt.Jester.V1Alpha1.SuggestionOptions();
            }
            input.ReadMessage(options_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
