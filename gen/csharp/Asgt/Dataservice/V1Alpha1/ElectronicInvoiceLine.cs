// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: asgt/dataservice/v1alpha1/electronic_invoice_line.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Asgt.Dataservice.V1Alpha1 {

  /// <summary>Holder for reflection information generated from asgt/dataservice/v1alpha1/electronic_invoice_line.proto</summary>
  public static partial class ElectronicInvoiceLineReflection {

    #region Descriptor
    /// <summary>File descriptor for asgt/dataservice/v1alpha1/electronic_invoice_line.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ElectronicInvoiceLineReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjdhc2d0L2RhdGFzZXJ2aWNlL3YxYWxwaGExL2VsZWN0cm9uaWNfaW52b2lj",
            "ZV9saW5lLnByb3RvEhlhc2d0LmRhdGFzZXJ2aWNlLnYxYWxwaGExGiRhc2d0",
            "L2RhdGFzZXJ2aWNlL3YxYWxwaGExL2RhdGEucHJvdG8aMGFzZ3QvZGF0YXNl",
            "cnZpY2UvdjFhbHBoYTEvcmV0ZW50aW9uX3BvbGljeS5wcm90bxohYXNndC9q",
            "ZXN0ZXIvdjFhbHBoYTEvamVzdGVyLnByb3RvGhxnZW5fYnFfc2NoZW1hL2Jx",
            "X2ZpZWxkLnByb3RvGhxnZW5fYnFfc2NoZW1hL2JxX3RhYmxlLnByb3RvGhxn",
            "b29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGhtnb29nbGUvcHJvdG9idWYv",
            "ZW1wdHkucHJvdG8i7wMKGkVsZWN0cm9uaWNJbnZvaWNlTGluZUVudHJ5Ej4K",
            "AmlkGAEgASgJQjLqPy8iLUlELCBtYXRjaGVzIEVudm95IHJlcXVlc3QgaWQg",
            "aWYgZmVlZGJhY2sgZGF0YRIXCghjb25zdW1lchgCIAEoCUIF6j8CCAESFgoH",
            "ZGF0YXNldBgDIAEoCUIF6j8CCAESVAoEdGFncxgEIAMoCUJG6j9DIkFUYWdz",
            "IGRlZmluZWQgYnkgY29uc3VtZXIsIGVucmljaGVkIGJ5IHNlcnZpY2UgaWYg",
            "dmFsZXRrZXkgaXMgdXNlZBJGCgVpbnB1dBgFIAEoCzI3LmFzZ3QuamVzdGVy",
            "LnYxYWxwaGExLkVsZWN0cm9uaWNJbnZvaWNlTGluZVJlcXVlc3QuRGF0YRI5",
            "Cgt0cnVlX3ZhbHVlcxgGIAMoCzIkLmFzZ3QuZGF0YXNlcnZpY2UudjFhbHBo",
            "YTEuRGF0YVR1cGxlEj4KC3ByZWRfdmFsdWVzGAcgAygLMikuYXNndC5kYXRh",
            "c2VydmljZS52MWFscGhhMS5QcmVkaWN0ZWRUdXBsZRIkCgp0aW1lX2FkZGVk",
            "GAggASgEQhDqPw0IARIJVElNRVNUQU1QOiHqPx4KHGVsZWN0cm9uaWNfaW52",
            "b2ljZV9saW5lX2RhdGEipAEKH0VsZWN0cm9uaWNJbnZvaWNlTGluZUVudHJ5",
            "SW5wdXQSRgoFaW5wdXQYASABKAsyNy5hc2d0Lmplc3Rlci52MWFscGhhMS5F",
            "bGVjdHJvbmljSW52b2ljZUxpbmVSZXF1ZXN0LkRhdGESOQoLdHJ1ZV92YWx1",
            "ZXMYAiADKAsyJC5hc2d0LmRhdGFzZXJ2aWNlLnYxYWxwaGExLkRhdGFUdXBs",
            "ZSLiAQopQ3JlYXRlRWxlY3Ryb25pY0ludm9pY2VMaW5lRGF0YXNldFJlcXVl",
            "c3QSFAoMZGF0YXNldF9uYW1lGAEgASgJEgwKBHRhZ3MYAiADKAkSSwoHZW50",
            "cmllcxgDIAMoCzI6LmFzZ3QuZGF0YXNlcnZpY2UudjFhbHBoYTEuRWxlY3Ry",
            "b25pY0ludm9pY2VMaW5lRW50cnlJbnB1dBJEChByZXRlbnRpb25fcG9saWN5",
            "GAQgASgLMiouYXNndC5kYXRhc2VydmljZS52MWFscGhhMS5SZXRlbnRpb25Q",
            "b2xpY3kiiwEKJkFwcGVuZEVsZWN0cm9uaWNJbnZvaWNlTGluZURhdGFSZXF1",
            "ZXN0EhQKDGRhdGFzZXRfbmFtZRgBIAEoCRJLCgdlbnRyaWVzGAMgAygLMjou",
            "YXNndC5kYXRhc2VydmljZS52MWFscGhhMS5FbGVjdHJvbmljSW52b2ljZUxp",
            "bmVFbnRyeUlucHV0MqUECiBFbGVjdHJvbmljSW52b2ljZUxpbmVEYXRhc2Vy",
            "dmljZRK1AQoiQ3JlYXRlRWxlY3Ryb25pY0ludm9pY2VMaW5lRGF0YXNldBJE",
            "LmFzZ3QuZGF0YXNlcnZpY2UudjFhbHBoYTEuQ3JlYXRlRWxlY3Ryb25pY0lu",
            "dm9pY2VMaW5lRGF0YXNldFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkiMYLT5JMCKyImL3YxYWxwaGExL2VsZWN0cm9uaWNpbnZvaWNlbGluZTpj",
            "cmVhdGU6ASoSrwEKH0FwcGVuZEVsZWN0cm9uaWNJbnZvaWNlTGluZURhdGES",
            "QS5hc2d0LmRhdGFzZXJ2aWNlLnYxYWxwaGExLkFwcGVuZEVsZWN0cm9uaWNJ",
            "bnZvaWNlTGluZURhdGFSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5",
            "IjGC0+STAisiJi92MWFscGhhMS9lbGVjdHJvbmljaW52b2ljZWxpbmU6YXBw",
            "ZW5kOgEqEpYBCh9EZWxldGVFbGVjdHJvbmljSW52b2ljZUxpbmVEYXRhEigu",
            "YXNndC5kYXRhc2VydmljZS52MWFscGhhMS5EZWxldGVSZXF1ZXN0GhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5IjGC0+STAisiJi92MWFscGhhMS9lbGVjdHJv",
            "bmljaW52b2ljZWxpbmU6ZGVsZXRlOgEqQg1aC2RhdGFzZXJ2aWNlYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Asgt.Dataservice.V1Alpha1.DataReflection.Descriptor, global::Asgt.Dataservice.V1Alpha1.RetentionPolicyReflection.Descriptor, global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor, global::GenBqSchema.BqFieldReflection.Descriptor, global::GenBqSchema.BqTableReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntry), global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntry.Parser, new[]{ "Id", "Consumer", "Dataset", "Tags", "Input", "TrueValues", "PredValues", "TimeAdded" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntryInput), global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntryInput.Parser, new[]{ "Input", "TrueValues" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.CreateElectronicInvoiceLineDatasetRequest), global::Asgt.Dataservice.V1Alpha1.CreateElectronicInvoiceLineDatasetRequest.Parser, new[]{ "DatasetName", "Tags", "Entries", "RetentionPolicy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.AppendElectronicInvoiceLineDataRequest), global::Asgt.Dataservice.V1Alpha1.AppendElectronicInvoiceLineDataRequest.Parser, new[]{ "DatasetName", "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Electronic Invoice Line BQ schema gen - could be used for adding direct developer data endpoints
  /// </summary>
  public sealed partial class ElectronicInvoiceLineEntry : pb::IMessage<ElectronicInvoiceLineEntry> {
    private static readonly pb::MessageParser<ElectronicInvoiceLineEntry> _parser = new pb::MessageParser<ElectronicInvoiceLineEntry>(() => new ElectronicInvoiceLineEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectronicInvoiceLineEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineEntry(ElectronicInvoiceLineEntry other) : this() {
      id_ = other.id_;
      consumer_ = other.consumer_;
      dataset_ = other.dataset_;
      tags_ = other.tags_.Clone();
      input_ = other.input_ != null ? other.input_.Clone() : null;
      trueValues_ = other.trueValues_.Clone();
      predValues_ = other.predValues_.Clone();
      timeAdded_ = other.timeAdded_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineEntry Clone() {
      return new ElectronicInvoiceLineEntry(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "consumer" field.</summary>
    public const int ConsumerFieldNumber = 2;
    private string consumer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Consumer {
      get { return consumer_; }
      set {
        consumer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 3;
    private string dataset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 5;
    private global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "true_values" field.</summary>
    public const int TrueValuesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.DataTuple> _repeated_trueValues_codec
        = pb::FieldCodec.ForMessage(50, global::Asgt.Dataservice.V1Alpha1.DataTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> trueValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> TrueValues {
      get { return trueValues_; }
    }

    /// <summary>Field number for the "pred_values" field.</summary>
    public const int PredValuesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> _repeated_predValues_codec
        = pb::FieldCodec.ForMessage(58, global::Asgt.Dataservice.V1Alpha1.PredictedTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> predValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.PredictedTuple> PredValues {
      get { return predValues_; }
    }

    /// <summary>Field number for the "time_added" field.</summary>
    public const int TimeAddedFieldNumber = 8;
    private ulong timeAdded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TimeAdded {
      get { return timeAdded_; }
      set {
        timeAdded_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectronicInvoiceLineEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectronicInvoiceLineEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Consumer != other.Consumer) return false;
      if (Dataset != other.Dataset) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if(!trueValues_.Equals(other.trueValues_)) return false;
      if(!predValues_.Equals(other.predValues_)) return false;
      if (TimeAdded != other.TimeAdded) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Consumer.Length != 0) hash ^= Consumer.GetHashCode();
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= trueValues_.GetHashCode();
      hash ^= predValues_.GetHashCode();
      if (TimeAdded != 0UL) hash ^= TimeAdded.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Consumer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Consumer);
      }
      if (Dataset.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Dataset);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (input_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Input);
      }
      trueValues_.WriteTo(output, _repeated_trueValues_codec);
      predValues_.WriteTo(output, _repeated_predValues_codec);
      if (TimeAdded != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(TimeAdded);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Consumer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Consumer);
      }
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += trueValues_.CalculateSize(_repeated_trueValues_codec);
      size += predValues_.CalculateSize(_repeated_predValues_codec);
      if (TimeAdded != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeAdded);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectronicInvoiceLineEntry other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Consumer.Length != 0) {
        Consumer = other.Consumer;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      tags_.Add(other.tags_);
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
        }
        Input.MergeFrom(other.Input);
      }
      trueValues_.Add(other.trueValues_);
      predValues_.Add(other.predValues_);
      if (other.TimeAdded != 0UL) {
        TimeAdded = other.TimeAdded;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Consumer = input.ReadString();
            break;
          }
          case 26: {
            Dataset = input.ReadString();
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 42: {
            if (input_ == null) {
              input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
            }
            input.ReadMessage(input_);
            break;
          }
          case 50: {
            trueValues_.AddEntriesFrom(input, _repeated_trueValues_codec);
            break;
          }
          case 58: {
            predValues_.AddEntriesFrom(input, _repeated_predValues_codec);
            break;
          }
          case 64: {
            TimeAdded = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ElectronicInvoiceLineEntryInput : pb::IMessage<ElectronicInvoiceLineEntryInput> {
    private static readonly pb::MessageParser<ElectronicInvoiceLineEntryInput> _parser = new pb::MessageParser<ElectronicInvoiceLineEntryInput>(() => new ElectronicInvoiceLineEntryInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElectronicInvoiceLineEntryInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineEntryInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineEntryInput(ElectronicInvoiceLineEntryInput other) : this() {
      input_ = other.input_ != null ? other.input_.Clone() : null;
      trueValues_ = other.trueValues_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElectronicInvoiceLineEntryInput Clone() {
      return new ElectronicInvoiceLineEntryInput(this);
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 1;
    private global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "true_values" field.</summary>
    public const int TrueValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.DataTuple> _repeated_trueValues_codec
        = pb::FieldCodec.ForMessage(18, global::Asgt.Dataservice.V1Alpha1.DataTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> trueValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> TrueValues {
      get { return trueValues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElectronicInvoiceLineEntryInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElectronicInvoiceLineEntryInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Input, other.Input)) return false;
      if(!trueValues_.Equals(other.trueValues_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= trueValues_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (input_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Input);
      }
      trueValues_.WriteTo(output, _repeated_trueValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += trueValues_.CalculateSize(_repeated_trueValues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElectronicInvoiceLineEntryInput other) {
      if (other == null) {
        return;
      }
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
        }
        Input.MergeFrom(other.Input);
      }
      trueValues_.Add(other.trueValues_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (input_ == null) {
              input_ = new global::Asgt.Jester.V1Alpha1.ElectronicInvoiceLineRequest.Types.Data();
            }
            input.ReadMessage(input_);
            break;
          }
          case 18: {
            trueValues_.AddEntriesFrom(input, _repeated_trueValues_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateElectronicInvoiceLineDatasetRequest : pb::IMessage<CreateElectronicInvoiceLineDatasetRequest> {
    private static readonly pb::MessageParser<CreateElectronicInvoiceLineDatasetRequest> _parser = new pb::MessageParser<CreateElectronicInvoiceLineDatasetRequest>(() => new CreateElectronicInvoiceLineDatasetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateElectronicInvoiceLineDatasetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateElectronicInvoiceLineDatasetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateElectronicInvoiceLineDatasetRequest(CreateElectronicInvoiceLineDatasetRequest other) : this() {
      datasetName_ = other.datasetName_;
      tags_ = other.tags_.Clone();
      entries_ = other.entries_.Clone();
      retentionPolicy_ = other.retentionPolicy_ != null ? other.retentionPolicy_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateElectronicInvoiceLineDatasetRequest Clone() {
      return new CreateElectronicInvoiceLineDatasetRequest(this);
    }

    /// <summary>Field number for the "dataset_name" field.</summary>
    public const int DatasetNameFieldNumber = 1;
    private string datasetName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasetName {
      get { return datasetName_; }
      set {
        datasetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntryInput> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(26, global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntryInput.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntryInput> entries_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntryInput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntryInput> Entries {
      get { return entries_; }
    }

    /// <summary>Field number for the "retention_policy" field.</summary>
    public const int RetentionPolicyFieldNumber = 4;
    private global::Asgt.Dataservice.V1Alpha1.RetentionPolicy retentionPolicy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Dataservice.V1Alpha1.RetentionPolicy RetentionPolicy {
      get { return retentionPolicy_; }
      set {
        retentionPolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateElectronicInvoiceLineDatasetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateElectronicInvoiceLineDatasetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DatasetName != other.DatasetName) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if(!entries_.Equals(other.entries_)) return false;
      if (!object.Equals(RetentionPolicy, other.RetentionPolicy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DatasetName.Length != 0) hash ^= DatasetName.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (retentionPolicy_ != null) hash ^= RetentionPolicy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DatasetName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DatasetName);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      entries_.WriteTo(output, _repeated_entries_codec);
      if (retentionPolicy_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RetentionPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DatasetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetName);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (retentionPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetentionPolicy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateElectronicInvoiceLineDatasetRequest other) {
      if (other == null) {
        return;
      }
      if (other.DatasetName.Length != 0) {
        DatasetName = other.DatasetName;
      }
      tags_.Add(other.tags_);
      entries_.Add(other.entries_);
      if (other.retentionPolicy_ != null) {
        if (retentionPolicy_ == null) {
          retentionPolicy_ = new global::Asgt.Dataservice.V1Alpha1.RetentionPolicy();
        }
        RetentionPolicy.MergeFrom(other.RetentionPolicy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DatasetName = input.ReadString();
            break;
          }
          case 18: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
          case 34: {
            if (retentionPolicy_ == null) {
              retentionPolicy_ = new global::Asgt.Dataservice.V1Alpha1.RetentionPolicy();
            }
            input.ReadMessage(retentionPolicy_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppendElectronicInvoiceLineDataRequest : pb::IMessage<AppendElectronicInvoiceLineDataRequest> {
    private static readonly pb::MessageParser<AppendElectronicInvoiceLineDataRequest> _parser = new pb::MessageParser<AppendElectronicInvoiceLineDataRequest>(() => new AppendElectronicInvoiceLineDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppendElectronicInvoiceLineDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendElectronicInvoiceLineDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendElectronicInvoiceLineDataRequest(AppendElectronicInvoiceLineDataRequest other) : this() {
      datasetName_ = other.datasetName_;
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendElectronicInvoiceLineDataRequest Clone() {
      return new AppendElectronicInvoiceLineDataRequest(this);
    }

    /// <summary>Field number for the "dataset_name" field.</summary>
    public const int DatasetNameFieldNumber = 1;
    private string datasetName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasetName {
      get { return datasetName_; }
      set {
        datasetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntryInput> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(26, global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntryInput.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntryInput> entries_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntryInput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.ElectronicInvoiceLineEntryInput> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppendElectronicInvoiceLineDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppendElectronicInvoiceLineDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DatasetName != other.DatasetName) return false;
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DatasetName.Length != 0) hash ^= DatasetName.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DatasetName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DatasetName);
      }
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DatasetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetName);
      }
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppendElectronicInvoiceLineDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.DatasetName.Length != 0) {
        DatasetName = other.DatasetName;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DatasetName = input.ReadString();
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
