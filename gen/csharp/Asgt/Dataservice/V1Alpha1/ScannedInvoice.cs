// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: asgt/dataservice/v1alpha1/scanned_invoice.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Asgt.Dataservice.V1Alpha1 {

  /// <summary>Holder for reflection information generated from asgt/dataservice/v1alpha1/scanned_invoice.proto</summary>
  public static partial class ScannedInvoiceReflection {

    #region Descriptor
    /// <summary>File descriptor for asgt/dataservice/v1alpha1/scanned_invoice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ScannedInvoiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9hc2d0L2RhdGFzZXJ2aWNlL3YxYWxwaGExL3NjYW5uZWRfaW52b2ljZS5w",
            "cm90bxIZYXNndC5kYXRhc2VydmljZS52MWFscGhhMRokYXNndC9kYXRhc2Vy",
            "dmljZS92MWFscGhhMS9kYXRhLnByb3RvGiFhc2d0L2plc3Rlci92MWFscGhh",
            "MS9qZXN0ZXIucHJvdG8aGmFzZ3QvdHlwZS9tb2RlbF9pbmZvLnByb3RvGhxn",
            "ZW5fYnFfc2NoZW1hL2JxX2ZpZWxkLnByb3RvGhxnZW5fYnFfc2NoZW1hL2Jx",
            "X3RhYmxlLnByb3RvGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGhtn",
            "b29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8i+gMKE1NjYW5uZWRJbnZvaWNl",
            "RW50cnkSPgoCaWQYASABKAlCMuo/LyItSUQsIG1hdGNoZXMgRW52b3kgcmVx",
            "dWVzdCBpZCBpZiBmZWVkYmFjayBkYXRhEhcKCGNvbnN1bWVyGAIgASgJQgXq",
            "PwIIARIWCgdkYXRhc2V0GAMgASgJQgXqPwIIARJUCgR0YWdzGAQgAygJQkbq",
            "P0MiQVRhZ3MgZGVmaW5lZCBieSBjb25zdW1lciwgZW5yaWNoZWQgYnkgc2Vy",
            "dmljZSBpZiB2YWxldGtleSBpcyB1c2VkEj8KBWlucHV0GAUgASgLMjAuYXNn",
            "dC5qZXN0ZXIudjFhbHBoYTEuU2Nhbm5lZEludm9pY2VSZXF1ZXN0LkRhdGES",
            "OQoLdHJ1ZV92YWx1ZXMYBiADKAsyJC5hc2d0LmRhdGFzZXJ2aWNlLnYxYWxw",
            "aGExLkRhdGFUdXBsZRIjCgVtb2RlbBgJIAEoCzIULmFzZ3QudHlwZS5Nb2Rl",
            "bEluZm8SOgoLcHJlZGljdGlvbnMYCiADKAsyJS5hc2d0LmRhdGFzZXJ2aWNl",
            "LnYxYWxwaGExLlByZWRpY3Rpb24SJAoKdGltZV9hZGRlZBgIIAEoBEIQ6j8N",
            "CAESCVRJTUVTVEFNUDoZ6j8WChRzY2FubmVkX2ludm9pY2VfZGF0YSKWAQoY",
            "U2Nhbm5lZEludm9pY2VFbnRyeUlucHV0Ej8KBWlucHV0GAEgASgLMjAuYXNn",
            "dC5qZXN0ZXIudjFhbHBoYTEuU2Nhbm5lZEludm9pY2VSZXF1ZXN0LkRhdGES",
            "OQoLdHJ1ZV92YWx1ZXMYAiADKAsyJC5hc2d0LmRhdGFzZXJ2aWNlLnYxYWxw",
            "aGExLkRhdGFUdXBsZSLUAQoiQ3JlYXRlU2Nhbm5lZEludm9pY2VEYXRhc2V0",
            "UmVxdWVzdBIUCgxkYXRhc2V0X25hbWUYASABKAkSDAoEdGFncxgCIAMoCRJE",
            "CgdlbnRyaWVzGAMgAygLMjMuYXNndC5kYXRhc2VydmljZS52MWFscGhhMS5T",
            "Y2FubmVkSW52b2ljZUVudHJ5SW5wdXQSRAoQcmV0ZW50aW9uX3BvbGljeRgE",
            "IAEoCzIqLmFzZ3QuZGF0YXNlcnZpY2UudjFhbHBoYTEuUmV0ZW50aW9uUG9s",
            "aWN5In0KH0FwcGVuZFNjYW5uZWRJbnZvaWNlRGF0YVJlcXVlc3QSFAoMZGF0",
            "YXNldF9uYW1lGAEgASgJEkQKB2VudHJpZXMYAyADKAsyMy5hc2d0LmRhdGFz",
            "ZXJ2aWNlLnYxYWxwaGExLlNjYW5uZWRJbnZvaWNlRW50cnlJbnB1dDLmAwoZ",
            "U2Nhbm5lZEludm9pY2VEYXRhc2VydmljZRKgAQobQ3JlYXRlU2Nhbm5lZElu",
            "dm9pY2VEYXRhc2V0Ej0uYXNndC5kYXRhc2VydmljZS52MWFscGhhMS5DcmVh",
            "dGVTY2FubmVkSW52b2ljZURhdGFzZXRSZXF1ZXN0GhYuZ29vZ2xlLnByb3Rv",
            "YnVmLkVtcHR5IiqC0+STAiQiHy92MWFscGhhMS9zY2FubmVkaW52b2ljZTpj",
            "cmVhdGU6ASoSmgEKGEFwcGVuZFNjYW5uZWRJbnZvaWNlRGF0YRI6LmFzZ3Qu",
            "ZGF0YXNlcnZpY2UudjFhbHBoYTEuQXBwZW5kU2Nhbm5lZEludm9pY2VEYXRh",
            "UmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIqgtPkkwIkIh8vdjFh",
            "bHBoYTEvc2Nhbm5lZGludm9pY2U6YXBwZW5kOgEqEogBChhEZWxldGVTY2Fu",
            "bmVkSW52b2ljZURhdGESKC5hc2d0LmRhdGFzZXJ2aWNlLnYxYWxwaGExLkRl",
            "bGV0ZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiKoLT5JMCJCIf",
            "L3YxYWxwaGExL3NjYW5uZWRpbnZvaWNlOmRlbGV0ZToBKkINWgtkYXRhc2Vy",
            "dmljZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Asgt.Dataservice.V1Alpha1.DataReflection.Descriptor, global::Asgt.Jester.V1Alpha1.JesterReflection.Descriptor, global::Asgt.Type.ModelInfoReflection.Descriptor, global::GenBqSchema.BqFieldReflection.Descriptor, global::GenBqSchema.BqTableReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntry), global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntry.Parser, new[]{ "Id", "Consumer", "Dataset", "Tags", "Input", "TrueValues", "Model", "Predictions", "TimeAdded" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntryInput), global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntryInput.Parser, new[]{ "Input", "TrueValues" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.CreateScannedInvoiceDatasetRequest), global::Asgt.Dataservice.V1Alpha1.CreateScannedInvoiceDatasetRequest.Parser, new[]{ "DatasetName", "Tags", "Entries", "RetentionPolicy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.Dataservice.V1Alpha1.AppendScannedInvoiceDataRequest), global::Asgt.Dataservice.V1Alpha1.AppendScannedInvoiceDataRequest.Parser, new[]{ "DatasetName", "Entries" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Scanned Invoice BQ schema gen - could be used for adding direct developer data endpoints
  /// </summary>
  public sealed partial class ScannedInvoiceEntry : pb::IMessage<ScannedInvoiceEntry> {
    private static readonly pb::MessageParser<ScannedInvoiceEntry> _parser = new pb::MessageParser<ScannedInvoiceEntry>(() => new ScannedInvoiceEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScannedInvoiceEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceEntry(ScannedInvoiceEntry other) : this() {
      id_ = other.id_;
      consumer_ = other.consumer_;
      dataset_ = other.dataset_;
      tags_ = other.tags_.Clone();
      input_ = other.input_ != null ? other.input_.Clone() : null;
      trueValues_ = other.trueValues_.Clone();
      model_ = other.model_ != null ? other.model_.Clone() : null;
      predictions_ = other.predictions_.Clone();
      timeAdded_ = other.timeAdded_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceEntry Clone() {
      return new ScannedInvoiceEntry(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "consumer" field.</summary>
    public const int ConsumerFieldNumber = 2;
    private string consumer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Consumer {
      get { return consumer_; }
      set {
        consumer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 3;
    private string dataset_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 5;
    private global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "true_values" field.</summary>
    public const int TrueValuesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.DataTuple> _repeated_trueValues_codec
        = pb::FieldCodec.ForMessage(50, global::Asgt.Dataservice.V1Alpha1.DataTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> trueValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> TrueValues {
      get { return trueValues_; }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 9;
    private global::Asgt.Type.ModelInfo model_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Type.ModelInfo Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    /// <summary>Field number for the "predictions" field.</summary>
    public const int PredictionsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.Prediction> _repeated_predictions_codec
        = pb::FieldCodec.ForMessage(82, global::Asgt.Dataservice.V1Alpha1.Prediction.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.Prediction> predictions_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.Prediction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.Prediction> Predictions {
      get { return predictions_; }
    }

    /// <summary>Field number for the "time_added" field.</summary>
    public const int TimeAddedFieldNumber = 8;
    private ulong timeAdded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TimeAdded {
      get { return timeAdded_; }
      set {
        timeAdded_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScannedInvoiceEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScannedInvoiceEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Consumer != other.Consumer) return false;
      if (Dataset != other.Dataset) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if(!trueValues_.Equals(other.trueValues_)) return false;
      if (!object.Equals(Model, other.Model)) return false;
      if(!predictions_.Equals(other.predictions_)) return false;
      if (TimeAdded != other.TimeAdded) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Consumer.Length != 0) hash ^= Consumer.GetHashCode();
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= trueValues_.GetHashCode();
      if (model_ != null) hash ^= Model.GetHashCode();
      hash ^= predictions_.GetHashCode();
      if (TimeAdded != 0UL) hash ^= TimeAdded.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Consumer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Consumer);
      }
      if (Dataset.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Dataset);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (input_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Input);
      }
      trueValues_.WriteTo(output, _repeated_trueValues_codec);
      if (TimeAdded != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(TimeAdded);
      }
      if (model_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Model);
      }
      predictions_.WriteTo(output, _repeated_predictions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Consumer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Consumer);
      }
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += trueValues_.CalculateSize(_repeated_trueValues_codec);
      if (model_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
      }
      size += predictions_.CalculateSize(_repeated_predictions_codec);
      if (TimeAdded != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeAdded);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScannedInvoiceEntry other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Consumer.Length != 0) {
        Consumer = other.Consumer;
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      tags_.Add(other.tags_);
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data();
        }
        Input.MergeFrom(other.Input);
      }
      trueValues_.Add(other.trueValues_);
      if (other.model_ != null) {
        if (model_ == null) {
          model_ = new global::Asgt.Type.ModelInfo();
        }
        Model.MergeFrom(other.Model);
      }
      predictions_.Add(other.predictions_);
      if (other.TimeAdded != 0UL) {
        TimeAdded = other.TimeAdded;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Consumer = input.ReadString();
            break;
          }
          case 26: {
            Dataset = input.ReadString();
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 42: {
            if (input_ == null) {
              input_ = new global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data();
            }
            input.ReadMessage(input_);
            break;
          }
          case 50: {
            trueValues_.AddEntriesFrom(input, _repeated_trueValues_codec);
            break;
          }
          case 64: {
            TimeAdded = input.ReadUInt64();
            break;
          }
          case 74: {
            if (model_ == null) {
              model_ = new global::Asgt.Type.ModelInfo();
            }
            input.ReadMessage(model_);
            break;
          }
          case 82: {
            predictions_.AddEntriesFrom(input, _repeated_predictions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ScannedInvoiceEntryInput : pb::IMessage<ScannedInvoiceEntryInput> {
    private static readonly pb::MessageParser<ScannedInvoiceEntryInput> _parser = new pb::MessageParser<ScannedInvoiceEntryInput>(() => new ScannedInvoiceEntryInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScannedInvoiceEntryInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceEntryInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceEntryInput(ScannedInvoiceEntryInput other) : this() {
      input_ = other.input_ != null ? other.input_.Clone() : null;
      trueValues_ = other.trueValues_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScannedInvoiceEntryInput Clone() {
      return new ScannedInvoiceEntryInput(this);
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 1;
    private global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "true_values" field.</summary>
    public const int TrueValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.DataTuple> _repeated_trueValues_codec
        = pb::FieldCodec.ForMessage(18, global::Asgt.Dataservice.V1Alpha1.DataTuple.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> trueValues_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.DataTuple> TrueValues {
      get { return trueValues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScannedInvoiceEntryInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScannedInvoiceEntryInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Input, other.Input)) return false;
      if(!trueValues_.Equals(other.trueValues_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= trueValues_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (input_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Input);
      }
      trueValues_.WriteTo(output, _repeated_trueValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += trueValues_.CalculateSize(_repeated_trueValues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScannedInvoiceEntryInput other) {
      if (other == null) {
        return;
      }
      if (other.input_ != null) {
        if (input_ == null) {
          input_ = new global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data();
        }
        Input.MergeFrom(other.Input);
      }
      trueValues_.Add(other.trueValues_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (input_ == null) {
              input_ = new global::Asgt.Jester.V1Alpha1.ScannedInvoiceRequest.Types.Data();
            }
            input.ReadMessage(input_);
            break;
          }
          case 18: {
            trueValues_.AddEntriesFrom(input, _repeated_trueValues_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateScannedInvoiceDatasetRequest : pb::IMessage<CreateScannedInvoiceDatasetRequest> {
    private static readonly pb::MessageParser<CreateScannedInvoiceDatasetRequest> _parser = new pb::MessageParser<CreateScannedInvoiceDatasetRequest>(() => new CreateScannedInvoiceDatasetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateScannedInvoiceDatasetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateScannedInvoiceDatasetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateScannedInvoiceDatasetRequest(CreateScannedInvoiceDatasetRequest other) : this() {
      datasetName_ = other.datasetName_;
      tags_ = other.tags_.Clone();
      entries_ = other.entries_.Clone();
      retentionPolicy_ = other.retentionPolicy_ != null ? other.retentionPolicy_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateScannedInvoiceDatasetRequest Clone() {
      return new CreateScannedInvoiceDatasetRequest(this);
    }

    /// <summary>Field number for the "dataset_name" field.</summary>
    public const int DatasetNameFieldNumber = 1;
    private string datasetName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasetName {
      get { return datasetName_; }
      set {
        datasetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntryInput> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(26, global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntryInput.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntryInput> entries_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntryInput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntryInput> Entries {
      get { return entries_; }
    }

    /// <summary>Field number for the "retention_policy" field.</summary>
    public const int RetentionPolicyFieldNumber = 4;
    private global::Asgt.Dataservice.V1Alpha1.RetentionPolicy retentionPolicy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.Dataservice.V1Alpha1.RetentionPolicy RetentionPolicy {
      get { return retentionPolicy_; }
      set {
        retentionPolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateScannedInvoiceDatasetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateScannedInvoiceDatasetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DatasetName != other.DatasetName) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if(!entries_.Equals(other.entries_)) return false;
      if (!object.Equals(RetentionPolicy, other.RetentionPolicy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DatasetName.Length != 0) hash ^= DatasetName.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (retentionPolicy_ != null) hash ^= RetentionPolicy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DatasetName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DatasetName);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      entries_.WriteTo(output, _repeated_entries_codec);
      if (retentionPolicy_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RetentionPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DatasetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetName);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (retentionPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetentionPolicy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateScannedInvoiceDatasetRequest other) {
      if (other == null) {
        return;
      }
      if (other.DatasetName.Length != 0) {
        DatasetName = other.DatasetName;
      }
      tags_.Add(other.tags_);
      entries_.Add(other.entries_);
      if (other.retentionPolicy_ != null) {
        if (retentionPolicy_ == null) {
          retentionPolicy_ = new global::Asgt.Dataservice.V1Alpha1.RetentionPolicy();
        }
        RetentionPolicy.MergeFrom(other.RetentionPolicy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DatasetName = input.ReadString();
            break;
          }
          case 18: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
          case 34: {
            if (retentionPolicy_ == null) {
              retentionPolicy_ = new global::Asgt.Dataservice.V1Alpha1.RetentionPolicy();
            }
            input.ReadMessage(retentionPolicy_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppendScannedInvoiceDataRequest : pb::IMessage<AppendScannedInvoiceDataRequest> {
    private static readonly pb::MessageParser<AppendScannedInvoiceDataRequest> _parser = new pb::MessageParser<AppendScannedInvoiceDataRequest>(() => new AppendScannedInvoiceDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppendScannedInvoiceDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendScannedInvoiceDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendScannedInvoiceDataRequest(AppendScannedInvoiceDataRequest other) : this() {
      datasetName_ = other.datasetName_;
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppendScannedInvoiceDataRequest Clone() {
      return new AppendScannedInvoiceDataRequest(this);
    }

    /// <summary>Field number for the "dataset_name" field.</summary>
    public const int DatasetNameFieldNumber = 1;
    private string datasetName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatasetName {
      get { return datasetName_; }
      set {
        datasetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntryInput> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(26, global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntryInput.Parser);
    private readonly pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntryInput> entries_ = new pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntryInput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Asgt.Dataservice.V1Alpha1.ScannedInvoiceEntryInput> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppendScannedInvoiceDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppendScannedInvoiceDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DatasetName != other.DatasetName) return false;
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DatasetName.Length != 0) hash ^= DatasetName.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DatasetName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DatasetName);
      }
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DatasetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetName);
      }
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppendScannedInvoiceDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.DatasetName.Length != 0) {
        DatasetName = other.DatasetName;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DatasetName = input.ReadString();
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
