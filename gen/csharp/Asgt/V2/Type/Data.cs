// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: asgt/v2/type/data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Asgt.V2.Type {

  /// <summary>Holder for reflection information generated from asgt/v2/type/data.proto</summary>
  public static partial class DataReflection {

    #region Descriptor
    /// <summary>File descriptor for asgt/v2/type/data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdhc2d0L3YyL3R5cGUvZGF0YS5wcm90bxIMYXNndC52Mi50eXBlGh9nb29n",
            "bGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhd2YWxpZGF0ZS92YWxpZGF0",
            "ZS5wcm90byIXCgdJbnZvaWNlEgwKBHRleHQYASABKAkiKwoLVHJhbnNhY3Rp",
            "b24SDAoEdGV4dBgBIAEoCRIOCgZhbW91bnQYAiABKAIirAEKC0ludm9pY2VM",
            "aW5lEg8KB2l0ZW1faWQYASABKAkSDAoEdGV4dBgCIAEoCRIuCgppc3N1ZV9k",
            "YXRlGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIoCghzdXBw",
            "bGllchgEIAEoCzIWLmFzZ3QudjIudHlwZS5TdXBwbGllchIUCgxjdXN0b21l",
            "cl9yZWYYBSABKAkSDgoGYW1vdW50GAcgASgCIlAKCFN1cHBsaWVyEiMKAmlk",
            "GAEgASgJQhf6QhRyEihAMg5eW0EtWmEtejAtOV0qJBIMCgRuYW1lGAIgASgJ",
            "EhEKCWdsb2JhbF9pZBgDIAEoCSKnAQoERGF0YRIwCgt0cmFuc2FjdGlvbhgB",
            "IAEoCzIZLmFzZ3QudjIudHlwZS5UcmFuc2FjdGlvbkgAEigKB2ludm9pY2UY",
            "AiABKAsyFS5hc2d0LnYyLnR5cGUuSW52b2ljZUgAEjEKDGludm9pY2VfbGlu",
            "ZRgDIAEoCzIZLmFzZ3QudjIudHlwZS5JbnZvaWNlTGluZUgAQhAKDmRhdGFf",
            "c3RydWN0dXJlQjtaOWdpdGh1Yi5jb20vZS1jb25vbWljL3ZtbGFwaXMvZ2Vu",
            "L2dvL2FzZ3QvdjIvdHlwZTthc2d0dHlwZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.V2.Type.Invoice), global::Asgt.V2.Type.Invoice.Parser, new[]{ "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.V2.Type.Transaction), global::Asgt.V2.Type.Transaction.Parser, new[]{ "Text", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.V2.Type.InvoiceLine), global::Asgt.V2.Type.InvoiceLine.Parser, new[]{ "ItemId", "Text", "IssueDate", "Supplier", "CustomerRef", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.V2.Type.Supplier), global::Asgt.V2.Type.Supplier.Parser, new[]{ "Id", "Name", "GlobalId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asgt.V2.Type.Data), global::Asgt.V2.Type.Data.Parser, new[]{ "Transaction", "Invoice", "InvoiceLine" }, new[]{ "DataStructure" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Used in scanned-invoice requests.
  /// </summary>
  public sealed partial class Invoice : pb::IMessage<Invoice> {
    private static readonly pb::MessageParser<Invoice> _parser = new pb::MessageParser<Invoice>(() => new Invoice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Invoice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.V2.Type.DataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invoice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invoice(Invoice other) : this() {
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invoice Clone() {
      return new Invoice(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    /// <summary>
    /// Invoice text from the SmartScan product.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Invoice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Invoice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Invoice other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Used in bank requests.
  /// </summary>
  public sealed partial class Transaction : pb::IMessage<Transaction> {
    private static readonly pb::MessageParser<Transaction> _parser = new pb::MessageParser<Transaction>(() => new Transaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.V2.Type.DataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction(Transaction other) : this() {
      text_ = other.text_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction Clone() {
      return new Transaction(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    /// <summary>
    /// Text of the bank transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private float amount_;
    /// <summary>
    /// Amount of the transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Amount, other.Amount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Amount != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Amount);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (Amount != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Amount != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transaction other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Amount != 0F) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 21: {
            Amount = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Used in electronic-invoice-line requests.
  /// </summary>
  public sealed partial class InvoiceLine : pb::IMessage<InvoiceLine> {
    private static readonly pb::MessageParser<InvoiceLine> _parser = new pb::MessageParser<InvoiceLine>(() => new InvoiceLine());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvoiceLine> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.V2.Type.DataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvoiceLine() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvoiceLine(InvoiceLine other) : this() {
      itemId_ = other.itemId_;
      text_ = other.text_;
      issueDate_ = other.issueDate_ != null ? other.issueDate_.Clone() : null;
      supplier_ = other.supplier_ != null ? other.supplier_.Clone() : null;
      customerRef_ = other.customerRef_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvoiceLine Clone() {
      return new InvoiceLine(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private string itemId_ = "";
    /// <summary>
    /// Id of the product (item).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemId {
      get { return itemId_; }
      set {
        itemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    /// <summary>
    /// Text of the invoice line.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "issue_date" field.</summary>
    public const int IssueDateFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp issueDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp IssueDate {
      get { return issueDate_; }
      set {
        issueDate_ = value;
      }
    }

    /// <summary>Field number for the "supplier" field.</summary>
    public const int SupplierFieldNumber = 4;
    private global::Asgt.V2.Type.Supplier supplier_;
    /// <summary>
    /// Supplier of the invoice.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.V2.Type.Supplier Supplier {
      get { return supplier_; }
      set {
        supplier_ = value;
      }
    }

    /// <summary>Field number for the "customer_ref" field.</summary>
    public const int CustomerRefFieldNumber = 5;
    private string customerRef_ = "";
    /// <summary>
    /// reference to the customer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerRef {
      get { return customerRef_; }
      set {
        customerRef_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 7;
    private float amount_;
    /// <summary>
    /// Amount of the invoice line.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvoiceLine);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvoiceLine other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Text != other.Text) return false;
      if (!object.Equals(IssueDate, other.IssueDate)) return false;
      if (!object.Equals(Supplier, other.Supplier)) return false;
      if (CustomerRef != other.CustomerRef) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Amount, other.Amount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId.Length != 0) hash ^= ItemId.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (issueDate_ != null) hash ^= IssueDate.GetHashCode();
      if (supplier_ != null) hash ^= Supplier.GetHashCode();
      if (CustomerRef.Length != 0) hash ^= CustomerRef.GetHashCode();
      if (Amount != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Amount);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ItemId);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (issueDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(IssueDate);
      }
      if (supplier_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Supplier);
      }
      if (CustomerRef.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CustomerRef);
      }
      if (Amount != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemId);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (issueDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IssueDate);
      }
      if (supplier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Supplier);
      }
      if (CustomerRef.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerRef);
      }
      if (Amount != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvoiceLine other) {
      if (other == null) {
        return;
      }
      if (other.ItemId.Length != 0) {
        ItemId = other.ItemId;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.issueDate_ != null) {
        if (issueDate_ == null) {
          issueDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        IssueDate.MergeFrom(other.IssueDate);
      }
      if (other.supplier_ != null) {
        if (supplier_ == null) {
          supplier_ = new global::Asgt.V2.Type.Supplier();
        }
        Supplier.MergeFrom(other.Supplier);
      }
      if (other.CustomerRef.Length != 0) {
        CustomerRef = other.CustomerRef;
      }
      if (other.Amount != 0F) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ItemId = input.ReadString();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            if (issueDate_ == null) {
              issueDate_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(issueDate_);
            break;
          }
          case 34: {
            if (supplier_ == null) {
              supplier_ = new global::Asgt.V2.Type.Supplier();
            }
            input.ReadMessage(supplier_);
            break;
          }
          case 42: {
            CustomerRef = input.ReadString();
            break;
          }
          case 61: {
            Amount = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Supplier : pb::IMessage<Supplier> {
    private static readonly pb::MessageParser<Supplier> _parser = new pb::MessageParser<Supplier>(() => new Supplier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Supplier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.V2.Type.DataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Supplier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Supplier(Supplier other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      globalId_ = other.globalId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Supplier Clone() {
      return new Supplier(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Id of the supplier; not nullable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of the supplier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "global_id" field.</summary>
    public const int GlobalIdFieldNumber = 3;
    private string globalId_ = "";
    /// <summary>
    /// Global ID of the supplier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GlobalId {
      get { return globalId_; }
      set {
        globalId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Supplier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Supplier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (GlobalId != other.GlobalId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (GlobalId.Length != 0) hash ^= GlobalId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (GlobalId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GlobalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (GlobalId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GlobalId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Supplier other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.GlobalId.Length != 0) {
        GlobalId = other.GlobalId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            GlobalId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Data : pb::IMessage<Data> {
    private static readonly pb::MessageParser<Data> _parser = new pb::MessageParser<Data>(() => new Data());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Data> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asgt.V2.Type.DataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data(Data other) : this() {
      switch (other.DataStructureCase) {
        case DataStructureOneofCase.Transaction:
          Transaction = other.Transaction.Clone();
          break;
        case DataStructureOneofCase.Invoice:
          Invoice = other.Invoice.Clone();
          break;
        case DataStructureOneofCase.InvoiceLine:
          InvoiceLine = other.InvoiceLine.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Data Clone() {
      return new Data(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    /// <summary>
    /// Transaction-level information; at this time used only with bank transactions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.V2.Type.Transaction Transaction {
      get { return dataStructureCase_ == DataStructureOneofCase.Transaction ? (global::Asgt.V2.Type.Transaction) dataStructure_ : null; }
      set {
        dataStructure_ = value;
        dataStructureCase_ = value == null ? DataStructureOneofCase.None : DataStructureOneofCase.Transaction;
      }
    }

    /// <summary>Field number for the "invoice" field.</summary>
    public const int InvoiceFieldNumber = 2;
    /// <summary>
    /// Invoice-level information for e-invoices and scanned invoices and receipts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.V2.Type.Invoice Invoice {
      get { return dataStructureCase_ == DataStructureOneofCase.Invoice ? (global::Asgt.V2.Type.Invoice) dataStructure_ : null; }
      set {
        dataStructure_ = value;
        dataStructureCase_ = value == null ? DataStructureOneofCase.None : DataStructureOneofCase.Invoice;
      }
    }

    /// <summary>Field number for the "invoice_line" field.</summary>
    public const int InvoiceLineFieldNumber = 3;
    /// <summary>
    /// Line-level information for e-invoices; use one sample per invoice line
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Asgt.V2.Type.InvoiceLine InvoiceLine {
      get { return dataStructureCase_ == DataStructureOneofCase.InvoiceLine ? (global::Asgt.V2.Type.InvoiceLine) dataStructure_ : null; }
      set {
        dataStructure_ = value;
        dataStructureCase_ = value == null ? DataStructureOneofCase.None : DataStructureOneofCase.InvoiceLine;
      }
    }

    private object dataStructure_;
    /// <summary>Enum of possible cases for the "data_structure" oneof.</summary>
    public enum DataStructureOneofCase {
      None = 0,
      Transaction = 1,
      Invoice = 2,
      InvoiceLine = 3,
    }
    private DataStructureOneofCase dataStructureCase_ = DataStructureOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataStructureOneofCase DataStructureCase {
      get { return dataStructureCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDataStructure() {
      dataStructureCase_ = DataStructureOneofCase.None;
      dataStructure_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Data);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Data other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (!object.Equals(Invoice, other.Invoice)) return false;
      if (!object.Equals(InvoiceLine, other.InvoiceLine)) return false;
      if (DataStructureCase != other.DataStructureCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataStructureCase_ == DataStructureOneofCase.Transaction) hash ^= Transaction.GetHashCode();
      if (dataStructureCase_ == DataStructureOneofCase.Invoice) hash ^= Invoice.GetHashCode();
      if (dataStructureCase_ == DataStructureOneofCase.InvoiceLine) hash ^= InvoiceLine.GetHashCode();
      hash ^= (int) dataStructureCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataStructureCase_ == DataStructureOneofCase.Transaction) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (dataStructureCase_ == DataStructureOneofCase.Invoice) {
        output.WriteRawTag(18);
        output.WriteMessage(Invoice);
      }
      if (dataStructureCase_ == DataStructureOneofCase.InvoiceLine) {
        output.WriteRawTag(26);
        output.WriteMessage(InvoiceLine);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataStructureCase_ == DataStructureOneofCase.Transaction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (dataStructureCase_ == DataStructureOneofCase.Invoice) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Invoice);
      }
      if (dataStructureCase_ == DataStructureOneofCase.InvoiceLine) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvoiceLine);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Data other) {
      if (other == null) {
        return;
      }
      switch (other.DataStructureCase) {
        case DataStructureOneofCase.Transaction:
          if (Transaction == null) {
            Transaction = new global::Asgt.V2.Type.Transaction();
          }
          Transaction.MergeFrom(other.Transaction);
          break;
        case DataStructureOneofCase.Invoice:
          if (Invoice == null) {
            Invoice = new global::Asgt.V2.Type.Invoice();
          }
          Invoice.MergeFrom(other.Invoice);
          break;
        case DataStructureOneofCase.InvoiceLine:
          if (InvoiceLine == null) {
            InvoiceLine = new global::Asgt.V2.Type.InvoiceLine();
          }
          InvoiceLine.MergeFrom(other.InvoiceLine);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Asgt.V2.Type.Transaction subBuilder = new global::Asgt.V2.Type.Transaction();
            if (dataStructureCase_ == DataStructureOneofCase.Transaction) {
              subBuilder.MergeFrom(Transaction);
            }
            input.ReadMessage(subBuilder);
            Transaction = subBuilder;
            break;
          }
          case 18: {
            global::Asgt.V2.Type.Invoice subBuilder = new global::Asgt.V2.Type.Invoice();
            if (dataStructureCase_ == DataStructureOneofCase.Invoice) {
              subBuilder.MergeFrom(Invoice);
            }
            input.ReadMessage(subBuilder);
            Invoice = subBuilder;
            break;
          }
          case 26: {
            global::Asgt.V2.Type.InvoiceLine subBuilder = new global::Asgt.V2.Type.InvoiceLine();
            if (dataStructureCase_ == DataStructureOneofCase.InvoiceLine) {
              subBuilder.MergeFrom(InvoiceLine);
            }
            input.ReadMessage(subBuilder);
            InvoiceLine = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
