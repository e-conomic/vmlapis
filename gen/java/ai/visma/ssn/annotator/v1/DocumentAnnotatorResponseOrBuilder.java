// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ssn/annotator/v1/annotator.proto

package ai.visma.ssn.annotator.v1;

public interface DocumentAnnotatorResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ssn.annotator.v1.DocumentAnnotatorResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * orderDate
   * ISO 8601 date string, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate order_date = 1 [json_name = "orderDate"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getOrderDateList();
  /**
   * <pre>
   * orderDate
   * ISO 8601 date string, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate order_date = 1 [json_name = "orderDate"];</code>
   */
  ai.visma.ssn.type.Candidate getOrderDate(int index);
  /**
   * <pre>
   * orderDate
   * ISO 8601 date string, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate order_date = 1 [json_name = "orderDate"];</code>
   */
  int getOrderDateCount();
  /**
   * <pre>
   * orderDate
   * ISO 8601 date string, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate order_date = 1 [json_name = "orderDate"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getOrderDateOrBuilderList();
  /**
   * <pre>
   * orderDate
   * ISO 8601 date string, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate order_date = 1 [json_name = "orderDate"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getOrderDateOrBuilder(
      int index);

  /**
   * <pre>
   * paymentDueDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate payment_due_date = 2 [json_name = "paymentDueDate"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getPaymentDueDateList();
  /**
   * <pre>
   * paymentDueDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate payment_due_date = 2 [json_name = "paymentDueDate"];</code>
   */
  ai.visma.ssn.type.Candidate getPaymentDueDate(int index);
  /**
   * <pre>
   * paymentDueDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate payment_due_date = 2 [json_name = "paymentDueDate"];</code>
   */
  int getPaymentDueDateCount();
  /**
   * <pre>
   * paymentDueDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate payment_due_date = 2 [json_name = "paymentDueDate"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getPaymentDueDateOrBuilderList();
  /**
   * <pre>
   * paymentDueDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate payment_due_date = 2 [json_name = "paymentDueDate"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getPaymentDueDateOrBuilder(
      int index);

  /**
   * <pre>
   * currency
   * ISO 4217 string, ie. a 3-letter capitalized string
   * Example: "NOK"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate currency = 3 [json_name = "currency"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getCurrencyList();
  /**
   * <pre>
   * currency
   * ISO 4217 string, ie. a 3-letter capitalized string
   * Example: "NOK"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate currency = 3 [json_name = "currency"];</code>
   */
  ai.visma.ssn.type.Candidate getCurrency(int index);
  /**
   * <pre>
   * currency
   * ISO 4217 string, ie. a 3-letter capitalized string
   * Example: "NOK"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate currency = 3 [json_name = "currency"];</code>
   */
  int getCurrencyCount();
  /**
   * <pre>
   * currency
   * ISO 4217 string, ie. a 3-letter capitalized string
   * Example: "NOK"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate currency = 3 [json_name = "currency"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getCurrencyOrBuilderList();
  /**
   * <pre>
   * currency
   * ISO 4217 string, ie. a 3-letter capitalized string
   * Example: "NOK"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate currency = 3 [json_name = "currency"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getCurrencyOrBuilder(
      int index);

  /**
   * <pre>
   * totalVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 4 [json_name = "totalVat"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getTotalVatList();
  /**
   * <pre>
   * totalVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 4 [json_name = "totalVat"];</code>
   */
  ai.visma.ssn.type.Candidate getTotalVat(int index);
  /**
   * <pre>
   * totalVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 4 [json_name = "totalVat"];</code>
   */
  int getTotalVatCount();
  /**
   * <pre>
   * totalVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 4 [json_name = "totalVat"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalVatOrBuilderList();
  /**
   * <pre>
   * totalVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 4 [json_name = "totalVat"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getTotalVatOrBuilder(
      int index);

  /**
   * <pre>
   * totalInclVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 5 [json_name = "totalInclVat"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getTotalInclVatList();
  /**
   * <pre>
   * totalInclVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 5 [json_name = "totalInclVat"];</code>
   */
  ai.visma.ssn.type.Candidate getTotalInclVat(int index);
  /**
   * <pre>
   * totalInclVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 5 [json_name = "totalInclVat"];</code>
   */
  int getTotalInclVatCount();
  /**
   * <pre>
   * totalInclVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 5 [json_name = "totalInclVat"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalInclVatOrBuilderList();
  /**
   * <pre>
   * totalInclVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 5 [json_name = "totalInclVat"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getTotalInclVatOrBuilder(
      int index);

  /**
   * <pre>
   * totalExclVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 6 [json_name = "totalExclVat"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getTotalExclVatList();
  /**
   * <pre>
   * totalExclVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 6 [json_name = "totalExclVat"];</code>
   */
  ai.visma.ssn.type.Candidate getTotalExclVat(int index);
  /**
   * <pre>
   * totalExclVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 6 [json_name = "totalExclVat"];</code>
   */
  int getTotalExclVatCount();
  /**
   * <pre>
   * totalExclVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 6 [json_name = "totalExclVat"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalExclVatOrBuilderList();
  /**
   * <pre>
   * totalExclVat
   * A string that parses as a two-decimal number
   * Example: "10.0" or "11.11"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 6 [json_name = "totalExclVat"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getTotalExclVatOrBuilder(
      int index);

  /**
   * <pre>
   * [DEPRECATED]
   * Use SUPPLIER_ORGANISATION_NUMBER or SUPPLIER_VAT_NUMBER instead.
   * supplierCorporateId
   * The company VAT number
   * Example: "123456789B01" (for Dutch companies)
   * or "12345678" (for Norwegian companies)
   * Note: The field is repeated because multiple VAT numbers might exist.
   * If you have the VAT number of you customer, you can use this information
   * to find out which VAT number belongs to the supplier of the invoice.
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_corporate_id = 7 [json_name = "supplierCorporateId"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getSupplierCorporateIdList();
  /**
   * <pre>
   * [DEPRECATED]
   * Use SUPPLIER_ORGANISATION_NUMBER or SUPPLIER_VAT_NUMBER instead.
   * supplierCorporateId
   * The company VAT number
   * Example: "123456789B01" (for Dutch companies)
   * or "12345678" (for Norwegian companies)
   * Note: The field is repeated because multiple VAT numbers might exist.
   * If you have the VAT number of you customer, you can use this information
   * to find out which VAT number belongs to the supplier of the invoice.
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_corporate_id = 7 [json_name = "supplierCorporateId"];</code>
   */
  ai.visma.ssn.type.Candidate getSupplierCorporateId(int index);
  /**
   * <pre>
   * [DEPRECATED]
   * Use SUPPLIER_ORGANISATION_NUMBER or SUPPLIER_VAT_NUMBER instead.
   * supplierCorporateId
   * The company VAT number
   * Example: "123456789B01" (for Dutch companies)
   * or "12345678" (for Norwegian companies)
   * Note: The field is repeated because multiple VAT numbers might exist.
   * If you have the VAT number of you customer, you can use this information
   * to find out which VAT number belongs to the supplier of the invoice.
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_corporate_id = 7 [json_name = "supplierCorporateId"];</code>
   */
  int getSupplierCorporateIdCount();
  /**
   * <pre>
   * [DEPRECATED]
   * Use SUPPLIER_ORGANISATION_NUMBER or SUPPLIER_VAT_NUMBER instead.
   * supplierCorporateId
   * The company VAT number
   * Example: "123456789B01" (for Dutch companies)
   * or "12345678" (for Norwegian companies)
   * Note: The field is repeated because multiple VAT numbers might exist.
   * If you have the VAT number of you customer, you can use this information
   * to find out which VAT number belongs to the supplier of the invoice.
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_corporate_id = 7 [json_name = "supplierCorporateId"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getSupplierCorporateIdOrBuilderList();
  /**
   * <pre>
   * [DEPRECATED]
   * Use SUPPLIER_ORGANISATION_NUMBER or SUPPLIER_VAT_NUMBER instead.
   * supplierCorporateId
   * The company VAT number
   * Example: "123456789B01" (for Dutch companies)
   * or "12345678" (for Norwegian companies)
   * Note: The field is repeated because multiple VAT numbers might exist.
   * If you have the VAT number of you customer, you can use this information
   * to find out which VAT number belongs to the supplier of the invoice.
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_corporate_id = 7 [json_name = "supplierCorporateId"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getSupplierCorporateIdOrBuilder(
      int index);

  /**
   * <pre>
   * supplierCountryCode
   * ISO 3166-1 alpha-2 string, ei. a two-letter capitalized string
   * Example: "NO"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_country_code = 8 [json_name = "supplierCountryCode"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getSupplierCountryCodeList();
  /**
   * <pre>
   * supplierCountryCode
   * ISO 3166-1 alpha-2 string, ei. a two-letter capitalized string
   * Example: "NO"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_country_code = 8 [json_name = "supplierCountryCode"];</code>
   */
  ai.visma.ssn.type.Candidate getSupplierCountryCode(int index);
  /**
   * <pre>
   * supplierCountryCode
   * ISO 3166-1 alpha-2 string, ei. a two-letter capitalized string
   * Example: "NO"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_country_code = 8 [json_name = "supplierCountryCode"];</code>
   */
  int getSupplierCountryCodeCount();
  /**
   * <pre>
   * supplierCountryCode
   * ISO 3166-1 alpha-2 string, ei. a two-letter capitalized string
   * Example: "NO"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_country_code = 8 [json_name = "supplierCountryCode"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getSupplierCountryCodeOrBuilderList();
  /**
   * <pre>
   * supplierCountryCode
   * ISO 3166-1 alpha-2 string, ei. a two-letter capitalized string
   * Example: "NO"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_country_code = 8 [json_name = "supplierCountryCode"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getSupplierCountryCodeOrBuilder(
      int index);

  /**
   * <pre>
   * documentType
   * Either "Receipt" or "Invoice"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_type = 9 [json_name = "documentType"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getDocumentTypeList();
  /**
   * <pre>
   * documentType
   * Either "Receipt" or "Invoice"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_type = 9 [json_name = "documentType"];</code>
   */
  ai.visma.ssn.type.Candidate getDocumentType(int index);
  /**
   * <pre>
   * documentType
   * Either "Receipt" or "Invoice"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_type = 9 [json_name = "documentType"];</code>
   */
  int getDocumentTypeCount();
  /**
   * <pre>
   * documentType
   * Either "Receipt" or "Invoice"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_type = 9 [json_name = "documentType"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getDocumentTypeOrBuilderList();
  /**
   * <pre>
   * documentType
   * Either "Receipt" or "Invoice"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_type = 9 [json_name = "documentType"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getDocumentTypeOrBuilder(
      int index);

  /**
   * <pre>
   * paymentMethod
   * Either "Cash" or "CreditCard"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate payment_method = 10 [json_name = "paymentMethod"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getPaymentMethodList();
  /**
   * <pre>
   * paymentMethod
   * Either "Cash" or "CreditCard"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate payment_method = 10 [json_name = "paymentMethod"];</code>
   */
  ai.visma.ssn.type.Candidate getPaymentMethod(int index);
  /**
   * <pre>
   * paymentMethod
   * Either "Cash" or "CreditCard"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate payment_method = 10 [json_name = "paymentMethod"];</code>
   */
  int getPaymentMethodCount();
  /**
   * <pre>
   * paymentMethod
   * Either "Cash" or "CreditCard"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate payment_method = 10 [json_name = "paymentMethod"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getPaymentMethodOrBuilderList();
  /**
   * <pre>
   * paymentMethod
   * Either "Cash" or "CreditCard"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate payment_method = 10 [json_name = "paymentMethod"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getPaymentMethodOrBuilder(
      int index);

  /**
   * <pre>
   * creditCardNumber
   * Four digits
   * Example: "0012"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate credit_card_last_four = 11 [json_name = "creditCardLastFour"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getCreditCardLastFourList();
  /**
   * <pre>
   * creditCardNumber
   * Four digits
   * Example: "0012"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate credit_card_last_four = 11 [json_name = "creditCardLastFour"];</code>
   */
  ai.visma.ssn.type.Candidate getCreditCardLastFour(int index);
  /**
   * <pre>
   * creditCardNumber
   * Four digits
   * Example: "0012"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate credit_card_last_four = 11 [json_name = "creditCardLastFour"];</code>
   */
  int getCreditCardLastFourCount();
  /**
   * <pre>
   * creditCardNumber
   * Four digits
   * Example: "0012"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate credit_card_last_four = 11 [json_name = "creditCardLastFour"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getCreditCardLastFourOrBuilderList();
  /**
   * <pre>
   * creditCardNumber
   * Four digits
   * Example: "0012"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate credit_card_last_four = 11 [json_name = "creditCardLastFour"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getCreditCardLastFourOrBuilder(
      int index);

  /**
   * <pre>
   * [DEPRECATED]
   * use document number instead
   * invoiceNumber
   * The supplier defined identifier af the invoice
   * Example: "12345-A99"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate invoice_number = 12 [json_name = "invoiceNumber"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getInvoiceNumberList();
  /**
   * <pre>
   * [DEPRECATED]
   * use document number instead
   * invoiceNumber
   * The supplier defined identifier af the invoice
   * Example: "12345-A99"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate invoice_number = 12 [json_name = "invoiceNumber"];</code>
   */
  ai.visma.ssn.type.Candidate getInvoiceNumber(int index);
  /**
   * <pre>
   * [DEPRECATED]
   * use document number instead
   * invoiceNumber
   * The supplier defined identifier af the invoice
   * Example: "12345-A99"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate invoice_number = 12 [json_name = "invoiceNumber"];</code>
   */
  int getInvoiceNumberCount();
  /**
   * <pre>
   * [DEPRECATED]
   * use document number instead
   * invoiceNumber
   * The supplier defined identifier af the invoice
   * Example: "12345-A99"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate invoice_number = 12 [json_name = "invoiceNumber"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getInvoiceNumberOrBuilderList();
  /**
   * <pre>
   * [DEPRECATED]
   * use document number instead
   * invoiceNumber
   * The supplier defined identifier af the invoice
   * Example: "12345-A99"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate invoice_number = 12 [json_name = "invoiceNumber"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getInvoiceNumberOrBuilder(
      int index);

  /**
   * <pre>
   * Return text annotation
   * </pre>
   *
   * <code>.ssn.type.TextAnnotation text_annotation = 13 [json_name = "textAnnotation"];</code>
   * @return Whether the textAnnotation field is set.
   */
  boolean hasTextAnnotation();
  /**
   * <pre>
   * Return text annotation
   * </pre>
   *
   * <code>.ssn.type.TextAnnotation text_annotation = 13 [json_name = "textAnnotation"];</code>
   * @return The textAnnotation.
   */
  ai.visma.ssn.type.TextAnnotation getTextAnnotation();
  /**
   * <pre>
   * Return text annotation
   * </pre>
   *
   * <code>.ssn.type.TextAnnotation text_annotation = 13 [json_name = "textAnnotation"];</code>
   */
  ai.visma.ssn.type.TextAnnotationOrBuilder getTextAnnotationOrBuilder();

  /**
   * <pre>
   * example: "71"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_type = 14 [json_name = "ocrLineDkType"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getOcrLineDkTypeList();
  /**
   * <pre>
   * example: "71"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_type = 14 [json_name = "ocrLineDkType"];</code>
   */
  ai.visma.ssn.type.Candidate getOcrLineDkType(int index);
  /**
   * <pre>
   * example: "71"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_type = 14 [json_name = "ocrLineDkType"];</code>
   */
  int getOcrLineDkTypeCount();
  /**
   * <pre>
   * example: "71"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_type = 14 [json_name = "ocrLineDkType"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getOcrLineDkTypeOrBuilderList();
  /**
   * <pre>
   * example: "71"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_type = 14 [json_name = "ocrLineDkType"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getOcrLineDkTypeOrBuilder(
      int index);

  /**
   * <pre>
   * example: "000002879094031"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_payment_id = 15 [json_name = "ocrLineDkPaymentId"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getOcrLineDkPaymentIdList();
  /**
   * <pre>
   * example: "000002879094031"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_payment_id = 15 [json_name = "ocrLineDkPaymentId"];</code>
   */
  ai.visma.ssn.type.Candidate getOcrLineDkPaymentId(int index);
  /**
   * <pre>
   * example: "000002879094031"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_payment_id = 15 [json_name = "ocrLineDkPaymentId"];</code>
   */
  int getOcrLineDkPaymentIdCount();
  /**
   * <pre>
   * example: "000002879094031"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_payment_id = 15 [json_name = "ocrLineDkPaymentId"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getOcrLineDkPaymentIdOrBuilderList();
  /**
   * <pre>
   * example: "000002879094031"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_payment_id = 15 [json_name = "ocrLineDkPaymentId"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getOcrLineDkPaymentIdOrBuilder(
      int index);

  /**
   * <pre>
   *example: "86570807"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_creditor_id = 16 [json_name = "ocrLineDkCreditorId"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getOcrLineDkCreditorIdList();
  /**
   * <pre>
   *example: "86570807"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_creditor_id = 16 [json_name = "ocrLineDkCreditorId"];</code>
   */
  ai.visma.ssn.type.Candidate getOcrLineDkCreditorId(int index);
  /**
   * <pre>
   *example: "86570807"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_creditor_id = 16 [json_name = "ocrLineDkCreditorId"];</code>
   */
  int getOcrLineDkCreditorIdCount();
  /**
   * <pre>
   *example: "86570807"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_creditor_id = 16 [json_name = "ocrLineDkCreditorId"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getOcrLineDkCreditorIdOrBuilderList();
  /**
   * <pre>
   *example: "86570807"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_dk_creditor_id = 16 [json_name = "ocrLineDkCreditorId"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getOcrLineDkCreditorIdOrBuilder(
      int index);

  /**
   * <pre>
   * example: "050765098"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_payment_id = 17 [json_name = "ocrLineSePaymentId"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getOcrLineSePaymentIdList();
  /**
   * <pre>
   * example: "050765098"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_payment_id = 17 [json_name = "ocrLineSePaymentId"];</code>
   */
  ai.visma.ssn.type.Candidate getOcrLineSePaymentId(int index);
  /**
   * <pre>
   * example: "050765098"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_payment_id = 17 [json_name = "ocrLineSePaymentId"];</code>
   */
  int getOcrLineSePaymentIdCount();
  /**
   * <pre>
   * example: "050765098"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_payment_id = 17 [json_name = "ocrLineSePaymentId"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getOcrLineSePaymentIdOrBuilderList();
  /**
   * <pre>
   * example: "050765098"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_payment_id = 17 [json_name = "ocrLineSePaymentId"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getOcrLineSePaymentIdOrBuilder(
      int index);

  /**
   * <pre>
   * example: "2654507"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_bankgiro_creditor_id = 18 [json_name = "ocrLineSeBankgiroCreditorId"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getOcrLineSeBankgiroCreditorIdList();
  /**
   * <pre>
   * example: "2654507"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_bankgiro_creditor_id = 18 [json_name = "ocrLineSeBankgiroCreditorId"];</code>
   */
  ai.visma.ssn.type.Candidate getOcrLineSeBankgiroCreditorId(int index);
  /**
   * <pre>
   * example: "2654507"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_bankgiro_creditor_id = 18 [json_name = "ocrLineSeBankgiroCreditorId"];</code>
   */
  int getOcrLineSeBankgiroCreditorIdCount();
  /**
   * <pre>
   * example: "2654507"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_bankgiro_creditor_id = 18 [json_name = "ocrLineSeBankgiroCreditorId"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getOcrLineSeBankgiroCreditorIdOrBuilderList();
  /**
   * <pre>
   * example: "2654507"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_bankgiro_creditor_id = 18 [json_name = "ocrLineSeBankgiroCreditorId"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getOcrLineSeBankgiroCreditorIdOrBuilder(
      int index);

  /**
   * <pre>
   * example: "5000872"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_plusgiro_creditor_id = 19 [json_name = "ocrLineSePlusgiroCreditorId"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getOcrLineSePlusgiroCreditorIdList();
  /**
   * <pre>
   * example: "5000872"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_plusgiro_creditor_id = 19 [json_name = "ocrLineSePlusgiroCreditorId"];</code>
   */
  ai.visma.ssn.type.Candidate getOcrLineSePlusgiroCreditorId(int index);
  /**
   * <pre>
   * example: "5000872"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_plusgiro_creditor_id = 19 [json_name = "ocrLineSePlusgiroCreditorId"];</code>
   */
  int getOcrLineSePlusgiroCreditorIdCount();
  /**
   * <pre>
   * example: "5000872"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_plusgiro_creditor_id = 19 [json_name = "ocrLineSePlusgiroCreditorId"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getOcrLineSePlusgiroCreditorIdOrBuilderList();
  /**
   * <pre>
   * example: "5000872"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_se_plusgiro_creditor_id = 19 [json_name = "ocrLineSePlusgiroCreditorId"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getOcrLineSePlusgiroCreditorIdOrBuilder(
      int index);

  /**
   * <pre>
   * example: "12345678903"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_no_payment_id = 20 [json_name = "ocrLineNoPaymentId"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getOcrLineNoPaymentIdList();
  /**
   * <pre>
   * example: "12345678903"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_no_payment_id = 20 [json_name = "ocrLineNoPaymentId"];</code>
   */
  ai.visma.ssn.type.Candidate getOcrLineNoPaymentId(int index);
  /**
   * <pre>
   * example: "12345678903"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_no_payment_id = 20 [json_name = "ocrLineNoPaymentId"];</code>
   */
  int getOcrLineNoPaymentIdCount();
  /**
   * <pre>
   * example: "12345678903"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_no_payment_id = 20 [json_name = "ocrLineNoPaymentId"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getOcrLineNoPaymentIdOrBuilderList();
  /**
   * <pre>
   * example: "12345678903"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_no_payment_id = 20 [json_name = "ocrLineNoPaymentId"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getOcrLineNoPaymentIdOrBuilder(
      int index);

  /**
   * <pre>
   * example: "0817937867870002"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_fi_payment_id = 21 [json_name = "ocrLineFiPaymentId"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getOcrLineFiPaymentIdList();
  /**
   * <pre>
   * example: "0817937867870002"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_fi_payment_id = 21 [json_name = "ocrLineFiPaymentId"];</code>
   */
  ai.visma.ssn.type.Candidate getOcrLineFiPaymentId(int index);
  /**
   * <pre>
   * example: "0817937867870002"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_fi_payment_id = 21 [json_name = "ocrLineFiPaymentId"];</code>
   */
  int getOcrLineFiPaymentIdCount();
  /**
   * <pre>
   * example: "0817937867870002"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_fi_payment_id = 21 [json_name = "ocrLineFiPaymentId"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getOcrLineFiPaymentIdOrBuilderList();
  /**
   * <pre>
   * example: "0817937867870002"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_fi_payment_id = 21 [json_name = "ocrLineFiPaymentId"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getOcrLineFiPaymentIdOrBuilder(
      int index);

  /**
   * <pre>
   * example: "00000159220010146012"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_nl_payment_id = 22 [json_name = "ocrLineNlPaymentId"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getOcrLineNlPaymentIdList();
  /**
   * <pre>
   * example: "00000159220010146012"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_nl_payment_id = 22 [json_name = "ocrLineNlPaymentId"];</code>
   */
  ai.visma.ssn.type.Candidate getOcrLineNlPaymentId(int index);
  /**
   * <pre>
   * example: "00000159220010146012"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_nl_payment_id = 22 [json_name = "ocrLineNlPaymentId"];</code>
   */
  int getOcrLineNlPaymentIdCount();
  /**
   * <pre>
   * example: "00000159220010146012"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_nl_payment_id = 22 [json_name = "ocrLineNlPaymentId"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getOcrLineNlPaymentIdOrBuilderList();
  /**
   * <pre>
   * example: "00000159220010146012"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_nl_payment_id = 22 [json_name = "ocrLineNlPaymentId"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getOcrLineNlPaymentIdOrBuilder(
      int index);

  /**
   * <pre>
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_be_payment_id = 40 [json_name = "ocrLineBePaymentId"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getOcrLineBePaymentIdList();
  /**
   * <pre>
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_be_payment_id = 40 [json_name = "ocrLineBePaymentId"];</code>
   */
  ai.visma.ssn.type.Candidate getOcrLineBePaymentId(int index);
  /**
   * <pre>
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_be_payment_id = 40 [json_name = "ocrLineBePaymentId"];</code>
   */
  int getOcrLineBePaymentIdCount();
  /**
   * <pre>
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_be_payment_id = 40 [json_name = "ocrLineBePaymentId"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getOcrLineBePaymentIdOrBuilderList();
  /**
   * <pre>
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate ocr_line_be_payment_id = 40 [json_name = "ocrLineBePaymentId"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getOcrLineBePaymentIdOrBuilder(
      int index);

  /**
   * <pre>
   * Return a string containing the text from the document
   * </pre>
   *
   * <code>string text = 23 [json_name = "text"];</code>
   * @return The text.
   */
  java.lang.String getText();
  /**
   * <pre>
   * Return a string containing the text from the document
   * </pre>
   *
   * <code>string text = 23 [json_name = "text"];</code>
   * @return The bytes for text.
   */
  com.google.protobuf.ByteString
      getTextBytes();

  /**
   * <pre>
   * Feedback ID is used to correct made predictions through the
   * Feedback API.
   * </pre>
   *
   * <code>string feedback_id = 24 [json_name = "feedbackId"];</code>
   * @return The feedbackId.
   */
  java.lang.String getFeedbackId();
  /**
   * <pre>
   * Feedback ID is used to correct made predictions through the
   * Feedback API.
   * </pre>
   *
   * <code>string feedback_id = 24 [json_name = "feedbackId"];</code>
   * @return The bytes for feedbackId.
   */
  com.google.protobuf.ByteString
      getFeedbackIdBytes();

  /**
   * <pre>
   * The first two letters are a country code. The next two digits are
   * check digits for the ISO 7064 Mod 97, 10 checksum
   * example: "DK50 0040 0440 1162 43", "NO8330001234567"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate iban = 25 [json_name = "iban"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getIbanList();
  /**
   * <pre>
   * The first two letters are a country code. The next two digits are
   * check digits for the ISO 7064 Mod 97, 10 checksum
   * example: "DK50 0040 0440 1162 43", "NO8330001234567"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate iban = 25 [json_name = "iban"];</code>
   */
  ai.visma.ssn.type.Candidate getIban(int index);
  /**
   * <pre>
   * The first two letters are a country code. The next two digits are
   * check digits for the ISO 7064 Mod 97, 10 checksum
   * example: "DK50 0040 0440 1162 43", "NO8330001234567"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate iban = 25 [json_name = "iban"];</code>
   */
  int getIbanCount();
  /**
   * <pre>
   * The first two letters are a country code. The next two digits are
   * check digits for the ISO 7064 Mod 97, 10 checksum
   * example: "DK50 0040 0440 1162 43", "NO8330001234567"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate iban = 25 [json_name = "iban"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getIbanOrBuilderList();
  /**
   * <pre>
   * The first two letters are a country code. The next two digits are
   * check digits for the ISO 7064 Mod 97, 10 checksum
   * example: "DK50 0040 0440 1162 43", "NO8330001234567"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate iban = 25 [json_name = "iban"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getIbanOrBuilder(
      int index);

  /**
   * <pre>
   * Invoice lines represented in a form of text, amount and page reference
   * to state on which page the line was found
   * </pre>
   *
   * <code>repeated .ssn.type.LineCandidate lines = 26 [json_name = "lines"];</code>
   */
  java.util.List<ai.visma.ssn.type.LineCandidate> 
      getLinesList();
  /**
   * <pre>
   * Invoice lines represented in a form of text, amount and page reference
   * to state on which page the line was found
   * </pre>
   *
   * <code>repeated .ssn.type.LineCandidate lines = 26 [json_name = "lines"];</code>
   */
  ai.visma.ssn.type.LineCandidate getLines(int index);
  /**
   * <pre>
   * Invoice lines represented in a form of text, amount and page reference
   * to state on which page the line was found
   * </pre>
   *
   * <code>repeated .ssn.type.LineCandidate lines = 26 [json_name = "lines"];</code>
   */
  int getLinesCount();
  /**
   * <pre>
   * Invoice lines represented in a form of text, amount and page reference
   * to state on which page the line was found
   * </pre>
   *
   * <code>repeated .ssn.type.LineCandidate lines = 26 [json_name = "lines"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.LineCandidateOrBuilder> 
      getLinesOrBuilderList();
  /**
   * <pre>
   * Invoice lines represented in a form of text, amount and page reference
   * to state on which page the line was found
   * </pre>
   *
   * <code>repeated .ssn.type.LineCandidate lines = 26 [json_name = "lines"];</code>
   */
  ai.visma.ssn.type.LineCandidateOrBuilder getLinesOrBuilder(
      int index);

  /**
   * <pre>
   * Base64 encoded PNG image  of the first page of PDF document sent in request
   * </pre>
   *
   * <code>string preview = 27 [json_name = "preview"];</code>
   * @return The preview.
   */
  java.lang.String getPreview();
  /**
   * <pre>
   * Base64 encoded PNG image  of the first page of PDF document sent in request
   * </pre>
   *
   * <code>string preview = 27 [json_name = "preview"];</code>
   * @return The bytes for preview.
   */
  com.google.protobuf.ByteString
      getPreviewBytes();

  /**
   * <pre>
   * Country specific bank account number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bank_account_number = 28 [json_name = "bankAccountNumber"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getBankAccountNumberList();
  /**
   * <pre>
   * Country specific bank account number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bank_account_number = 28 [json_name = "bankAccountNumber"];</code>
   */
  ai.visma.ssn.type.Candidate getBankAccountNumber(int index);
  /**
   * <pre>
   * Country specific bank account number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bank_account_number = 28 [json_name = "bankAccountNumber"];</code>
   */
  int getBankAccountNumberCount();
  /**
   * <pre>
   * Country specific bank account number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bank_account_number = 28 [json_name = "bankAccountNumber"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getBankAccountNumberOrBuilderList();
  /**
   * <pre>
   * Country specific bank account number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bank_account_number = 28 [json_name = "bankAccountNumber"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getBankAccountNumberOrBuilder(
      int index);

  /**
   * <pre>
   * Country specific bank registration number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bank_registration_number = 29 [json_name = "bankRegistrationNumber"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getBankRegistrationNumberList();
  /**
   * <pre>
   * Country specific bank registration number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bank_registration_number = 29 [json_name = "bankRegistrationNumber"];</code>
   */
  ai.visma.ssn.type.Candidate getBankRegistrationNumber(int index);
  /**
   * <pre>
   * Country specific bank registration number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bank_registration_number = 29 [json_name = "bankRegistrationNumber"];</code>
   */
  int getBankRegistrationNumberCount();
  /**
   * <pre>
   * Country specific bank registration number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bank_registration_number = 29 [json_name = "bankRegistrationNumber"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getBankRegistrationNumberOrBuilderList();
  /**
   * <pre>
   * Country specific bank registration number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bank_registration_number = 29 [json_name = "bankRegistrationNumber"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getBankRegistrationNumberOrBuilder(
      int index);

  /**
   * <pre>
   * Returns business identifier code
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bic = 30 [json_name = "bic"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getBicList();
  /**
   * <pre>
   * Returns business identifier code
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bic = 30 [json_name = "bic"];</code>
   */
  ai.visma.ssn.type.Candidate getBic(int index);
  /**
   * <pre>
   * Returns business identifier code
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bic = 30 [json_name = "bic"];</code>
   */
  int getBicCount();
  /**
   * <pre>
   * Returns business identifier code
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bic = 30 [json_name = "bic"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getBicOrBuilderList();
  /**
   * <pre>
   * Returns business identifier code
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate bic = 30 [json_name = "bic"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getBicOrBuilder(
      int index);

  /**
   * <pre>
   * Represents identifier of the document
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_number = 31 [json_name = "documentNumber"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getDocumentNumberList();
  /**
   * <pre>
   * Represents identifier of the document
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_number = 31 [json_name = "documentNumber"];</code>
   */
  ai.visma.ssn.type.Candidate getDocumentNumber(int index);
  /**
   * <pre>
   * Represents identifier of the document
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_number = 31 [json_name = "documentNumber"];</code>
   */
  int getDocumentNumberCount();
  /**
   * <pre>
   * Represents identifier of the document
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_number = 31 [json_name = "documentNumber"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getDocumentNumberOrBuilderList();
  /**
   * <pre>
   * Represents identifier of the document
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_number = 31 [json_name = "documentNumber"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getDocumentNumberOrBuilder(
      int index);

  /**
   * <pre>
   * Returns document date
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_date = 32 [json_name = "documentDate"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getDocumentDateList();
  /**
   * <pre>
   * Returns document date
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_date = 32 [json_name = "documentDate"];</code>
   */
  ai.visma.ssn.type.Candidate getDocumentDate(int index);
  /**
   * <pre>
   * Returns document date
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_date = 32 [json_name = "documentDate"];</code>
   */
  int getDocumentDateCount();
  /**
   * <pre>
   * Returns document date
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_date = 32 [json_name = "documentDate"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getDocumentDateOrBuilderList();
  /**
   * <pre>
   * Returns document date
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate document_date = 32 [json_name = "documentDate"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getDocumentDateOrBuilder(
      int index);

  /**
   * <pre>
   * Represents the identifier that supplier assigned to the order
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate order_number = 33 [json_name = "orderNumber"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getOrderNumberList();
  /**
   * <pre>
   * Represents the identifier that supplier assigned to the order
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate order_number = 33 [json_name = "orderNumber"];</code>
   */
  ai.visma.ssn.type.Candidate getOrderNumber(int index);
  /**
   * <pre>
   * Represents the identifier that supplier assigned to the order
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate order_number = 33 [json_name = "orderNumber"];</code>
   */
  int getOrderNumberCount();
  /**
   * <pre>
   * Represents the identifier that supplier assigned to the order
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate order_number = 33 [json_name = "orderNumber"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getOrderNumberOrBuilderList();
  /**
   * <pre>
   * Represents the identifier that supplier assigned to the order
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate order_number = 33 [json_name = "orderNumber"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getOrderNumberOrBuilder(
      int index);

  /**
   * <pre>
   * Returns supplier name
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_name = 34 [json_name = "supplierName"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getSupplierNameList();
  /**
   * <pre>
   * Returns supplier name
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_name = 34 [json_name = "supplierName"];</code>
   */
  ai.visma.ssn.type.Candidate getSupplierName(int index);
  /**
   * <pre>
   * Returns supplier name
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_name = 34 [json_name = "supplierName"];</code>
   */
  int getSupplierNameCount();
  /**
   * <pre>
   * Returns supplier name
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_name = 34 [json_name = "supplierName"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getSupplierNameOrBuilderList();
  /**
   * <pre>
   * Returns supplier name
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_name = 34 [json_name = "supplierName"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getSupplierNameOrBuilder(
      int index);

  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns supplier VAT number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_vat_number = 35 [json_name = "supplierVatNumber"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getSupplierVatNumberList();
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns supplier VAT number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_vat_number = 35 [json_name = "supplierVatNumber"];</code>
   */
  ai.visma.ssn.type.Candidate getSupplierVatNumber(int index);
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns supplier VAT number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_vat_number = 35 [json_name = "supplierVatNumber"];</code>
   */
  int getSupplierVatNumberCount();
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns supplier VAT number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_vat_number = 35 [json_name = "supplierVatNumber"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getSupplierVatNumberOrBuilderList();
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns supplier VAT number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_vat_number = 35 [json_name = "supplierVatNumber"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getSupplierVatNumberOrBuilder(
      int index);

  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns the business ID or organisation number of the supplier
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_organisation_number = 36 [json_name = "supplierOrganisationNumber"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getSupplierOrganisationNumberList();
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns the business ID or organisation number of the supplier
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_organisation_number = 36 [json_name = "supplierOrganisationNumber"];</code>
   */
  ai.visma.ssn.type.Candidate getSupplierOrganisationNumber(int index);
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns the business ID or organisation number of the supplier
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_organisation_number = 36 [json_name = "supplierOrganisationNumber"];</code>
   */
  int getSupplierOrganisationNumberCount();
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns the business ID or organisation number of the supplier
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_organisation_number = 36 [json_name = "supplierOrganisationNumber"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getSupplierOrganisationNumberOrBuilderList();
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns the business ID or organisation number of the supplier
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_organisation_number = 36 [json_name = "supplierOrganisationNumber"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getSupplierOrganisationNumberOrBuilder(
      int index);

  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns supplier address
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_address = 37 [json_name = "supplierAddress"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getSupplierAddressList();
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns supplier address
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_address = 37 [json_name = "supplierAddress"];</code>
   */
  ai.visma.ssn.type.Candidate getSupplierAddress(int index);
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns supplier address
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_address = 37 [json_name = "supplierAddress"];</code>
   */
  int getSupplierAddressCount();
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns supplier address
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_address = 37 [json_name = "supplierAddress"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getSupplierAddressOrBuilderList();
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns supplier address
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate supplier_address = 37 [json_name = "supplierAddress"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getSupplierAddressOrBuilder(
      int index);

  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns customer identifier/number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate customer_number = 38 [json_name = "customerNumber"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getCustomerNumberList();
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns customer identifier/number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate customer_number = 38 [json_name = "customerNumber"];</code>
   */
  ai.visma.ssn.type.Candidate getCustomerNumber(int index);
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns customer identifier/number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate customer_number = 38 [json_name = "customerNumber"];</code>
   */
  int getCustomerNumberCount();
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns customer identifier/number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate customer_number = 38 [json_name = "customerNumber"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getCustomerNumberOrBuilderList();
  /**
   * <pre>
   * [EXPERIMENTAL]
   * Returns customer identifier/number
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate customer_number = 38 [json_name = "customerNumber"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getCustomerNumberOrBuilder(
      int index);

  /**
   * <pre>
   * Equivalent of order number for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_order_number = 39 [json_name = "receiverOrderNumber"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getReceiverOrderNumberList();
  /**
   * <pre>
   * Equivalent of order number for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_order_number = 39 [json_name = "receiverOrderNumber"];</code>
   */
  ai.visma.ssn.type.Candidate getReceiverOrderNumber(int index);
  /**
   * <pre>
   * Equivalent of order number for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_order_number = 39 [json_name = "receiverOrderNumber"];</code>
   */
  int getReceiverOrderNumberCount();
  /**
   * <pre>
   * Equivalent of order number for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_order_number = 39 [json_name = "receiverOrderNumber"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getReceiverOrderNumberOrBuilderList();
  /**
   * <pre>
   * Equivalent of order number for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_order_number = 39 [json_name = "receiverOrderNumber"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getReceiverOrderNumberOrBuilder(
      int index);

  /**
   * <pre>
   * Equivalent of address for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_address = 41 [json_name = "receiverAddress"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getReceiverAddressList();
  /**
   * <pre>
   * Equivalent of address for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_address = 41 [json_name = "receiverAddress"];</code>
   */
  ai.visma.ssn.type.Candidate getReceiverAddress(int index);
  /**
   * <pre>
   * Equivalent of address for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_address = 41 [json_name = "receiverAddress"];</code>
   */
  int getReceiverAddressCount();
  /**
   * <pre>
   * Equivalent of address for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_address = 41 [json_name = "receiverAddress"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getReceiverAddressOrBuilderList();
  /**
   * <pre>
   * Equivalent of address for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_address = 41 [json_name = "receiverAddress"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getReceiverAddressOrBuilder(
      int index);

  /**
   * <pre>
   * Equivalent of country code for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_country_code = 42 [json_name = "receiverCountryCode"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getReceiverCountryCodeList();
  /**
   * <pre>
   * Equivalent of country code for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_country_code = 42 [json_name = "receiverCountryCode"];</code>
   */
  ai.visma.ssn.type.Candidate getReceiverCountryCode(int index);
  /**
   * <pre>
   * Equivalent of country code for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_country_code = 42 [json_name = "receiverCountryCode"];</code>
   */
  int getReceiverCountryCodeCount();
  /**
   * <pre>
   * Equivalent of country code for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_country_code = 42 [json_name = "receiverCountryCode"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getReceiverCountryCodeOrBuilderList();
  /**
   * <pre>
   * Equivalent of country code for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_country_code = 42 [json_name = "receiverCountryCode"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getReceiverCountryCodeOrBuilder(
      int index);

  /**
   * <pre>
   * Equivalent of supplier name for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_name = 43 [json_name = "receiverName"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getReceiverNameList();
  /**
   * <pre>
   * Equivalent of supplier name for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_name = 43 [json_name = "receiverName"];</code>
   */
  ai.visma.ssn.type.Candidate getReceiverName(int index);
  /**
   * <pre>
   * Equivalent of supplier name for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_name = 43 [json_name = "receiverName"];</code>
   */
  int getReceiverNameCount();
  /**
   * <pre>
   * Equivalent of supplier name for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_name = 43 [json_name = "receiverName"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getReceiverNameOrBuilderList();
  /**
   * <pre>
   * Equivalent of supplier name for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_name = 43 [json_name = "receiverName"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getReceiverNameOrBuilder(
      int index);

  /**
   * <pre>
   * Equivalent of VAT number for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_vat_number = 44 [json_name = "receiverVatNumber"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getReceiverVatNumberList();
  /**
   * <pre>
   * Equivalent of VAT number for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_vat_number = 44 [json_name = "receiverVatNumber"];</code>
   */
  ai.visma.ssn.type.Candidate getReceiverVatNumber(int index);
  /**
   * <pre>
   * Equivalent of VAT number for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_vat_number = 44 [json_name = "receiverVatNumber"];</code>
   */
  int getReceiverVatNumberCount();
  /**
   * <pre>
   * Equivalent of VAT number for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_vat_number = 44 [json_name = "receiverVatNumber"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getReceiverVatNumberOrBuilderList();
  /**
   * <pre>
   * Equivalent of VAT number for receiver
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate receiver_vat_number = 44 [json_name = "receiverVatNumber"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getReceiverVatNumberOrBuilder(
      int index);

  /**
   * <pre>
   * Purchase lines for the document. This is a list of candidates, where each
   * candidate is a single purchase lines. Each purchase line may have page number,
   * code, description, quantity, item number, unit, total discount, percentage discount,
   * total incl vat, total excl vat, total vat, percentage vat, unit price incl vat,
   * unit price excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.PurchaseLineCandidate purchase_lines = 45 [json_name = "purchaseLines"];</code>
   */
  java.util.List<ai.visma.ssn.type.PurchaseLineCandidate> 
      getPurchaseLinesList();
  /**
   * <pre>
   * Purchase lines for the document. This is a list of candidates, where each
   * candidate is a single purchase lines. Each purchase line may have page number,
   * code, description, quantity, item number, unit, total discount, percentage discount,
   * total incl vat, total excl vat, total vat, percentage vat, unit price incl vat,
   * unit price excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.PurchaseLineCandidate purchase_lines = 45 [json_name = "purchaseLines"];</code>
   */
  ai.visma.ssn.type.PurchaseLineCandidate getPurchaseLines(int index);
  /**
   * <pre>
   * Purchase lines for the document. This is a list of candidates, where each
   * candidate is a single purchase lines. Each purchase line may have page number,
   * code, description, quantity, item number, unit, total discount, percentage discount,
   * total incl vat, total excl vat, total vat, percentage vat, unit price incl vat,
   * unit price excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.PurchaseLineCandidate purchase_lines = 45 [json_name = "purchaseLines"];</code>
   */
  int getPurchaseLinesCount();
  /**
   * <pre>
   * Purchase lines for the document. This is a list of candidates, where each
   * candidate is a single purchase lines. Each purchase line may have page number,
   * code, description, quantity, item number, unit, total discount, percentage discount,
   * total incl vat, total excl vat, total vat, percentage vat, unit price incl vat,
   * unit price excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.PurchaseLineCandidate purchase_lines = 45 [json_name = "purchaseLines"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.PurchaseLineCandidateOrBuilder> 
      getPurchaseLinesOrBuilderList();
  /**
   * <pre>
   * Purchase lines for the document. This is a list of candidates, where each
   * candidate is a single purchase lines. Each purchase line may have page number,
   * code, description, quantity, item number, unit, total discount, percentage discount,
   * total incl vat, total excl vat, total vat, percentage vat, unit price incl vat,
   * unit price excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.PurchaseLineCandidate purchase_lines = 45 [json_name = "purchaseLines"];</code>
   */
  ai.visma.ssn.type.PurchaseLineCandidateOrBuilder getPurchaseLinesOrBuilder(
      int index);

  /**
   * <pre>
   * Answer Candidates for the questions asked in th request about the document
   * Each Answer is question and answer pair with page number and confidence
   * </pre>
   *
   * <code>repeated .ssn.type.AnswerCandidate answers = 46 [json_name = "answers"];</code>
   */
  java.util.List<ai.visma.ssn.type.AnswerCandidate> 
      getAnswersList();
  /**
   * <pre>
   * Answer Candidates for the questions asked in th request about the document
   * Each Answer is question and answer pair with page number and confidence
   * </pre>
   *
   * <code>repeated .ssn.type.AnswerCandidate answers = 46 [json_name = "answers"];</code>
   */
  ai.visma.ssn.type.AnswerCandidate getAnswers(int index);
  /**
   * <pre>
   * Answer Candidates for the questions asked in th request about the document
   * Each Answer is question and answer pair with page number and confidence
   * </pre>
   *
   * <code>repeated .ssn.type.AnswerCandidate answers = 46 [json_name = "answers"];</code>
   */
  int getAnswersCount();
  /**
   * <pre>
   * Answer Candidates for the questions asked in th request about the document
   * Each Answer is question and answer pair with page number and confidence
   * </pre>
   *
   * <code>repeated .ssn.type.AnswerCandidate answers = 46 [json_name = "answers"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.AnswerCandidateOrBuilder> 
      getAnswersOrBuilderList();
  /**
   * <pre>
   * Answer Candidates for the questions asked in th request about the document
   * Each Answer is question and answer pair with page number and confidence
   * </pre>
   *
   * <code>repeated .ssn.type.AnswerCandidate answers = 46 [json_name = "answers"];</code>
   */
  ai.visma.ssn.type.AnswerCandidateOrBuilder getAnswersOrBuilder(
      int index);

  /**
   * <pre>
   * The page texts of the document
   * </pre>
   *
   * <code>repeated .ssn.type.PageText page_texts = 47 [json_name = "pageTexts"];</code>
   */
  java.util.List<ai.visma.ssn.type.PageText> 
      getPageTextsList();
  /**
   * <pre>
   * The page texts of the document
   * </pre>
   *
   * <code>repeated .ssn.type.PageText page_texts = 47 [json_name = "pageTexts"];</code>
   */
  ai.visma.ssn.type.PageText getPageTexts(int index);
  /**
   * <pre>
   * The page texts of the document
   * </pre>
   *
   * <code>repeated .ssn.type.PageText page_texts = 47 [json_name = "pageTexts"];</code>
   */
  int getPageTextsCount();
  /**
   * <pre>
   * The page texts of the document
   * </pre>
   *
   * <code>repeated .ssn.type.PageText page_texts = 47 [json_name = "pageTexts"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.PageTextOrBuilder> 
      getPageTextsOrBuilderList();
  /**
   * <pre>
   * The page texts of the document
   * </pre>
   *
   * <code>repeated .ssn.type.PageText page_texts = 47 [json_name = "pageTexts"];</code>
   */
  ai.visma.ssn.type.PageTextOrBuilder getPageTextsOrBuilder(
      int index);

  /**
   * <pre>
   * Vat levels for the document, each vat level has vat level percentage and vat level amount
   * </pre>
   *
   * <code>repeated .ssn.type.VatDistributionCandidate vat_distribution_candidates = 48 [json_name = "vatDistributionCandidates"];</code>
   */
  java.util.List<ai.visma.ssn.type.VatDistributionCandidate> 
      getVatDistributionCandidatesList();
  /**
   * <pre>
   * Vat levels for the document, each vat level has vat level percentage and vat level amount
   * </pre>
   *
   * <code>repeated .ssn.type.VatDistributionCandidate vat_distribution_candidates = 48 [json_name = "vatDistributionCandidates"];</code>
   */
  ai.visma.ssn.type.VatDistributionCandidate getVatDistributionCandidates(int index);
  /**
   * <pre>
   * Vat levels for the document, each vat level has vat level percentage and vat level amount
   * </pre>
   *
   * <code>repeated .ssn.type.VatDistributionCandidate vat_distribution_candidates = 48 [json_name = "vatDistributionCandidates"];</code>
   */
  int getVatDistributionCandidatesCount();
  /**
   * <pre>
   * Vat levels for the document, each vat level has vat level percentage and vat level amount
   * </pre>
   *
   * <code>repeated .ssn.type.VatDistributionCandidate vat_distribution_candidates = 48 [json_name = "vatDistributionCandidates"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.VatDistributionCandidateOrBuilder> 
      getVatDistributionCandidatesOrBuilderList();
  /**
   * <pre>
   * Vat levels for the document, each vat level has vat level percentage and vat level amount
   * </pre>
   *
   * <code>repeated .ssn.type.VatDistributionCandidate vat_distribution_candidates = 48 [json_name = "vatDistributionCandidates"];</code>
   */
  ai.visma.ssn.type.VatDistributionCandidateOrBuilder getVatDistributionCandidatesOrBuilder(
      int index);
}
