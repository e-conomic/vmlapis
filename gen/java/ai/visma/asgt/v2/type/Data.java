// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: asgt/v2/type/data.proto

package ai.visma.asgt.v2.type;

/**
 * <pre>
 * Specifies data structure for dataset creation. Only one of Transaction, Invoice, InvoiceLine
 * structures can be used at a time.
 * </pre>
 *
 * Protobuf type {@code asgt.v2.type.Data}
 */
public final class Data extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:asgt.v2.type.Data)
    DataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Data.newBuilder() to construct.
  private Data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Data() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Data();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.visma.asgt.v2.type.DataProto.internal_static_asgt_v2_type_Data_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.visma.asgt.v2.type.DataProto.internal_static_asgt_v2_type_Data_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.visma.asgt.v2.type.Data.class, ai.visma.asgt.v2.type.Data.Builder.class);
  }

  private int dataStructureCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object dataStructure_;
  public enum DataStructureCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TRANSACTION(1),
    INVOICE(2),
    INVOICE_LINE(3),
    DATASTRUCTURE_NOT_SET(0);
    private final int value;
    private DataStructureCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DataStructureCase valueOf(int value) {
      return forNumber(value);
    }

    public static DataStructureCase forNumber(int value) {
      switch (value) {
        case 1: return TRANSACTION;
        case 2: return INVOICE;
        case 3: return INVOICE_LINE;
        case 0: return DATASTRUCTURE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public DataStructureCase
  getDataStructureCase() {
    return DataStructureCase.forNumber(
        dataStructureCase_);
  }

  public static final int TRANSACTION_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Transaction-level information; at this time used only with bank transactions
   * </pre>
   *
   * <code>.asgt.v2.type.Transaction transaction = 1 [json_name = "transaction"];</code>
   * @return Whether the transaction field is set.
   */
  @java.lang.Override
  public boolean hasTransaction() {
    return dataStructureCase_ == 1;
  }
  /**
   * <pre>
   * Transaction-level information; at this time used only with bank transactions
   * </pre>
   *
   * <code>.asgt.v2.type.Transaction transaction = 1 [json_name = "transaction"];</code>
   * @return The transaction.
   */
  @java.lang.Override
  public ai.visma.asgt.v2.type.Transaction getTransaction() {
    if (dataStructureCase_ == 1) {
       return (ai.visma.asgt.v2.type.Transaction) dataStructure_;
    }
    return ai.visma.asgt.v2.type.Transaction.getDefaultInstance();
  }
  /**
   * <pre>
   * Transaction-level information; at this time used only with bank transactions
   * </pre>
   *
   * <code>.asgt.v2.type.Transaction transaction = 1 [json_name = "transaction"];</code>
   */
  @java.lang.Override
  public ai.visma.asgt.v2.type.TransactionOrBuilder getTransactionOrBuilder() {
    if (dataStructureCase_ == 1) {
       return (ai.visma.asgt.v2.type.Transaction) dataStructure_;
    }
    return ai.visma.asgt.v2.type.Transaction.getDefaultInstance();
  }

  public static final int INVOICE_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Invoice-level information for e-invoices and scanned invoices and receipts
   * </pre>
   *
   * <code>.asgt.v2.type.Invoice invoice = 2 [json_name = "invoice"];</code>
   * @return Whether the invoice field is set.
   */
  @java.lang.Override
  public boolean hasInvoice() {
    return dataStructureCase_ == 2;
  }
  /**
   * <pre>
   * Invoice-level information for e-invoices and scanned invoices and receipts
   * </pre>
   *
   * <code>.asgt.v2.type.Invoice invoice = 2 [json_name = "invoice"];</code>
   * @return The invoice.
   */
  @java.lang.Override
  public ai.visma.asgt.v2.type.Invoice getInvoice() {
    if (dataStructureCase_ == 2) {
       return (ai.visma.asgt.v2.type.Invoice) dataStructure_;
    }
    return ai.visma.asgt.v2.type.Invoice.getDefaultInstance();
  }
  /**
   * <pre>
   * Invoice-level information for e-invoices and scanned invoices and receipts
   * </pre>
   *
   * <code>.asgt.v2.type.Invoice invoice = 2 [json_name = "invoice"];</code>
   */
  @java.lang.Override
  public ai.visma.asgt.v2.type.InvoiceOrBuilder getInvoiceOrBuilder() {
    if (dataStructureCase_ == 2) {
       return (ai.visma.asgt.v2.type.Invoice) dataStructure_;
    }
    return ai.visma.asgt.v2.type.Invoice.getDefaultInstance();
  }

  public static final int INVOICE_LINE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Line-level information for e-invoices; use one sample per invoice line
   * </pre>
   *
   * <code>.asgt.v2.type.InvoiceLine invoice_line = 3 [json_name = "invoiceLine"];</code>
   * @return Whether the invoiceLine field is set.
   */
  @java.lang.Override
  public boolean hasInvoiceLine() {
    return dataStructureCase_ == 3;
  }
  /**
   * <pre>
   * Line-level information for e-invoices; use one sample per invoice line
   * </pre>
   *
   * <code>.asgt.v2.type.InvoiceLine invoice_line = 3 [json_name = "invoiceLine"];</code>
   * @return The invoiceLine.
   */
  @java.lang.Override
  public ai.visma.asgt.v2.type.InvoiceLine getInvoiceLine() {
    if (dataStructureCase_ == 3) {
       return (ai.visma.asgt.v2.type.InvoiceLine) dataStructure_;
    }
    return ai.visma.asgt.v2.type.InvoiceLine.getDefaultInstance();
  }
  /**
   * <pre>
   * Line-level information for e-invoices; use one sample per invoice line
   * </pre>
   *
   * <code>.asgt.v2.type.InvoiceLine invoice_line = 3 [json_name = "invoiceLine"];</code>
   */
  @java.lang.Override
  public ai.visma.asgt.v2.type.InvoiceLineOrBuilder getInvoiceLineOrBuilder() {
    if (dataStructureCase_ == 3) {
       return (ai.visma.asgt.v2.type.InvoiceLine) dataStructure_;
    }
    return ai.visma.asgt.v2.type.InvoiceLine.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (dataStructureCase_ == 1) {
      output.writeMessage(1, (ai.visma.asgt.v2.type.Transaction) dataStructure_);
    }
    if (dataStructureCase_ == 2) {
      output.writeMessage(2, (ai.visma.asgt.v2.type.Invoice) dataStructure_);
    }
    if (dataStructureCase_ == 3) {
      output.writeMessage(3, (ai.visma.asgt.v2.type.InvoiceLine) dataStructure_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (dataStructureCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (ai.visma.asgt.v2.type.Transaction) dataStructure_);
    }
    if (dataStructureCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (ai.visma.asgt.v2.type.Invoice) dataStructure_);
    }
    if (dataStructureCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (ai.visma.asgt.v2.type.InvoiceLine) dataStructure_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.visma.asgt.v2.type.Data)) {
      return super.equals(obj);
    }
    ai.visma.asgt.v2.type.Data other = (ai.visma.asgt.v2.type.Data) obj;

    if (!getDataStructureCase().equals(other.getDataStructureCase())) return false;
    switch (dataStructureCase_) {
      case 1:
        if (!getTransaction()
            .equals(other.getTransaction())) return false;
        break;
      case 2:
        if (!getInvoice()
            .equals(other.getInvoice())) return false;
        break;
      case 3:
        if (!getInvoiceLine()
            .equals(other.getInvoiceLine())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (dataStructureCase_) {
      case 1:
        hash = (37 * hash) + TRANSACTION_FIELD_NUMBER;
        hash = (53 * hash) + getTransaction().hashCode();
        break;
      case 2:
        hash = (37 * hash) + INVOICE_FIELD_NUMBER;
        hash = (53 * hash) + getInvoice().hashCode();
        break;
      case 3:
        hash = (37 * hash) + INVOICE_LINE_FIELD_NUMBER;
        hash = (53 * hash) + getInvoiceLine().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.visma.asgt.v2.type.Data parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.visma.asgt.v2.type.Data parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.visma.asgt.v2.type.Data parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.visma.asgt.v2.type.Data parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.visma.asgt.v2.type.Data parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.visma.asgt.v2.type.Data parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.visma.asgt.v2.type.Data parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.visma.asgt.v2.type.Data parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.visma.asgt.v2.type.Data parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.visma.asgt.v2.type.Data parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.visma.asgt.v2.type.Data parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static ai.visma.asgt.v2.type.Data parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.visma.asgt.v2.type.Data prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Specifies data structure for dataset creation. Only one of Transaction, Invoice, InvoiceLine
   * structures can be used at a time.
   * </pre>
   *
   * Protobuf type {@code asgt.v2.type.Data}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:asgt.v2.type.Data)
      ai.visma.asgt.v2.type.DataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.visma.asgt.v2.type.DataProto.internal_static_asgt_v2_type_Data_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.visma.asgt.v2.type.DataProto.internal_static_asgt_v2_type_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.visma.asgt.v2.type.Data.class, ai.visma.asgt.v2.type.Data.Builder.class);
    }

    // Construct using ai.visma.asgt.v2.type.Data.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (transactionBuilder_ != null) {
        transactionBuilder_.clear();
      }
      if (invoiceBuilder_ != null) {
        invoiceBuilder_.clear();
      }
      if (invoiceLineBuilder_ != null) {
        invoiceLineBuilder_.clear();
      }
      dataStructureCase_ = 0;
      dataStructure_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.visma.asgt.v2.type.DataProto.internal_static_asgt_v2_type_Data_descriptor;
    }

    @java.lang.Override
    public ai.visma.asgt.v2.type.Data getDefaultInstanceForType() {
      return ai.visma.asgt.v2.type.Data.getDefaultInstance();
    }

    @java.lang.Override
    public ai.visma.asgt.v2.type.Data build() {
      ai.visma.asgt.v2.type.Data result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.visma.asgt.v2.type.Data buildPartial() {
      ai.visma.asgt.v2.type.Data result = new ai.visma.asgt.v2.type.Data(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(ai.visma.asgt.v2.type.Data result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(ai.visma.asgt.v2.type.Data result) {
      result.dataStructureCase_ = dataStructureCase_;
      result.dataStructure_ = this.dataStructure_;
      if (dataStructureCase_ == 1 &&
          transactionBuilder_ != null) {
        result.dataStructure_ = transactionBuilder_.build();
      }
      if (dataStructureCase_ == 2 &&
          invoiceBuilder_ != null) {
        result.dataStructure_ = invoiceBuilder_.build();
      }
      if (dataStructureCase_ == 3 &&
          invoiceLineBuilder_ != null) {
        result.dataStructure_ = invoiceLineBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.visma.asgt.v2.type.Data) {
        return mergeFrom((ai.visma.asgt.v2.type.Data)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.visma.asgt.v2.type.Data other) {
      if (other == ai.visma.asgt.v2.type.Data.getDefaultInstance()) return this;
      switch (other.getDataStructureCase()) {
        case TRANSACTION: {
          mergeTransaction(other.getTransaction());
          break;
        }
        case INVOICE: {
          mergeInvoice(other.getInvoice());
          break;
        }
        case INVOICE_LINE: {
          mergeInvoiceLine(other.getInvoiceLine());
          break;
        }
        case DATASTRUCTURE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getTransactionFieldBuilder().getBuilder(),
                  extensionRegistry);
              dataStructureCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getInvoiceFieldBuilder().getBuilder(),
                  extensionRegistry);
              dataStructureCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getInvoiceLineFieldBuilder().getBuilder(),
                  extensionRegistry);
              dataStructureCase_ = 3;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int dataStructureCase_ = 0;
    private java.lang.Object dataStructure_;
    public DataStructureCase
        getDataStructureCase() {
      return DataStructureCase.forNumber(
          dataStructureCase_);
    }

    public Builder clearDataStructure() {
      dataStructureCase_ = 0;
      dataStructure_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.visma.asgt.v2.type.Transaction, ai.visma.asgt.v2.type.Transaction.Builder, ai.visma.asgt.v2.type.TransactionOrBuilder> transactionBuilder_;
    /**
     * <pre>
     * Transaction-level information; at this time used only with bank transactions
     * </pre>
     *
     * <code>.asgt.v2.type.Transaction transaction = 1 [json_name = "transaction"];</code>
     * @return Whether the transaction field is set.
     */
    @java.lang.Override
    public boolean hasTransaction() {
      return dataStructureCase_ == 1;
    }
    /**
     * <pre>
     * Transaction-level information; at this time used only with bank transactions
     * </pre>
     *
     * <code>.asgt.v2.type.Transaction transaction = 1 [json_name = "transaction"];</code>
     * @return The transaction.
     */
    @java.lang.Override
    public ai.visma.asgt.v2.type.Transaction getTransaction() {
      if (transactionBuilder_ == null) {
        if (dataStructureCase_ == 1) {
          return (ai.visma.asgt.v2.type.Transaction) dataStructure_;
        }
        return ai.visma.asgt.v2.type.Transaction.getDefaultInstance();
      } else {
        if (dataStructureCase_ == 1) {
          return transactionBuilder_.getMessage();
        }
        return ai.visma.asgt.v2.type.Transaction.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Transaction-level information; at this time used only with bank transactions
     * </pre>
     *
     * <code>.asgt.v2.type.Transaction transaction = 1 [json_name = "transaction"];</code>
     */
    public Builder setTransaction(ai.visma.asgt.v2.type.Transaction value) {
      if (transactionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dataStructure_ = value;
        onChanged();
      } else {
        transactionBuilder_.setMessage(value);
      }
      dataStructureCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Transaction-level information; at this time used only with bank transactions
     * </pre>
     *
     * <code>.asgt.v2.type.Transaction transaction = 1 [json_name = "transaction"];</code>
     */
    public Builder setTransaction(
        ai.visma.asgt.v2.type.Transaction.Builder builderForValue) {
      if (transactionBuilder_ == null) {
        dataStructure_ = builderForValue.build();
        onChanged();
      } else {
        transactionBuilder_.setMessage(builderForValue.build());
      }
      dataStructureCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Transaction-level information; at this time used only with bank transactions
     * </pre>
     *
     * <code>.asgt.v2.type.Transaction transaction = 1 [json_name = "transaction"];</code>
     */
    public Builder mergeTransaction(ai.visma.asgt.v2.type.Transaction value) {
      if (transactionBuilder_ == null) {
        if (dataStructureCase_ == 1 &&
            dataStructure_ != ai.visma.asgt.v2.type.Transaction.getDefaultInstance()) {
          dataStructure_ = ai.visma.asgt.v2.type.Transaction.newBuilder((ai.visma.asgt.v2.type.Transaction) dataStructure_)
              .mergeFrom(value).buildPartial();
        } else {
          dataStructure_ = value;
        }
        onChanged();
      } else {
        if (dataStructureCase_ == 1) {
          transactionBuilder_.mergeFrom(value);
        } else {
          transactionBuilder_.setMessage(value);
        }
      }
      dataStructureCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Transaction-level information; at this time used only with bank transactions
     * </pre>
     *
     * <code>.asgt.v2.type.Transaction transaction = 1 [json_name = "transaction"];</code>
     */
    public Builder clearTransaction() {
      if (transactionBuilder_ == null) {
        if (dataStructureCase_ == 1) {
          dataStructureCase_ = 0;
          dataStructure_ = null;
          onChanged();
        }
      } else {
        if (dataStructureCase_ == 1) {
          dataStructureCase_ = 0;
          dataStructure_ = null;
        }
        transactionBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Transaction-level information; at this time used only with bank transactions
     * </pre>
     *
     * <code>.asgt.v2.type.Transaction transaction = 1 [json_name = "transaction"];</code>
     */
    public ai.visma.asgt.v2.type.Transaction.Builder getTransactionBuilder() {
      return getTransactionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Transaction-level information; at this time used only with bank transactions
     * </pre>
     *
     * <code>.asgt.v2.type.Transaction transaction = 1 [json_name = "transaction"];</code>
     */
    @java.lang.Override
    public ai.visma.asgt.v2.type.TransactionOrBuilder getTransactionOrBuilder() {
      if ((dataStructureCase_ == 1) && (transactionBuilder_ != null)) {
        return transactionBuilder_.getMessageOrBuilder();
      } else {
        if (dataStructureCase_ == 1) {
          return (ai.visma.asgt.v2.type.Transaction) dataStructure_;
        }
        return ai.visma.asgt.v2.type.Transaction.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Transaction-level information; at this time used only with bank transactions
     * </pre>
     *
     * <code>.asgt.v2.type.Transaction transaction = 1 [json_name = "transaction"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.visma.asgt.v2.type.Transaction, ai.visma.asgt.v2.type.Transaction.Builder, ai.visma.asgt.v2.type.TransactionOrBuilder> 
        getTransactionFieldBuilder() {
      if (transactionBuilder_ == null) {
        if (!(dataStructureCase_ == 1)) {
          dataStructure_ = ai.visma.asgt.v2.type.Transaction.getDefaultInstance();
        }
        transactionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.visma.asgt.v2.type.Transaction, ai.visma.asgt.v2.type.Transaction.Builder, ai.visma.asgt.v2.type.TransactionOrBuilder>(
                (ai.visma.asgt.v2.type.Transaction) dataStructure_,
                getParentForChildren(),
                isClean());
        dataStructure_ = null;
      }
      dataStructureCase_ = 1;
      onChanged();
      return transactionBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.visma.asgt.v2.type.Invoice, ai.visma.asgt.v2.type.Invoice.Builder, ai.visma.asgt.v2.type.InvoiceOrBuilder> invoiceBuilder_;
    /**
     * <pre>
     * Invoice-level information for e-invoices and scanned invoices and receipts
     * </pre>
     *
     * <code>.asgt.v2.type.Invoice invoice = 2 [json_name = "invoice"];</code>
     * @return Whether the invoice field is set.
     */
    @java.lang.Override
    public boolean hasInvoice() {
      return dataStructureCase_ == 2;
    }
    /**
     * <pre>
     * Invoice-level information for e-invoices and scanned invoices and receipts
     * </pre>
     *
     * <code>.asgt.v2.type.Invoice invoice = 2 [json_name = "invoice"];</code>
     * @return The invoice.
     */
    @java.lang.Override
    public ai.visma.asgt.v2.type.Invoice getInvoice() {
      if (invoiceBuilder_ == null) {
        if (dataStructureCase_ == 2) {
          return (ai.visma.asgt.v2.type.Invoice) dataStructure_;
        }
        return ai.visma.asgt.v2.type.Invoice.getDefaultInstance();
      } else {
        if (dataStructureCase_ == 2) {
          return invoiceBuilder_.getMessage();
        }
        return ai.visma.asgt.v2.type.Invoice.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Invoice-level information for e-invoices and scanned invoices and receipts
     * </pre>
     *
     * <code>.asgt.v2.type.Invoice invoice = 2 [json_name = "invoice"];</code>
     */
    public Builder setInvoice(ai.visma.asgt.v2.type.Invoice value) {
      if (invoiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dataStructure_ = value;
        onChanged();
      } else {
        invoiceBuilder_.setMessage(value);
      }
      dataStructureCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Invoice-level information for e-invoices and scanned invoices and receipts
     * </pre>
     *
     * <code>.asgt.v2.type.Invoice invoice = 2 [json_name = "invoice"];</code>
     */
    public Builder setInvoice(
        ai.visma.asgt.v2.type.Invoice.Builder builderForValue) {
      if (invoiceBuilder_ == null) {
        dataStructure_ = builderForValue.build();
        onChanged();
      } else {
        invoiceBuilder_.setMessage(builderForValue.build());
      }
      dataStructureCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Invoice-level information for e-invoices and scanned invoices and receipts
     * </pre>
     *
     * <code>.asgt.v2.type.Invoice invoice = 2 [json_name = "invoice"];</code>
     */
    public Builder mergeInvoice(ai.visma.asgt.v2.type.Invoice value) {
      if (invoiceBuilder_ == null) {
        if (dataStructureCase_ == 2 &&
            dataStructure_ != ai.visma.asgt.v2.type.Invoice.getDefaultInstance()) {
          dataStructure_ = ai.visma.asgt.v2.type.Invoice.newBuilder((ai.visma.asgt.v2.type.Invoice) dataStructure_)
              .mergeFrom(value).buildPartial();
        } else {
          dataStructure_ = value;
        }
        onChanged();
      } else {
        if (dataStructureCase_ == 2) {
          invoiceBuilder_.mergeFrom(value);
        } else {
          invoiceBuilder_.setMessage(value);
        }
      }
      dataStructureCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Invoice-level information for e-invoices and scanned invoices and receipts
     * </pre>
     *
     * <code>.asgt.v2.type.Invoice invoice = 2 [json_name = "invoice"];</code>
     */
    public Builder clearInvoice() {
      if (invoiceBuilder_ == null) {
        if (dataStructureCase_ == 2) {
          dataStructureCase_ = 0;
          dataStructure_ = null;
          onChanged();
        }
      } else {
        if (dataStructureCase_ == 2) {
          dataStructureCase_ = 0;
          dataStructure_ = null;
        }
        invoiceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Invoice-level information for e-invoices and scanned invoices and receipts
     * </pre>
     *
     * <code>.asgt.v2.type.Invoice invoice = 2 [json_name = "invoice"];</code>
     */
    public ai.visma.asgt.v2.type.Invoice.Builder getInvoiceBuilder() {
      return getInvoiceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Invoice-level information for e-invoices and scanned invoices and receipts
     * </pre>
     *
     * <code>.asgt.v2.type.Invoice invoice = 2 [json_name = "invoice"];</code>
     */
    @java.lang.Override
    public ai.visma.asgt.v2.type.InvoiceOrBuilder getInvoiceOrBuilder() {
      if ((dataStructureCase_ == 2) && (invoiceBuilder_ != null)) {
        return invoiceBuilder_.getMessageOrBuilder();
      } else {
        if (dataStructureCase_ == 2) {
          return (ai.visma.asgt.v2.type.Invoice) dataStructure_;
        }
        return ai.visma.asgt.v2.type.Invoice.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Invoice-level information for e-invoices and scanned invoices and receipts
     * </pre>
     *
     * <code>.asgt.v2.type.Invoice invoice = 2 [json_name = "invoice"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.visma.asgt.v2.type.Invoice, ai.visma.asgt.v2.type.Invoice.Builder, ai.visma.asgt.v2.type.InvoiceOrBuilder> 
        getInvoiceFieldBuilder() {
      if (invoiceBuilder_ == null) {
        if (!(dataStructureCase_ == 2)) {
          dataStructure_ = ai.visma.asgt.v2.type.Invoice.getDefaultInstance();
        }
        invoiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.visma.asgt.v2.type.Invoice, ai.visma.asgt.v2.type.Invoice.Builder, ai.visma.asgt.v2.type.InvoiceOrBuilder>(
                (ai.visma.asgt.v2.type.Invoice) dataStructure_,
                getParentForChildren(),
                isClean());
        dataStructure_ = null;
      }
      dataStructureCase_ = 2;
      onChanged();
      return invoiceBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        ai.visma.asgt.v2.type.InvoiceLine, ai.visma.asgt.v2.type.InvoiceLine.Builder, ai.visma.asgt.v2.type.InvoiceLineOrBuilder> invoiceLineBuilder_;
    /**
     * <pre>
     * Line-level information for e-invoices; use one sample per invoice line
     * </pre>
     *
     * <code>.asgt.v2.type.InvoiceLine invoice_line = 3 [json_name = "invoiceLine"];</code>
     * @return Whether the invoiceLine field is set.
     */
    @java.lang.Override
    public boolean hasInvoiceLine() {
      return dataStructureCase_ == 3;
    }
    /**
     * <pre>
     * Line-level information for e-invoices; use one sample per invoice line
     * </pre>
     *
     * <code>.asgt.v2.type.InvoiceLine invoice_line = 3 [json_name = "invoiceLine"];</code>
     * @return The invoiceLine.
     */
    @java.lang.Override
    public ai.visma.asgt.v2.type.InvoiceLine getInvoiceLine() {
      if (invoiceLineBuilder_ == null) {
        if (dataStructureCase_ == 3) {
          return (ai.visma.asgt.v2.type.InvoiceLine) dataStructure_;
        }
        return ai.visma.asgt.v2.type.InvoiceLine.getDefaultInstance();
      } else {
        if (dataStructureCase_ == 3) {
          return invoiceLineBuilder_.getMessage();
        }
        return ai.visma.asgt.v2.type.InvoiceLine.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Line-level information for e-invoices; use one sample per invoice line
     * </pre>
     *
     * <code>.asgt.v2.type.InvoiceLine invoice_line = 3 [json_name = "invoiceLine"];</code>
     */
    public Builder setInvoiceLine(ai.visma.asgt.v2.type.InvoiceLine value) {
      if (invoiceLineBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dataStructure_ = value;
        onChanged();
      } else {
        invoiceLineBuilder_.setMessage(value);
      }
      dataStructureCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Line-level information for e-invoices; use one sample per invoice line
     * </pre>
     *
     * <code>.asgt.v2.type.InvoiceLine invoice_line = 3 [json_name = "invoiceLine"];</code>
     */
    public Builder setInvoiceLine(
        ai.visma.asgt.v2.type.InvoiceLine.Builder builderForValue) {
      if (invoiceLineBuilder_ == null) {
        dataStructure_ = builderForValue.build();
        onChanged();
      } else {
        invoiceLineBuilder_.setMessage(builderForValue.build());
      }
      dataStructureCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Line-level information for e-invoices; use one sample per invoice line
     * </pre>
     *
     * <code>.asgt.v2.type.InvoiceLine invoice_line = 3 [json_name = "invoiceLine"];</code>
     */
    public Builder mergeInvoiceLine(ai.visma.asgt.v2.type.InvoiceLine value) {
      if (invoiceLineBuilder_ == null) {
        if (dataStructureCase_ == 3 &&
            dataStructure_ != ai.visma.asgt.v2.type.InvoiceLine.getDefaultInstance()) {
          dataStructure_ = ai.visma.asgt.v2.type.InvoiceLine.newBuilder((ai.visma.asgt.v2.type.InvoiceLine) dataStructure_)
              .mergeFrom(value).buildPartial();
        } else {
          dataStructure_ = value;
        }
        onChanged();
      } else {
        if (dataStructureCase_ == 3) {
          invoiceLineBuilder_.mergeFrom(value);
        } else {
          invoiceLineBuilder_.setMessage(value);
        }
      }
      dataStructureCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Line-level information for e-invoices; use one sample per invoice line
     * </pre>
     *
     * <code>.asgt.v2.type.InvoiceLine invoice_line = 3 [json_name = "invoiceLine"];</code>
     */
    public Builder clearInvoiceLine() {
      if (invoiceLineBuilder_ == null) {
        if (dataStructureCase_ == 3) {
          dataStructureCase_ = 0;
          dataStructure_ = null;
          onChanged();
        }
      } else {
        if (dataStructureCase_ == 3) {
          dataStructureCase_ = 0;
          dataStructure_ = null;
        }
        invoiceLineBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Line-level information for e-invoices; use one sample per invoice line
     * </pre>
     *
     * <code>.asgt.v2.type.InvoiceLine invoice_line = 3 [json_name = "invoiceLine"];</code>
     */
    public ai.visma.asgt.v2.type.InvoiceLine.Builder getInvoiceLineBuilder() {
      return getInvoiceLineFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Line-level information for e-invoices; use one sample per invoice line
     * </pre>
     *
     * <code>.asgt.v2.type.InvoiceLine invoice_line = 3 [json_name = "invoiceLine"];</code>
     */
    @java.lang.Override
    public ai.visma.asgt.v2.type.InvoiceLineOrBuilder getInvoiceLineOrBuilder() {
      if ((dataStructureCase_ == 3) && (invoiceLineBuilder_ != null)) {
        return invoiceLineBuilder_.getMessageOrBuilder();
      } else {
        if (dataStructureCase_ == 3) {
          return (ai.visma.asgt.v2.type.InvoiceLine) dataStructure_;
        }
        return ai.visma.asgt.v2.type.InvoiceLine.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Line-level information for e-invoices; use one sample per invoice line
     * </pre>
     *
     * <code>.asgt.v2.type.InvoiceLine invoice_line = 3 [json_name = "invoiceLine"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        ai.visma.asgt.v2.type.InvoiceLine, ai.visma.asgt.v2.type.InvoiceLine.Builder, ai.visma.asgt.v2.type.InvoiceLineOrBuilder> 
        getInvoiceLineFieldBuilder() {
      if (invoiceLineBuilder_ == null) {
        if (!(dataStructureCase_ == 3)) {
          dataStructure_ = ai.visma.asgt.v2.type.InvoiceLine.getDefaultInstance();
        }
        invoiceLineBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            ai.visma.asgt.v2.type.InvoiceLine, ai.visma.asgt.v2.type.InvoiceLine.Builder, ai.visma.asgt.v2.type.InvoiceLineOrBuilder>(
                (ai.visma.asgt.v2.type.InvoiceLine) dataStructure_,
                getParentForChildren(),
                isClean());
        dataStructure_ = null;
      }
      dataStructureCase_ = 3;
      onChanged();
      return invoiceLineBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:asgt.v2.type.Data)
  }

  // @@protoc_insertion_point(class_scope:asgt.v2.type.Data)
  private static final ai.visma.asgt.v2.type.Data DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.visma.asgt.v2.type.Data();
  }

  public static ai.visma.asgt.v2.type.Data getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Data>
      PARSER = new com.google.protobuf.AbstractParser<Data>() {
    @java.lang.Override
    public Data parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Data> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Data> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.visma.asgt.v2.type.Data getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

