// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: asgt/type/model.proto

package ai.visma.asgt.type;

public interface ModelOrBuilder extends
    // @@protoc_insertion_point(interface_extends:asgt.type.Model)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int64 version = 3 [json_name = "version", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The version.
   */
  long getVersion();

  /**
   * <code>.google.protobuf.Timestamp created_at = 4 [json_name = "createdAt"];</code>
   * @return Whether the createdAt field is set.
   */
  boolean hasCreatedAt();
  /**
   * <code>.google.protobuf.Timestamp created_at = 4 [json_name = "createdAt"];</code>
   * @return The createdAt.
   */
  com.google.protobuf.Timestamp getCreatedAt();
  /**
   * <code>.google.protobuf.Timestamp created_at = 4 [json_name = "createdAt"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreatedAtOrBuilder();

  /**
   * <code>int32 dataset_size = 5 [json_name = "datasetSize", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The datasetSize.
   */
  int getDatasetSize();

  /**
   * <code>int32 training_size = 6 [json_name = "trainingSize", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The trainingSize.
   */
  int getTrainingSize();

  /**
   * <code>repeated .asgt.type.TargetMetrics confidence_scores = 7 [json_name = "confidenceScores", (.gen_bq_schema.bigquery) = { ... }</code>
   */
  java.util.List<ai.visma.asgt.type.TargetMetrics> 
      getConfidenceScoresList();
  /**
   * <code>repeated .asgt.type.TargetMetrics confidence_scores = 7 [json_name = "confidenceScores", (.gen_bq_schema.bigquery) = { ... }</code>
   */
  ai.visma.asgt.type.TargetMetrics getConfidenceScores(int index);
  /**
   * <code>repeated .asgt.type.TargetMetrics confidence_scores = 7 [json_name = "confidenceScores", (.gen_bq_schema.bigquery) = { ... }</code>
   */
  int getConfidenceScoresCount();
  /**
   * <code>repeated .asgt.type.TargetMetrics confidence_scores = 7 [json_name = "confidenceScores", (.gen_bq_schema.bigquery) = { ... }</code>
   */
  java.util.List<? extends ai.visma.asgt.type.TargetMetricsOrBuilder> 
      getConfidenceScoresOrBuilderList();
  /**
   * <code>repeated .asgt.type.TargetMetrics confidence_scores = 7 [json_name = "confidenceScores", (.gen_bq_schema.bigquery) = { ... }</code>
   */
  ai.visma.asgt.type.TargetMetricsOrBuilder getConfidenceScoresOrBuilder(
      int index);

  /**
   * <code>.asgt.type.Model.InputType input_type = 8 [json_name = "inputType"];</code>
   * @return The enum numeric value on the wire for inputType.
   */
  int getInputTypeValue();
  /**
   * <code>.asgt.type.Model.InputType input_type = 8 [json_name = "inputType"];</code>
   * @return The inputType.
   */
  ai.visma.asgt.type.Model.InputType getInputType();

  /**
   * <code>string dataset_type = 9 [json_name = "datasetType"];</code>
   * @return The datasetType.
   */
  java.lang.String getDatasetType();
  /**
   * <code>string dataset_type = 9 [json_name = "datasetType"];</code>
   * @return The bytes for datasetType.
   */
  com.google.protobuf.ByteString
      getDatasetTypeBytes();

  /**
   * <code>repeated .asgt.type.ModelFile model_files = 10 [json_name = "modelFiles", (.gen_bq_schema.bigquery) = { ... }</code>
   */
  java.util.List<ai.visma.asgt.type.ModelFile> 
      getModelFilesList();
  /**
   * <code>repeated .asgt.type.ModelFile model_files = 10 [json_name = "modelFiles", (.gen_bq_schema.bigquery) = { ... }</code>
   */
  ai.visma.asgt.type.ModelFile getModelFiles(int index);
  /**
   * <code>repeated .asgt.type.ModelFile model_files = 10 [json_name = "modelFiles", (.gen_bq_schema.bigquery) = { ... }</code>
   */
  int getModelFilesCount();
  /**
   * <code>repeated .asgt.type.ModelFile model_files = 10 [json_name = "modelFiles", (.gen_bq_schema.bigquery) = { ... }</code>
   */
  java.util.List<? extends ai.visma.asgt.type.ModelFileOrBuilder> 
      getModelFilesOrBuilderList();
  /**
   * <code>repeated .asgt.type.ModelFile model_files = 10 [json_name = "modelFiles", (.gen_bq_schema.bigquery) = { ... }</code>
   */
  ai.visma.asgt.type.ModelFileOrBuilder getModelFilesOrBuilder(
      int index);
}
