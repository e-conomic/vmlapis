// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: asgt/type/train_statistics.proto
// Protobuf Java Version: 4.29.3

package ai.visma.asgt.type;

/**
 * Protobuf type {@code asgt.type.FeatureStats}
 */
public final class FeatureStats extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:asgt.type.FeatureStats)
    FeatureStatsOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      FeatureStats.class.getName());
  }
  // Use FeatureStats.newBuilder() to construct.
  private FeatureStats(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private FeatureStats() {
    featureStats_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.visma.asgt.type.TrainStatisticsProto.internal_static_asgt_type_FeatureStats_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.visma.asgt.type.TrainStatisticsProto.internal_static_asgt_type_FeatureStats_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.visma.asgt.type.FeatureStats.class, ai.visma.asgt.type.FeatureStats.Builder.class);
  }

  public static final int FEATURE_STATS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.asgt.type.FeatureStat> featureStats_;
  /**
   * <pre>
   * feature statistics for each feature
   * </pre>
   *
   * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.asgt.type.FeatureStat> getFeatureStatsList() {
    return featureStats_;
  }
  /**
   * <pre>
   * feature statistics for each feature
   * </pre>
   *
   * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.asgt.type.FeatureStatOrBuilder> 
      getFeatureStatsOrBuilderList() {
    return featureStats_;
  }
  /**
   * <pre>
   * feature statistics for each feature
   * </pre>
   *
   * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
   */
  @java.lang.Override
  public int getFeatureStatsCount() {
    return featureStats_.size();
  }
  /**
   * <pre>
   * feature statistics for each feature
   * </pre>
   *
   * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
   */
  @java.lang.Override
  public ai.visma.asgt.type.FeatureStat getFeatureStats(int index) {
    return featureStats_.get(index);
  }
  /**
   * <pre>
   * feature statistics for each feature
   * </pre>
   *
   * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
   */
  @java.lang.Override
  public ai.visma.asgt.type.FeatureStatOrBuilder getFeatureStatsOrBuilder(
      int index) {
    return featureStats_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < featureStats_.size(); i++) {
      output.writeMessage(1, featureStats_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < featureStats_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, featureStats_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.visma.asgt.type.FeatureStats)) {
      return super.equals(obj);
    }
    ai.visma.asgt.type.FeatureStats other = (ai.visma.asgt.type.FeatureStats) obj;

    if (!getFeatureStatsList()
        .equals(other.getFeatureStatsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getFeatureStatsCount() > 0) {
      hash = (37 * hash) + FEATURE_STATS_FIELD_NUMBER;
      hash = (53 * hash) + getFeatureStatsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.visma.asgt.type.FeatureStats parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.visma.asgt.type.FeatureStats parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.visma.asgt.type.FeatureStats parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.visma.asgt.type.FeatureStats parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.visma.asgt.type.FeatureStats parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.visma.asgt.type.FeatureStats parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.visma.asgt.type.FeatureStats parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.visma.asgt.type.FeatureStats parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.visma.asgt.type.FeatureStats parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.visma.asgt.type.FeatureStats parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.visma.asgt.type.FeatureStats parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.visma.asgt.type.FeatureStats parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.visma.asgt.type.FeatureStats prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code asgt.type.FeatureStats}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:asgt.type.FeatureStats)
      ai.visma.asgt.type.FeatureStatsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.visma.asgt.type.TrainStatisticsProto.internal_static_asgt_type_FeatureStats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.visma.asgt.type.TrainStatisticsProto.internal_static_asgt_type_FeatureStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.visma.asgt.type.FeatureStats.class, ai.visma.asgt.type.FeatureStats.Builder.class);
    }

    // Construct using ai.visma.asgt.type.FeatureStats.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (featureStatsBuilder_ == null) {
        featureStats_ = java.util.Collections.emptyList();
      } else {
        featureStats_ = null;
        featureStatsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.visma.asgt.type.TrainStatisticsProto.internal_static_asgt_type_FeatureStats_descriptor;
    }

    @java.lang.Override
    public ai.visma.asgt.type.FeatureStats getDefaultInstanceForType() {
      return ai.visma.asgt.type.FeatureStats.getDefaultInstance();
    }

    @java.lang.Override
    public ai.visma.asgt.type.FeatureStats build() {
      ai.visma.asgt.type.FeatureStats result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.visma.asgt.type.FeatureStats buildPartial() {
      ai.visma.asgt.type.FeatureStats result = new ai.visma.asgt.type.FeatureStats(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(ai.visma.asgt.type.FeatureStats result) {
      if (featureStatsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          featureStats_ = java.util.Collections.unmodifiableList(featureStats_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.featureStats_ = featureStats_;
      } else {
        result.featureStats_ = featureStatsBuilder_.build();
      }
    }

    private void buildPartial0(ai.visma.asgt.type.FeatureStats result) {
      int from_bitField0_ = bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.visma.asgt.type.FeatureStats) {
        return mergeFrom((ai.visma.asgt.type.FeatureStats)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.visma.asgt.type.FeatureStats other) {
      if (other == ai.visma.asgt.type.FeatureStats.getDefaultInstance()) return this;
      if (featureStatsBuilder_ == null) {
        if (!other.featureStats_.isEmpty()) {
          if (featureStats_.isEmpty()) {
            featureStats_ = other.featureStats_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFeatureStatsIsMutable();
            featureStats_.addAll(other.featureStats_);
          }
          onChanged();
        }
      } else {
        if (!other.featureStats_.isEmpty()) {
          if (featureStatsBuilder_.isEmpty()) {
            featureStatsBuilder_.dispose();
            featureStatsBuilder_ = null;
            featureStats_ = other.featureStats_;
            bitField0_ = (bitField0_ & ~0x00000001);
            featureStatsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getFeatureStatsFieldBuilder() : null;
          } else {
            featureStatsBuilder_.addAllMessages(other.featureStats_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              ai.visma.asgt.type.FeatureStat m =
                  input.readMessage(
                      ai.visma.asgt.type.FeatureStat.parser(),
                      extensionRegistry);
              if (featureStatsBuilder_ == null) {
                ensureFeatureStatsIsMutable();
                featureStats_.add(m);
              } else {
                featureStatsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<ai.visma.asgt.type.FeatureStat> featureStats_ =
      java.util.Collections.emptyList();
    private void ensureFeatureStatsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        featureStats_ = new java.util.ArrayList<ai.visma.asgt.type.FeatureStat>(featureStats_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.asgt.type.FeatureStat, ai.visma.asgt.type.FeatureStat.Builder, ai.visma.asgt.type.FeatureStatOrBuilder> featureStatsBuilder_;

    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public java.util.List<ai.visma.asgt.type.FeatureStat> getFeatureStatsList() {
      if (featureStatsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(featureStats_);
      } else {
        return featureStatsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public int getFeatureStatsCount() {
      if (featureStatsBuilder_ == null) {
        return featureStats_.size();
      } else {
        return featureStatsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public ai.visma.asgt.type.FeatureStat getFeatureStats(int index) {
      if (featureStatsBuilder_ == null) {
        return featureStats_.get(index);
      } else {
        return featureStatsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public Builder setFeatureStats(
        int index, ai.visma.asgt.type.FeatureStat value) {
      if (featureStatsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeatureStatsIsMutable();
        featureStats_.set(index, value);
        onChanged();
      } else {
        featureStatsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public Builder setFeatureStats(
        int index, ai.visma.asgt.type.FeatureStat.Builder builderForValue) {
      if (featureStatsBuilder_ == null) {
        ensureFeatureStatsIsMutable();
        featureStats_.set(index, builderForValue.build());
        onChanged();
      } else {
        featureStatsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public Builder addFeatureStats(ai.visma.asgt.type.FeatureStat value) {
      if (featureStatsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeatureStatsIsMutable();
        featureStats_.add(value);
        onChanged();
      } else {
        featureStatsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public Builder addFeatureStats(
        int index, ai.visma.asgt.type.FeatureStat value) {
      if (featureStatsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeatureStatsIsMutable();
        featureStats_.add(index, value);
        onChanged();
      } else {
        featureStatsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public Builder addFeatureStats(
        ai.visma.asgt.type.FeatureStat.Builder builderForValue) {
      if (featureStatsBuilder_ == null) {
        ensureFeatureStatsIsMutable();
        featureStats_.add(builderForValue.build());
        onChanged();
      } else {
        featureStatsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public Builder addFeatureStats(
        int index, ai.visma.asgt.type.FeatureStat.Builder builderForValue) {
      if (featureStatsBuilder_ == null) {
        ensureFeatureStatsIsMutable();
        featureStats_.add(index, builderForValue.build());
        onChanged();
      } else {
        featureStatsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public Builder addAllFeatureStats(
        java.lang.Iterable<? extends ai.visma.asgt.type.FeatureStat> values) {
      if (featureStatsBuilder_ == null) {
        ensureFeatureStatsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, featureStats_);
        onChanged();
      } else {
        featureStatsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public Builder clearFeatureStats() {
      if (featureStatsBuilder_ == null) {
        featureStats_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        featureStatsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public Builder removeFeatureStats(int index) {
      if (featureStatsBuilder_ == null) {
        ensureFeatureStatsIsMutable();
        featureStats_.remove(index);
        onChanged();
      } else {
        featureStatsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public ai.visma.asgt.type.FeatureStat.Builder getFeatureStatsBuilder(
        int index) {
      return getFeatureStatsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public ai.visma.asgt.type.FeatureStatOrBuilder getFeatureStatsOrBuilder(
        int index) {
      if (featureStatsBuilder_ == null) {
        return featureStats_.get(index);  } else {
        return featureStatsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public java.util.List<? extends ai.visma.asgt.type.FeatureStatOrBuilder> 
         getFeatureStatsOrBuilderList() {
      if (featureStatsBuilder_ != null) {
        return featureStatsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(featureStats_);
      }
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public ai.visma.asgt.type.FeatureStat.Builder addFeatureStatsBuilder() {
      return getFeatureStatsFieldBuilder().addBuilder(
          ai.visma.asgt.type.FeatureStat.getDefaultInstance());
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public ai.visma.asgt.type.FeatureStat.Builder addFeatureStatsBuilder(
        int index) {
      return getFeatureStatsFieldBuilder().addBuilder(
          index, ai.visma.asgt.type.FeatureStat.getDefaultInstance());
    }
    /**
     * <pre>
     * feature statistics for each feature
     * </pre>
     *
     * <code>repeated .asgt.type.FeatureStat feature_stats = 1 [json_name = "featureStats"];</code>
     */
    public java.util.List<ai.visma.asgt.type.FeatureStat.Builder> 
         getFeatureStatsBuilderList() {
      return getFeatureStatsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.asgt.type.FeatureStat, ai.visma.asgt.type.FeatureStat.Builder, ai.visma.asgt.type.FeatureStatOrBuilder> 
        getFeatureStatsFieldBuilder() {
      if (featureStatsBuilder_ == null) {
        featureStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.asgt.type.FeatureStat, ai.visma.asgt.type.FeatureStat.Builder, ai.visma.asgt.type.FeatureStatOrBuilder>(
                featureStats_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        featureStats_ = null;
      }
      return featureStatsBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:asgt.type.FeatureStats)
  }

  // @@protoc_insertion_point(class_scope:asgt.type.FeatureStats)
  private static final ai.visma.asgt.type.FeatureStats DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.visma.asgt.type.FeatureStats();
  }

  public static ai.visma.asgt.type.FeatureStats getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FeatureStats>
      PARSER = new com.google.protobuf.AbstractParser<FeatureStats>() {
    @java.lang.Override
    public FeatureStats parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<FeatureStats> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FeatureStats> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.visma.asgt.type.FeatureStats getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

