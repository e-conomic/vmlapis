// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: asgt/data/v1/bq_entries.proto

package ai.visma.asgt.dataservice.v1;

public interface EntryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:asgt.dataservice.v1.Entry)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string id = 1 [json_name = "id", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <code>string id = 1 [json_name = "id", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <code>string consumer = 2 [json_name = "consumer", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The consumer.
   */
  java.lang.String getConsumer();
  /**
   * <code>string consumer = 2 [json_name = "consumer", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The bytes for consumer.
   */
  com.google.protobuf.ByteString
      getConsumerBytes();

  /**
   * <code>string dataset_name = 3 [json_name = "datasetName", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The datasetName.
   */
  java.lang.String getDatasetName();
  /**
   * <code>string dataset_name = 3 [json_name = "datasetName", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The bytes for datasetName.
   */
  com.google.protobuf.ByteString
      getDatasetNameBytes();

  /**
   * <code>string dataset_type = 12 [json_name = "datasetType", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The datasetType.
   */
  java.lang.String getDatasetType();
  /**
   * <code>string dataset_type = 12 [json_name = "datasetType", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The bytes for datasetType.
   */
  com.google.protobuf.ByteString
      getDatasetTypeBytes();

  /**
   * <code>string dataset_id = 11 [json_name = "datasetId", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The datasetId.
   */
  java.lang.String getDatasetId();
  /**
   * <code>string dataset_id = 11 [json_name = "datasetId", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The bytes for datasetId.
   */
  com.google.protobuf.ByteString
      getDatasetIdBytes();

  /**
   * <code>repeated string tags = 4 [json_name = "tags", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return A list containing the tags.
   */
  java.util.List<java.lang.String>
      getTagsList();
  /**
   * <code>repeated string tags = 4 [json_name = "tags", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The count of tags.
   */
  int getTagsCount();
  /**
   * <code>repeated string tags = 4 [json_name = "tags", (.gen_bq_schema.bigquery) = { ... }</code>
   * @param index The index of the element to return.
   * @return The tags at the given index.
   */
  java.lang.String getTags(int index);
  /**
   * <code>repeated string tags = 4 [json_name = "tags", (.gen_bq_schema.bigquery) = { ... }</code>
   * @param index The index of the value to return.
   * @return The bytes of the tags at the given index.
   */
  com.google.protobuf.ByteString
      getTagsBytes(int index);

  /**
   * <code>.asgt.type.Data data = 5 [json_name = "data"];</code>
   * @return Whether the data field is set.
   */
  boolean hasData();
  /**
   * <code>.asgt.type.Data data = 5 [json_name = "data"];</code>
   * @return The data.
   */
  ai.visma.asgt.type.Data getData();
  /**
   * <code>.asgt.type.Data data = 5 [json_name = "data"];</code>
   */
  ai.visma.asgt.type.DataOrBuilder getDataOrBuilder();

  /**
   * <code>repeated .asgt.type.TargetValue target_values = 6 [json_name = "targetValues"];</code>
   */
  java.util.List<ai.visma.asgt.type.TargetValue> 
      getTargetValuesList();
  /**
   * <code>repeated .asgt.type.TargetValue target_values = 6 [json_name = "targetValues"];</code>
   */
  ai.visma.asgt.type.TargetValue getTargetValues(int index);
  /**
   * <code>repeated .asgt.type.TargetValue target_values = 6 [json_name = "targetValues"];</code>
   */
  int getTargetValuesCount();
  /**
   * <code>repeated .asgt.type.TargetValue target_values = 6 [json_name = "targetValues"];</code>
   */
  java.util.List<? extends ai.visma.asgt.type.TargetValueOrBuilder> 
      getTargetValuesOrBuilderList();
  /**
   * <code>repeated .asgt.type.TargetValue target_values = 6 [json_name = "targetValues"];</code>
   */
  ai.visma.asgt.type.TargetValueOrBuilder getTargetValuesOrBuilder(
      int index);

  /**
   * <code>.asgt.type.Model model = 9 [json_name = "model"];</code>
   * @return Whether the model field is set.
   */
  boolean hasModel();
  /**
   * <code>.asgt.type.Model model = 9 [json_name = "model"];</code>
   * @return The model.
   */
  ai.visma.asgt.type.Model getModel();
  /**
   * <code>.asgt.type.Model model = 9 [json_name = "model"];</code>
   */
  ai.visma.asgt.type.ModelOrBuilder getModelOrBuilder();

  /**
   * <code>repeated .asgt.type.Prediction.Target prediction = 10 [json_name = "prediction"];</code>
   */
  java.util.List<ai.visma.asgt.type.Prediction.Target> 
      getPredictionList();
  /**
   * <code>repeated .asgt.type.Prediction.Target prediction = 10 [json_name = "prediction"];</code>
   */
  ai.visma.asgt.type.Prediction.Target getPrediction(int index);
  /**
   * <code>repeated .asgt.type.Prediction.Target prediction = 10 [json_name = "prediction"];</code>
   */
  int getPredictionCount();
  /**
   * <code>repeated .asgt.type.Prediction.Target prediction = 10 [json_name = "prediction"];</code>
   */
  java.util.List<? extends ai.visma.asgt.type.Prediction.TargetOrBuilder> 
      getPredictionOrBuilderList();
  /**
   * <code>repeated .asgt.type.Prediction.Target prediction = 10 [json_name = "prediction"];</code>
   */
  ai.visma.asgt.type.Prediction.TargetOrBuilder getPredictionOrBuilder(
      int index);

  /**
   * <code>uint64 time_added = 8 [json_name = "timeAdded", (.gen_bq_schema.bigquery) = { ... }</code>
   * @return The timeAdded.
   */
  long getTimeAdded();
}
