// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: asgt/type/dataset_statistics.proto

package asgt.type;

public final class DatasetStatisticsOuterClass {
  private DatasetStatisticsOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DatasetStatisticsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:asgt.type.DatasetStatistics)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * lexical diversity of the dataset split on space
     * </pre>
     *
     * <code>float lexical_diversity_split_on_space = 2 [json_name = "lexicalDiversitySplitOnSpace"];</code>
     * @return The lexicalDiversitySplitOnSpace.
     */
    float getLexicalDiversitySplitOnSpace();

    /**
     * <pre>
     * lexical diversity of the dataset split on special characters
     * </pre>
     *
     * <code>float lexical_diversity_split_on_special = 3 [json_name = "lexicalDiversitySplitOnSpecial"];</code>
     * @return The lexicalDiversitySplitOnSpecial.
     */
    float getLexicalDiversitySplitOnSpecial();

    /**
     * <pre>
     * percentage of empty strings in the dataset
     * </pre>
     *
     * <code>float percent_empty_strings = 4 [json_name = "percentEmptyStrings"];</code>
     * @return The percentEmptyStrings.
     */
    float getPercentEmptyStrings();

    /**
     * <pre>
     * percentage of pure numbers in the dataset after removing spaces
     * </pre>
     *
     * <code>float percent_pure_numbers_remove_spaces = 5 [json_name = "percentPureNumbersRemoveSpaces"];</code>
     * @return The percentPureNumbersRemoveSpaces.
     */
    float getPercentPureNumbersRemoveSpaces();

    /**
     * <pre>
     * percentage of pure numbers in the dataset after removing spaces and special characters
     * </pre>
     *
     * <code>float percent_pure_numbers_remove_special = 6 [json_name = "percentPureNumbersRemoveSpecial"];</code>
     * @return The percentPureNumbersRemoveSpecial.
     */
    float getPercentPureNumbersRemoveSpecial();

    /**
     * <pre>
     * percentage of special characters in the dataset
     * </pre>
     *
     * <code>float percent_special_characters = 7 [json_name = "percentSpecialCharacters"];</code>
     * @return The percentSpecialCharacters.
     */
    float getPercentSpecialCharacters();

    /**
     * <pre>
     * percentage of digits in the dataset
     * </pre>
     *
     * <code>float percent_digits = 8 [json_name = "percentDigits"];</code>
     * @return The percentDigits.
     */
    float getPercentDigits();

    /**
     * <pre>
     * percentage of letters in the dataset
     * </pre>
     *
     * <code>float percent_letters = 9 [json_name = "percentLetters"];</code>
     * @return The percentLetters.
     */
    float getPercentLetters();

    /**
     * <pre>
     * percentage of duplicates in the dataset
     * </pre>
     *
     * <code>float percent_duplicates_in_dataset = 10 [json_name = "percentDuplicatesInDataset"];</code>
     * @return The percentDuplicatesInDataset.
     */
    float getPercentDuplicatesInDataset();
  }
  /**
   * Protobuf type {@code asgt.type.DatasetStatistics}
   */
  public static final class DatasetStatistics extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:asgt.type.DatasetStatistics)
      DatasetStatisticsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DatasetStatistics.newBuilder() to construct.
    private DatasetStatistics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DatasetStatistics() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DatasetStatistics();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return asgt.type.DatasetStatisticsOuterClass.internal_static_asgt_type_DatasetStatistics_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return asgt.type.DatasetStatisticsOuterClass.internal_static_asgt_type_DatasetStatistics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              asgt.type.DatasetStatisticsOuterClass.DatasetStatistics.class, asgt.type.DatasetStatisticsOuterClass.DatasetStatistics.Builder.class);
    }

    public static final int LEXICAL_DIVERSITY_SPLIT_ON_SPACE_FIELD_NUMBER = 2;
    private float lexicalDiversitySplitOnSpace_;
    /**
     * <pre>
     * lexical diversity of the dataset split on space
     * </pre>
     *
     * <code>float lexical_diversity_split_on_space = 2 [json_name = "lexicalDiversitySplitOnSpace"];</code>
     * @return The lexicalDiversitySplitOnSpace.
     */
    @java.lang.Override
    public float getLexicalDiversitySplitOnSpace() {
      return lexicalDiversitySplitOnSpace_;
    }

    public static final int LEXICAL_DIVERSITY_SPLIT_ON_SPECIAL_FIELD_NUMBER = 3;
    private float lexicalDiversitySplitOnSpecial_;
    /**
     * <pre>
     * lexical diversity of the dataset split on special characters
     * </pre>
     *
     * <code>float lexical_diversity_split_on_special = 3 [json_name = "lexicalDiversitySplitOnSpecial"];</code>
     * @return The lexicalDiversitySplitOnSpecial.
     */
    @java.lang.Override
    public float getLexicalDiversitySplitOnSpecial() {
      return lexicalDiversitySplitOnSpecial_;
    }

    public static final int PERCENT_EMPTY_STRINGS_FIELD_NUMBER = 4;
    private float percentEmptyStrings_;
    /**
     * <pre>
     * percentage of empty strings in the dataset
     * </pre>
     *
     * <code>float percent_empty_strings = 4 [json_name = "percentEmptyStrings"];</code>
     * @return The percentEmptyStrings.
     */
    @java.lang.Override
    public float getPercentEmptyStrings() {
      return percentEmptyStrings_;
    }

    public static final int PERCENT_PURE_NUMBERS_REMOVE_SPACES_FIELD_NUMBER = 5;
    private float percentPureNumbersRemoveSpaces_;
    /**
     * <pre>
     * percentage of pure numbers in the dataset after removing spaces
     * </pre>
     *
     * <code>float percent_pure_numbers_remove_spaces = 5 [json_name = "percentPureNumbersRemoveSpaces"];</code>
     * @return The percentPureNumbersRemoveSpaces.
     */
    @java.lang.Override
    public float getPercentPureNumbersRemoveSpaces() {
      return percentPureNumbersRemoveSpaces_;
    }

    public static final int PERCENT_PURE_NUMBERS_REMOVE_SPECIAL_FIELD_NUMBER = 6;
    private float percentPureNumbersRemoveSpecial_;
    /**
     * <pre>
     * percentage of pure numbers in the dataset after removing spaces and special characters
     * </pre>
     *
     * <code>float percent_pure_numbers_remove_special = 6 [json_name = "percentPureNumbersRemoveSpecial"];</code>
     * @return The percentPureNumbersRemoveSpecial.
     */
    @java.lang.Override
    public float getPercentPureNumbersRemoveSpecial() {
      return percentPureNumbersRemoveSpecial_;
    }

    public static final int PERCENT_SPECIAL_CHARACTERS_FIELD_NUMBER = 7;
    private float percentSpecialCharacters_;
    /**
     * <pre>
     * percentage of special characters in the dataset
     * </pre>
     *
     * <code>float percent_special_characters = 7 [json_name = "percentSpecialCharacters"];</code>
     * @return The percentSpecialCharacters.
     */
    @java.lang.Override
    public float getPercentSpecialCharacters() {
      return percentSpecialCharacters_;
    }

    public static final int PERCENT_DIGITS_FIELD_NUMBER = 8;
    private float percentDigits_;
    /**
     * <pre>
     * percentage of digits in the dataset
     * </pre>
     *
     * <code>float percent_digits = 8 [json_name = "percentDigits"];</code>
     * @return The percentDigits.
     */
    @java.lang.Override
    public float getPercentDigits() {
      return percentDigits_;
    }

    public static final int PERCENT_LETTERS_FIELD_NUMBER = 9;
    private float percentLetters_;
    /**
     * <pre>
     * percentage of letters in the dataset
     * </pre>
     *
     * <code>float percent_letters = 9 [json_name = "percentLetters"];</code>
     * @return The percentLetters.
     */
    @java.lang.Override
    public float getPercentLetters() {
      return percentLetters_;
    }

    public static final int PERCENT_DUPLICATES_IN_DATASET_FIELD_NUMBER = 10;
    private float percentDuplicatesInDataset_;
    /**
     * <pre>
     * percentage of duplicates in the dataset
     * </pre>
     *
     * <code>float percent_duplicates_in_dataset = 10 [json_name = "percentDuplicatesInDataset"];</code>
     * @return The percentDuplicatesInDataset.
     */
    @java.lang.Override
    public float getPercentDuplicatesInDataset() {
      return percentDuplicatesInDataset_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(lexicalDiversitySplitOnSpace_) != 0) {
        output.writeFloat(2, lexicalDiversitySplitOnSpace_);
      }
      if (java.lang.Float.floatToRawIntBits(lexicalDiversitySplitOnSpecial_) != 0) {
        output.writeFloat(3, lexicalDiversitySplitOnSpecial_);
      }
      if (java.lang.Float.floatToRawIntBits(percentEmptyStrings_) != 0) {
        output.writeFloat(4, percentEmptyStrings_);
      }
      if (java.lang.Float.floatToRawIntBits(percentPureNumbersRemoveSpaces_) != 0) {
        output.writeFloat(5, percentPureNumbersRemoveSpaces_);
      }
      if (java.lang.Float.floatToRawIntBits(percentPureNumbersRemoveSpecial_) != 0) {
        output.writeFloat(6, percentPureNumbersRemoveSpecial_);
      }
      if (java.lang.Float.floatToRawIntBits(percentSpecialCharacters_) != 0) {
        output.writeFloat(7, percentSpecialCharacters_);
      }
      if (java.lang.Float.floatToRawIntBits(percentDigits_) != 0) {
        output.writeFloat(8, percentDigits_);
      }
      if (java.lang.Float.floatToRawIntBits(percentLetters_) != 0) {
        output.writeFloat(9, percentLetters_);
      }
      if (java.lang.Float.floatToRawIntBits(percentDuplicatesInDataset_) != 0) {
        output.writeFloat(10, percentDuplicatesInDataset_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(lexicalDiversitySplitOnSpace_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, lexicalDiversitySplitOnSpace_);
      }
      if (java.lang.Float.floatToRawIntBits(lexicalDiversitySplitOnSpecial_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, lexicalDiversitySplitOnSpecial_);
      }
      if (java.lang.Float.floatToRawIntBits(percentEmptyStrings_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, percentEmptyStrings_);
      }
      if (java.lang.Float.floatToRawIntBits(percentPureNumbersRemoveSpaces_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, percentPureNumbersRemoveSpaces_);
      }
      if (java.lang.Float.floatToRawIntBits(percentPureNumbersRemoveSpecial_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, percentPureNumbersRemoveSpecial_);
      }
      if (java.lang.Float.floatToRawIntBits(percentSpecialCharacters_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, percentSpecialCharacters_);
      }
      if (java.lang.Float.floatToRawIntBits(percentDigits_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, percentDigits_);
      }
      if (java.lang.Float.floatToRawIntBits(percentLetters_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, percentLetters_);
      }
      if (java.lang.Float.floatToRawIntBits(percentDuplicatesInDataset_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, percentDuplicatesInDataset_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof asgt.type.DatasetStatisticsOuterClass.DatasetStatistics)) {
        return super.equals(obj);
      }
      asgt.type.DatasetStatisticsOuterClass.DatasetStatistics other = (asgt.type.DatasetStatisticsOuterClass.DatasetStatistics) obj;

      if (java.lang.Float.floatToIntBits(getLexicalDiversitySplitOnSpace())
          != java.lang.Float.floatToIntBits(
              other.getLexicalDiversitySplitOnSpace())) return false;
      if (java.lang.Float.floatToIntBits(getLexicalDiversitySplitOnSpecial())
          != java.lang.Float.floatToIntBits(
              other.getLexicalDiversitySplitOnSpecial())) return false;
      if (java.lang.Float.floatToIntBits(getPercentEmptyStrings())
          != java.lang.Float.floatToIntBits(
              other.getPercentEmptyStrings())) return false;
      if (java.lang.Float.floatToIntBits(getPercentPureNumbersRemoveSpaces())
          != java.lang.Float.floatToIntBits(
              other.getPercentPureNumbersRemoveSpaces())) return false;
      if (java.lang.Float.floatToIntBits(getPercentPureNumbersRemoveSpecial())
          != java.lang.Float.floatToIntBits(
              other.getPercentPureNumbersRemoveSpecial())) return false;
      if (java.lang.Float.floatToIntBits(getPercentSpecialCharacters())
          != java.lang.Float.floatToIntBits(
              other.getPercentSpecialCharacters())) return false;
      if (java.lang.Float.floatToIntBits(getPercentDigits())
          != java.lang.Float.floatToIntBits(
              other.getPercentDigits())) return false;
      if (java.lang.Float.floatToIntBits(getPercentLetters())
          != java.lang.Float.floatToIntBits(
              other.getPercentLetters())) return false;
      if (java.lang.Float.floatToIntBits(getPercentDuplicatesInDataset())
          != java.lang.Float.floatToIntBits(
              other.getPercentDuplicatesInDataset())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LEXICAL_DIVERSITY_SPLIT_ON_SPACE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLexicalDiversitySplitOnSpace());
      hash = (37 * hash) + LEXICAL_DIVERSITY_SPLIT_ON_SPECIAL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getLexicalDiversitySplitOnSpecial());
      hash = (37 * hash) + PERCENT_EMPTY_STRINGS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPercentEmptyStrings());
      hash = (37 * hash) + PERCENT_PURE_NUMBERS_REMOVE_SPACES_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPercentPureNumbersRemoveSpaces());
      hash = (37 * hash) + PERCENT_PURE_NUMBERS_REMOVE_SPECIAL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPercentPureNumbersRemoveSpecial());
      hash = (37 * hash) + PERCENT_SPECIAL_CHARACTERS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPercentSpecialCharacters());
      hash = (37 * hash) + PERCENT_DIGITS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPercentDigits());
      hash = (37 * hash) + PERCENT_LETTERS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPercentLetters());
      hash = (37 * hash) + PERCENT_DUPLICATES_IN_DATASET_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getPercentDuplicatesInDataset());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static asgt.type.DatasetStatisticsOuterClass.DatasetStatistics parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static asgt.type.DatasetStatisticsOuterClass.DatasetStatistics parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static asgt.type.DatasetStatisticsOuterClass.DatasetStatistics parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static asgt.type.DatasetStatisticsOuterClass.DatasetStatistics parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static asgt.type.DatasetStatisticsOuterClass.DatasetStatistics parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static asgt.type.DatasetStatisticsOuterClass.DatasetStatistics parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static asgt.type.DatasetStatisticsOuterClass.DatasetStatistics parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static asgt.type.DatasetStatisticsOuterClass.DatasetStatistics parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static asgt.type.DatasetStatisticsOuterClass.DatasetStatistics parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static asgt.type.DatasetStatisticsOuterClass.DatasetStatistics parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static asgt.type.DatasetStatisticsOuterClass.DatasetStatistics parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static asgt.type.DatasetStatisticsOuterClass.DatasetStatistics parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(asgt.type.DatasetStatisticsOuterClass.DatasetStatistics prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code asgt.type.DatasetStatistics}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:asgt.type.DatasetStatistics)
        asgt.type.DatasetStatisticsOuterClass.DatasetStatisticsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return asgt.type.DatasetStatisticsOuterClass.internal_static_asgt_type_DatasetStatistics_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return asgt.type.DatasetStatisticsOuterClass.internal_static_asgt_type_DatasetStatistics_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                asgt.type.DatasetStatisticsOuterClass.DatasetStatistics.class, asgt.type.DatasetStatisticsOuterClass.DatasetStatistics.Builder.class);
      }

      // Construct using asgt.type.DatasetStatisticsOuterClass.DatasetStatistics.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        lexicalDiversitySplitOnSpace_ = 0F;

        lexicalDiversitySplitOnSpecial_ = 0F;

        percentEmptyStrings_ = 0F;

        percentPureNumbersRemoveSpaces_ = 0F;

        percentPureNumbersRemoveSpecial_ = 0F;

        percentSpecialCharacters_ = 0F;

        percentDigits_ = 0F;

        percentLetters_ = 0F;

        percentDuplicatesInDataset_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return asgt.type.DatasetStatisticsOuterClass.internal_static_asgt_type_DatasetStatistics_descriptor;
      }

      @java.lang.Override
      public asgt.type.DatasetStatisticsOuterClass.DatasetStatistics getDefaultInstanceForType() {
        return asgt.type.DatasetStatisticsOuterClass.DatasetStatistics.getDefaultInstance();
      }

      @java.lang.Override
      public asgt.type.DatasetStatisticsOuterClass.DatasetStatistics build() {
        asgt.type.DatasetStatisticsOuterClass.DatasetStatistics result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public asgt.type.DatasetStatisticsOuterClass.DatasetStatistics buildPartial() {
        asgt.type.DatasetStatisticsOuterClass.DatasetStatistics result = new asgt.type.DatasetStatisticsOuterClass.DatasetStatistics(this);
        result.lexicalDiversitySplitOnSpace_ = lexicalDiversitySplitOnSpace_;
        result.lexicalDiversitySplitOnSpecial_ = lexicalDiversitySplitOnSpecial_;
        result.percentEmptyStrings_ = percentEmptyStrings_;
        result.percentPureNumbersRemoveSpaces_ = percentPureNumbersRemoveSpaces_;
        result.percentPureNumbersRemoveSpecial_ = percentPureNumbersRemoveSpecial_;
        result.percentSpecialCharacters_ = percentSpecialCharacters_;
        result.percentDigits_ = percentDigits_;
        result.percentLetters_ = percentLetters_;
        result.percentDuplicatesInDataset_ = percentDuplicatesInDataset_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof asgt.type.DatasetStatisticsOuterClass.DatasetStatistics) {
          return mergeFrom((asgt.type.DatasetStatisticsOuterClass.DatasetStatistics)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(asgt.type.DatasetStatisticsOuterClass.DatasetStatistics other) {
        if (other == asgt.type.DatasetStatisticsOuterClass.DatasetStatistics.getDefaultInstance()) return this;
        if (other.getLexicalDiversitySplitOnSpace() != 0F) {
          setLexicalDiversitySplitOnSpace(other.getLexicalDiversitySplitOnSpace());
        }
        if (other.getLexicalDiversitySplitOnSpecial() != 0F) {
          setLexicalDiversitySplitOnSpecial(other.getLexicalDiversitySplitOnSpecial());
        }
        if (other.getPercentEmptyStrings() != 0F) {
          setPercentEmptyStrings(other.getPercentEmptyStrings());
        }
        if (other.getPercentPureNumbersRemoveSpaces() != 0F) {
          setPercentPureNumbersRemoveSpaces(other.getPercentPureNumbersRemoveSpaces());
        }
        if (other.getPercentPureNumbersRemoveSpecial() != 0F) {
          setPercentPureNumbersRemoveSpecial(other.getPercentPureNumbersRemoveSpecial());
        }
        if (other.getPercentSpecialCharacters() != 0F) {
          setPercentSpecialCharacters(other.getPercentSpecialCharacters());
        }
        if (other.getPercentDigits() != 0F) {
          setPercentDigits(other.getPercentDigits());
        }
        if (other.getPercentLetters() != 0F) {
          setPercentLetters(other.getPercentLetters());
        }
        if (other.getPercentDuplicatesInDataset() != 0F) {
          setPercentDuplicatesInDataset(other.getPercentDuplicatesInDataset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 21: {
                lexicalDiversitySplitOnSpace_ = input.readFloat();

                break;
              } // case 21
              case 29: {
                lexicalDiversitySplitOnSpecial_ = input.readFloat();

                break;
              } // case 29
              case 37: {
                percentEmptyStrings_ = input.readFloat();

                break;
              } // case 37
              case 45: {
                percentPureNumbersRemoveSpaces_ = input.readFloat();

                break;
              } // case 45
              case 53: {
                percentPureNumbersRemoveSpecial_ = input.readFloat();

                break;
              } // case 53
              case 61: {
                percentSpecialCharacters_ = input.readFloat();

                break;
              } // case 61
              case 69: {
                percentDigits_ = input.readFloat();

                break;
              } // case 69
              case 77: {
                percentLetters_ = input.readFloat();

                break;
              } // case 77
              case 85: {
                percentDuplicatesInDataset_ = input.readFloat();

                break;
              } // case 85
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      private float lexicalDiversitySplitOnSpace_ ;
      /**
       * <pre>
       * lexical diversity of the dataset split on space
       * </pre>
       *
       * <code>float lexical_diversity_split_on_space = 2 [json_name = "lexicalDiversitySplitOnSpace"];</code>
       * @return The lexicalDiversitySplitOnSpace.
       */
      @java.lang.Override
      public float getLexicalDiversitySplitOnSpace() {
        return lexicalDiversitySplitOnSpace_;
      }
      /**
       * <pre>
       * lexical diversity of the dataset split on space
       * </pre>
       *
       * <code>float lexical_diversity_split_on_space = 2 [json_name = "lexicalDiversitySplitOnSpace"];</code>
       * @param value The lexicalDiversitySplitOnSpace to set.
       * @return This builder for chaining.
       */
      public Builder setLexicalDiversitySplitOnSpace(float value) {
        
        lexicalDiversitySplitOnSpace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lexical diversity of the dataset split on space
       * </pre>
       *
       * <code>float lexical_diversity_split_on_space = 2 [json_name = "lexicalDiversitySplitOnSpace"];</code>
       * @return This builder for chaining.
       */
      public Builder clearLexicalDiversitySplitOnSpace() {
        
        lexicalDiversitySplitOnSpace_ = 0F;
        onChanged();
        return this;
      }

      private float lexicalDiversitySplitOnSpecial_ ;
      /**
       * <pre>
       * lexical diversity of the dataset split on special characters
       * </pre>
       *
       * <code>float lexical_diversity_split_on_special = 3 [json_name = "lexicalDiversitySplitOnSpecial"];</code>
       * @return The lexicalDiversitySplitOnSpecial.
       */
      @java.lang.Override
      public float getLexicalDiversitySplitOnSpecial() {
        return lexicalDiversitySplitOnSpecial_;
      }
      /**
       * <pre>
       * lexical diversity of the dataset split on special characters
       * </pre>
       *
       * <code>float lexical_diversity_split_on_special = 3 [json_name = "lexicalDiversitySplitOnSpecial"];</code>
       * @param value The lexicalDiversitySplitOnSpecial to set.
       * @return This builder for chaining.
       */
      public Builder setLexicalDiversitySplitOnSpecial(float value) {
        
        lexicalDiversitySplitOnSpecial_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lexical diversity of the dataset split on special characters
       * </pre>
       *
       * <code>float lexical_diversity_split_on_special = 3 [json_name = "lexicalDiversitySplitOnSpecial"];</code>
       * @return This builder for chaining.
       */
      public Builder clearLexicalDiversitySplitOnSpecial() {
        
        lexicalDiversitySplitOnSpecial_ = 0F;
        onChanged();
        return this;
      }

      private float percentEmptyStrings_ ;
      /**
       * <pre>
       * percentage of empty strings in the dataset
       * </pre>
       *
       * <code>float percent_empty_strings = 4 [json_name = "percentEmptyStrings"];</code>
       * @return The percentEmptyStrings.
       */
      @java.lang.Override
      public float getPercentEmptyStrings() {
        return percentEmptyStrings_;
      }
      /**
       * <pre>
       * percentage of empty strings in the dataset
       * </pre>
       *
       * <code>float percent_empty_strings = 4 [json_name = "percentEmptyStrings"];</code>
       * @param value The percentEmptyStrings to set.
       * @return This builder for chaining.
       */
      public Builder setPercentEmptyStrings(float value) {
        
        percentEmptyStrings_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * percentage of empty strings in the dataset
       * </pre>
       *
       * <code>float percent_empty_strings = 4 [json_name = "percentEmptyStrings"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPercentEmptyStrings() {
        
        percentEmptyStrings_ = 0F;
        onChanged();
        return this;
      }

      private float percentPureNumbersRemoveSpaces_ ;
      /**
       * <pre>
       * percentage of pure numbers in the dataset after removing spaces
       * </pre>
       *
       * <code>float percent_pure_numbers_remove_spaces = 5 [json_name = "percentPureNumbersRemoveSpaces"];</code>
       * @return The percentPureNumbersRemoveSpaces.
       */
      @java.lang.Override
      public float getPercentPureNumbersRemoveSpaces() {
        return percentPureNumbersRemoveSpaces_;
      }
      /**
       * <pre>
       * percentage of pure numbers in the dataset after removing spaces
       * </pre>
       *
       * <code>float percent_pure_numbers_remove_spaces = 5 [json_name = "percentPureNumbersRemoveSpaces"];</code>
       * @param value The percentPureNumbersRemoveSpaces to set.
       * @return This builder for chaining.
       */
      public Builder setPercentPureNumbersRemoveSpaces(float value) {
        
        percentPureNumbersRemoveSpaces_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * percentage of pure numbers in the dataset after removing spaces
       * </pre>
       *
       * <code>float percent_pure_numbers_remove_spaces = 5 [json_name = "percentPureNumbersRemoveSpaces"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPercentPureNumbersRemoveSpaces() {
        
        percentPureNumbersRemoveSpaces_ = 0F;
        onChanged();
        return this;
      }

      private float percentPureNumbersRemoveSpecial_ ;
      /**
       * <pre>
       * percentage of pure numbers in the dataset after removing spaces and special characters
       * </pre>
       *
       * <code>float percent_pure_numbers_remove_special = 6 [json_name = "percentPureNumbersRemoveSpecial"];</code>
       * @return The percentPureNumbersRemoveSpecial.
       */
      @java.lang.Override
      public float getPercentPureNumbersRemoveSpecial() {
        return percentPureNumbersRemoveSpecial_;
      }
      /**
       * <pre>
       * percentage of pure numbers in the dataset after removing spaces and special characters
       * </pre>
       *
       * <code>float percent_pure_numbers_remove_special = 6 [json_name = "percentPureNumbersRemoveSpecial"];</code>
       * @param value The percentPureNumbersRemoveSpecial to set.
       * @return This builder for chaining.
       */
      public Builder setPercentPureNumbersRemoveSpecial(float value) {
        
        percentPureNumbersRemoveSpecial_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * percentage of pure numbers in the dataset after removing spaces and special characters
       * </pre>
       *
       * <code>float percent_pure_numbers_remove_special = 6 [json_name = "percentPureNumbersRemoveSpecial"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPercentPureNumbersRemoveSpecial() {
        
        percentPureNumbersRemoveSpecial_ = 0F;
        onChanged();
        return this;
      }

      private float percentSpecialCharacters_ ;
      /**
       * <pre>
       * percentage of special characters in the dataset
       * </pre>
       *
       * <code>float percent_special_characters = 7 [json_name = "percentSpecialCharacters"];</code>
       * @return The percentSpecialCharacters.
       */
      @java.lang.Override
      public float getPercentSpecialCharacters() {
        return percentSpecialCharacters_;
      }
      /**
       * <pre>
       * percentage of special characters in the dataset
       * </pre>
       *
       * <code>float percent_special_characters = 7 [json_name = "percentSpecialCharacters"];</code>
       * @param value The percentSpecialCharacters to set.
       * @return This builder for chaining.
       */
      public Builder setPercentSpecialCharacters(float value) {
        
        percentSpecialCharacters_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * percentage of special characters in the dataset
       * </pre>
       *
       * <code>float percent_special_characters = 7 [json_name = "percentSpecialCharacters"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPercentSpecialCharacters() {
        
        percentSpecialCharacters_ = 0F;
        onChanged();
        return this;
      }

      private float percentDigits_ ;
      /**
       * <pre>
       * percentage of digits in the dataset
       * </pre>
       *
       * <code>float percent_digits = 8 [json_name = "percentDigits"];</code>
       * @return The percentDigits.
       */
      @java.lang.Override
      public float getPercentDigits() {
        return percentDigits_;
      }
      /**
       * <pre>
       * percentage of digits in the dataset
       * </pre>
       *
       * <code>float percent_digits = 8 [json_name = "percentDigits"];</code>
       * @param value The percentDigits to set.
       * @return This builder for chaining.
       */
      public Builder setPercentDigits(float value) {
        
        percentDigits_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * percentage of digits in the dataset
       * </pre>
       *
       * <code>float percent_digits = 8 [json_name = "percentDigits"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPercentDigits() {
        
        percentDigits_ = 0F;
        onChanged();
        return this;
      }

      private float percentLetters_ ;
      /**
       * <pre>
       * percentage of letters in the dataset
       * </pre>
       *
       * <code>float percent_letters = 9 [json_name = "percentLetters"];</code>
       * @return The percentLetters.
       */
      @java.lang.Override
      public float getPercentLetters() {
        return percentLetters_;
      }
      /**
       * <pre>
       * percentage of letters in the dataset
       * </pre>
       *
       * <code>float percent_letters = 9 [json_name = "percentLetters"];</code>
       * @param value The percentLetters to set.
       * @return This builder for chaining.
       */
      public Builder setPercentLetters(float value) {
        
        percentLetters_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * percentage of letters in the dataset
       * </pre>
       *
       * <code>float percent_letters = 9 [json_name = "percentLetters"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPercentLetters() {
        
        percentLetters_ = 0F;
        onChanged();
        return this;
      }

      private float percentDuplicatesInDataset_ ;
      /**
       * <pre>
       * percentage of duplicates in the dataset
       * </pre>
       *
       * <code>float percent_duplicates_in_dataset = 10 [json_name = "percentDuplicatesInDataset"];</code>
       * @return The percentDuplicatesInDataset.
       */
      @java.lang.Override
      public float getPercentDuplicatesInDataset() {
        return percentDuplicatesInDataset_;
      }
      /**
       * <pre>
       * percentage of duplicates in the dataset
       * </pre>
       *
       * <code>float percent_duplicates_in_dataset = 10 [json_name = "percentDuplicatesInDataset"];</code>
       * @param value The percentDuplicatesInDataset to set.
       * @return This builder for chaining.
       */
      public Builder setPercentDuplicatesInDataset(float value) {
        
        percentDuplicatesInDataset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * percentage of duplicates in the dataset
       * </pre>
       *
       * <code>float percent_duplicates_in_dataset = 10 [json_name = "percentDuplicatesInDataset"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPercentDuplicatesInDataset() {
        
        percentDuplicatesInDataset_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:asgt.type.DatasetStatistics)
    }

    // @@protoc_insertion_point(class_scope:asgt.type.DatasetStatistics)
    private static final asgt.type.DatasetStatisticsOuterClass.DatasetStatistics DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new asgt.type.DatasetStatisticsOuterClass.DatasetStatistics();
    }

    public static asgt.type.DatasetStatisticsOuterClass.DatasetStatistics getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DatasetStatistics>
        PARSER = new com.google.protobuf.AbstractParser<DatasetStatistics>() {
      @java.lang.Override
      public DatasetStatistics parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DatasetStatistics> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DatasetStatistics> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public asgt.type.DatasetStatisticsOuterClass.DatasetStatistics getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_asgt_type_DatasetStatistics_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_asgt_type_DatasetStatistics_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"asgt/type/dataset_statistics.proto\022\tas" +
      "gt.type\"\314\004\n\021DatasetStatistics\022F\n lexical" +
      "_diversity_split_on_space\030\002 \001(\002R\034lexical" +
      "DiversitySplitOnSpace\022J\n\"lexical_diversi" +
      "ty_split_on_special\030\003 \001(\002R\036lexicalDivers" +
      "itySplitOnSpecial\0222\n\025percent_empty_strin" +
      "gs\030\004 \001(\002R\023percentEmptyStrings\022J\n\"percent" +
      "_pure_numbers_remove_spaces\030\005 \001(\002R\036perce" +
      "ntPureNumbersRemoveSpaces\022L\n#percent_pur" +
      "e_numbers_remove_special\030\006 \001(\002R\037percentP" +
      "ureNumbersRemoveSpecial\022<\n\032percent_speci" +
      "al_characters\030\007 \001(\002R\030percentSpecialChara" +
      "cters\022%\n\016percent_digits\030\010 \001(\002R\rpercentDi" +
      "gits\022\'\n\017percent_letters\030\t \001(\002R\016percentLe" +
      "tters\022A\n\035percent_duplicates_in_dataset\030\n" +
      " \001(\002R\032percentDuplicatesInDatasetJ\004\010\001\020\002B8" +
      "Z6github.com/e-conomic/vmlapis/gen/go/as" +
      "gt/type;asgttypeb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_asgt_type_DatasetStatistics_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_asgt_type_DatasetStatistics_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_asgt_type_DatasetStatistics_descriptor,
        new java.lang.String[] { "LexicalDiversitySplitOnSpace", "LexicalDiversitySplitOnSpecial", "PercentEmptyStrings", "PercentPureNumbersRemoveSpaces", "PercentPureNumbersRemoveSpecial", "PercentSpecialCharacters", "PercentDigits", "PercentLetters", "PercentDuplicatesInDataset", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
