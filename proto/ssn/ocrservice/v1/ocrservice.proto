syntax = "proto3";

package ssn.ocrservice.v1;

import "google/protobuf/wrappers.proto";
import "ssn/annotator/v1/annotator.proto";
import "ssn/type/text_annotation.proto";

option go_package = "github.com/e-conomic/vmlapis/gen/go/ssn/ocrservice/v1;ocrservice";
option java_outer_classname = "OcrServiceProto";

// Interface exported by the server.
service OcrService {
  rpc OcrScanImage(OcrScanImageRequest) returns (OcrScanImageResponse);
  rpc GetTextAnnotation(GetTextAnnotationRequest) returns (GetTextAnnotationResponse);
  rpc GetTextAnnotations(GetTextAnnotationRequest) returns (stream GetTextAnnotationResponse);
  rpc AsyncCreateOperation(AsyncCreateOperationRequest) returns (AsyncCreateOperationResponse);
  rpc AsyncGetOperationStatus(AsyncGetOperationStatusRequest) returns (stream AsyncGetOperationStatusResponse);
}

message GetTextAnnotationRequest {
  ssn.annotator.v1.Document document = 2;
  bool preview = 3;
}

message GetTextAnnotationResponse {
  ssn.type.TextAnnotation text_annotation = 2;
  google.protobuf.BytesValue image = 3;
}

message AsyncCreateOperationRequest {
  repeated string input_paths = 1;
  string output_path = 2;
}

message AsyncCreateOperationResponse {
  string operation_name = 1;
}

message AsyncGetOperationStatusRequest {
  string operation_name = 1;
}

message AsyncGetOperationStatusResponse {
  string operation_name = 1;
  bool done = 2;
  int32 status_code = 3;
  string error_message = 4;
}

message OcrScanImageRequest {
  bytes data = 1;
}

message OcrScanImageResponse {
  string tess_hocr = 1;
}
