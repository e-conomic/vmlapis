syntax = "proto3";

package asgt.v2alpha;

option go_package = "github.com/e-conomic/vmlapis/gen/go/asgt/v2alpha";

import "google/api/annotations.proto";
import "options/annotations.proto";

import "asgt/v2alpha/type/prediction.proto";
import "asgt/v2alpha/type/model.proto";
import "asgt/v2alpha/type/data.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "AutoSuggest";
    version: "v2alpha";
    description: "";
  };
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service SuggesterService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
      description: "Make predictions against a dataset."
  };

  // Suggest target values for some input using a dataset, returning an empty result if no model exists.
  rpc Suggest (SuggestRequest) returns (SuggestResponse) {
    option (google.api.http) = {
      post: "/v2/datasets/{name}:suggest"
      body: "*"

      additional_bindings {
        post: "/v2/datasets/{name=bank/*}:suggest"
      }
      additional_bindings {
        post: "/v2/datasets/{name=electronic-invoice-line/*}:suggest"
      }
      additional_bindings {
        post: "/v2/datasets/{name=scanned-invoice/*}:suggest"
      }
    };
  }

  // Suggest target values for multiple inputs using a dataset, returning an empty result if no model exists.
  rpc BatchSuggest (BatchSuggestRequest) returns (BatchSuggestResponse) {
    option (google.api.http) = {
      post: "/v2/datasets/{name}:batchSuggest"
      body: "*"

      additional_bindings {
        post: "/v2/datasets/{name=bank/*}:batchSuggest"
      }
      additional_bindings {
        post: "/v2/datasets/{name=electronic-invoice-line/*}:batchSuggest"
      }
      additional_bindings {
        post: "/v2/datasets/{name=scanned-invoice/*}:batchSuggest"
      }
    };
  }

  // Suggest target values for multiple inputs using the most recently trained model in a dataset.
  // Returns 404 if a dataset exists, but no model has been trained. This matches the behavior of the v1 API.
  rpc ModelBatchSuggest (BatchSuggestRequest) returns (BatchSuggestResponse) {
    option (google.api.http) = {
      post: "/v2/datasets/{name}/model:batchSuggest"
      body: "*"

      additional_bindings {
        post: "/v2/datasets/{name=bank/*}/model:batchSuggest"
      }
      additional_bindings {
        post: "/v2/datasets/{name=electronic-invoice-line/*}/model:batchSuggest"
      }
      additional_bindings {
        post: "/v2/datasets/{name=scanned-invoice/*}/model:batchSuggest"
      }
    };
  }
}

message SuggestOptions {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
			example: "{\"suggest_limit\": 3}"
	};

  // Maximum number of suggestions to return per target
  int32 suggest_limit = 1;
  asgt.v2alpha.type.Confidence.Level min_confidence = 2;
}

message SuggestRequest {
  string name = 1;
  asgt.v2alpha.type.Data input = 2;
  SuggestOptions options = 3;
}

message SuggestResponse {
  asgt.v2alpha.type.Prediction prediction = 1;
  asgt.v2alpha.type.Model model = 2;
}

message BatchSuggestRequest {
  string name = 1;
  repeated asgt.v2alpha.type.Data inputs = 2;
  SuggestOptions options = 3;
}

message BatchSuggestResponse {
  repeated asgt.v2alpha.type.Prediction predictions = 1;
  asgt.v2alpha.type.Model model = 2;
}
