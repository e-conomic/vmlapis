syntax = "proto3";

package usermgnt;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/e-conomic/proto/ssn/usermgnt/v1alpha1;usermgnt";


// CONSUMER

message Consumer {
	uint32 id = 1;
	string name = 2;
	google.protobuf.Timestamp created_at = 3;
	
}

message CreateConsumerRequest {
	string name = 1;
}

message CreateConsumerResponse {
	Consumer consumer = 1;
}

message ReadConsumerRequest {
	uint32 id = 1;
	string name = 2;
}

message ReadConsumerResponse {
	Consumer consumer = 1;
	repeated Token tokens = 2;
}

message DeleteConsumerRequest {
	uint32 id = 1;
}
message DeleteConsumerResponse {
}

message ReadAllConsumersRequest {

}
message ReadAllConsumersResponse {
	repeated ReadConsumerResponse consumers = 1;
}


// TOKEN

message Token {
  uint32 id = 1;
	string value = 2; // unique and indexed
	google.protobuf.Timestamp created_at = 3;
}

message CreateTokenRequest {
	uint32 consumer_id = 1;
}

message CreateTokenResponse {
	Token token = 1;
}

message ReadTokenRequest {
	uint32 id = 1;
	string value = 2;
}

message ReadTokenResponse {
	Token token = 1;
	Consumer consumer = 2;
}

message DeleteTokenRequest {
	uint32 id = 1;
}

message DeleteTokenResponse {
}

message ReadAllTokensRequest {
	// Read only tokens from with consumer
	uint32 consumer_id = 1;
}

message ReadAllTokensResponse {
	repeated Token tokens = 1;
}


// USER

message User {
  uint32 id = 1;
	string email = 2;
	google.protobuf.Timestamp created_at = 3;
}

message CreateUserRequest {
	uint32 email = 1;
}

message CreateUserResponse {
	User User = 1;
}

message ReadUserRequest {
	uint32 id = 1;
	string email = 2;
}

message ReadUserResponse {
	User User = 1;
	repeated Consumer consumer = 2;
}

message DeleteUserRequest {
	uint32 id = 1;
}

message DeleteUserResponse {
}

message ReadAllUsersRequest {
	// Read only Users from with consumer
	uint32 consumer_id = 1;
}

message ReadAllUsersResponse {
	repeated ReadUserResponse users = 1;
}

message AddUserToConsumerRequest {
	// Read only Users from with consumer
	uint32 user_id = 1;
	uint32 consumer_id = 2;
}

message AddUserToConsumerResponse {
}

message RemoveUserFromConsumerRequest {
	// Read only Users from with consumer
	uint32 user_id = 1;
	uint32 consumer_id = 2;
}

message RemoveUserFromConsumerResponse {

}



service UserMgnt {
  // Consumer Methods
	rpc CreateConsumer(CreateConsumerRequest) returns (CreateConsumerResponse); 
	rpc ReadConsumer(ReadConsumerRequest) returns (ReadConsumerResponse);
	rpc DeleteConsumer(DeleteConsumerRequest) returns (DeleteConsumerResponse);
	rpc ReadAllConsumers(ReadAllConsumersRequest) returns (ReadAllConsumersResponse);

	// Max 3 tokens pr consumer.
	rpc CreateToken(CreateTokenRequest) returns (CreateTokenResponse);
	rpc ReadToken(ReadTokenRequest) returns (ReadTokenResponse);
	rpc DeleteToken(DeleteTokenRequest) returns (DeleteTokenResponse);
	rpc ReadAllTokens(ReadAllTokensRequest) returns (ReadAllTokensResponse);

	rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
	rpc ReadUser(ReadUserRequest) returns (ReadUserResponse);
	rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
	rpc ReadAllUsers(ReadAllUsersRequest) returns (ReadAllUsersResponse);

	// Manage link between users and consumers
	rpc AddUserToConsumer(AddUserToConsumerRequest) returns (AddUserToConsumerResponse);
	rpc RemoveUserFromConsumer(RemoveUserFromConsumerRequest) returns (RemoveUserFromConsumerResponse);
}
