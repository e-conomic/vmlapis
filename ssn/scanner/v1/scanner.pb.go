// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ssn/scanner/v1/scanner.proto

package scanner // import "github.com/e-conomic/vmlapis/ssn/scanner/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import v1 "github.com/e-conomic/vmlapis/ssn/mlservice/v1"
import v11 "github.com/e-conomic/vmlapis/ssn/ocrservice/v1"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Feature_Type int32

const (
	Feature_DOCUMENT_FIELD_DETECTION Feature_Type = 0
	Feature_RAW_TEXT_DETECTION       Feature_Type = 1
)

var Feature_Type_name = map[int32]string{
	0: "DOCUMENT_FIELD_DETECTION",
	1: "RAW_TEXT_DETECTION",
}
var Feature_Type_value = map[string]int32{
	"DOCUMENT_FIELD_DETECTION": 0,
	"RAW_TEXT_DETECTION":       1,
}

func (x Feature_Type) String() string {
	return proto.EnumName(Feature_Type_name, int32(x))
}
func (Feature_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_scanner_f49aa91ad8220d6b, []int{0, 0}
}

type Feature struct {
	Type                 Feature_Type `protobuf:"varint,1,opt,name=type,proto3,enum=ssn.scanner.v1.Feature_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Feature) Reset()         { *m = Feature{} }
func (m *Feature) String() string { return proto.CompactTextString(m) }
func (*Feature) ProtoMessage()    {}
func (*Feature) Descriptor() ([]byte, []int) {
	return fileDescriptor_scanner_f49aa91ad8220d6b, []int{0}
}
func (m *Feature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Feature.Unmarshal(m, b)
}
func (m *Feature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Feature.Marshal(b, m, deterministic)
}
func (dst *Feature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Feature.Merge(dst, src)
}
func (m *Feature) XXX_Size() int {
	return xxx_messageInfo_Feature.Size(m)
}
func (m *Feature) XXX_DiscardUnknown() {
	xxx_messageInfo_Feature.DiscardUnknown(m)
}

var xxx_messageInfo_Feature proto.InternalMessageInfo

func (m *Feature) GetType() Feature_Type {
	if m != nil {
		return m.Type
	}
	return Feature_DOCUMENT_FIELD_DETECTION
}

type ScanRequest struct {
	Image                []byte     `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Features             []*Feature `protobuf:"bytes,2,rep,name=features,proto3" json:"features,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ScanRequest) Reset()         { *m = ScanRequest{} }
func (m *ScanRequest) String() string { return proto.CompactTextString(m) }
func (*ScanRequest) ProtoMessage()    {}
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scanner_f49aa91ad8220d6b, []int{1}
}
func (m *ScanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanRequest.Unmarshal(m, b)
}
func (m *ScanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanRequest.Marshal(b, m, deterministic)
}
func (dst *ScanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanRequest.Merge(dst, src)
}
func (m *ScanRequest) XXX_Size() int {
	return xxx_messageInfo_ScanRequest.Size(m)
}
func (m *ScanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScanRequest proto.InternalMessageInfo

func (m *ScanRequest) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *ScanRequest) GetFeatures() []*Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

type ScanResponse struct {
	DocumentFieldDetection *v1.MlResponse `protobuf:"bytes,1,opt,name=documentFieldDetection,proto3" json:"documentFieldDetection,omitempty"`
	RawTextDetection       string         `protobuf:"bytes,2,opt,name=rawTextDetection,proto3" json:"rawTextDetection,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}       `json:"-"`
	XXX_unrecognized       []byte         `json:"-"`
	XXX_sizecache          int32          `json:"-"`
}

func (m *ScanResponse) Reset()         { *m = ScanResponse{} }
func (m *ScanResponse) String() string { return proto.CompactTextString(m) }
func (*ScanResponse) ProtoMessage()    {}
func (*ScanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_scanner_f49aa91ad8220d6b, []int{2}
}
func (m *ScanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanResponse.Unmarshal(m, b)
}
func (m *ScanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanResponse.Marshal(b, m, deterministic)
}
func (dst *ScanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanResponse.Merge(dst, src)
}
func (m *ScanResponse) XXX_Size() int {
	return xxx_messageInfo_ScanResponse.Size(m)
}
func (m *ScanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScanResponse proto.InternalMessageInfo

func (m *ScanResponse) GetDocumentFieldDetection() *v1.MlResponse {
	if m != nil {
		return m.DocumentFieldDetection
	}
	return nil
}

func (m *ScanResponse) GetRawTextDetection() string {
	if m != nil {
		return m.RawTextDetection
	}
	return ""
}

type InternalScanResponse struct {
	ScanResponse         *ScanResponse               `protobuf:"bytes,1,opt,name=scanResponse,proto3" json:"scanResponse,omitempty"`
	OcrResponses         []*v11.OcrScanImageResponse `protobuf:"bytes,2,rep,name=ocrResponses,proto3" json:"ocrResponses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *InternalScanResponse) Reset()         { *m = InternalScanResponse{} }
func (m *InternalScanResponse) String() string { return proto.CompactTextString(m) }
func (*InternalScanResponse) ProtoMessage()    {}
func (*InternalScanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_scanner_f49aa91ad8220d6b, []int{3}
}
func (m *InternalScanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalScanResponse.Unmarshal(m, b)
}
func (m *InternalScanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalScanResponse.Marshal(b, m, deterministic)
}
func (dst *InternalScanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalScanResponse.Merge(dst, src)
}
func (m *InternalScanResponse) XXX_Size() int {
	return xxx_messageInfo_InternalScanResponse.Size(m)
}
func (m *InternalScanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalScanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InternalScanResponse proto.InternalMessageInfo

func (m *InternalScanResponse) GetScanResponse() *ScanResponse {
	if m != nil {
		return m.ScanResponse
	}
	return nil
}

func (m *InternalScanResponse) GetOcrResponses() []*v11.OcrScanImageResponse {
	if m != nil {
		return m.OcrResponses
	}
	return nil
}

func init() {
	proto.RegisterType((*Feature)(nil), "ssn.scanner.v1.Feature")
	proto.RegisterType((*ScanRequest)(nil), "ssn.scanner.v1.ScanRequest")
	proto.RegisterType((*ScanResponse)(nil), "ssn.scanner.v1.ScanResponse")
	proto.RegisterType((*InternalScanResponse)(nil), "ssn.scanner.v1.InternalScanResponse")
	proto.RegisterEnum("ssn.scanner.v1.Feature_Type", Feature_Type_name, Feature_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ScannerClient is the client API for Scanner service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScannerClient interface {
	InternalScan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (*InternalScanResponse, error)
	Scan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (*ScanResponse, error)
}

type scannerClient struct {
	cc *grpc.ClientConn
}

func NewScannerClient(cc *grpc.ClientConn) ScannerClient {
	return &scannerClient{cc}
}

func (c *scannerClient) InternalScan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (*InternalScanResponse, error) {
	out := new(InternalScanResponse)
	err := c.cc.Invoke(ctx, "/ssn.scanner.v1.Scanner/InternalScan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scannerClient) Scan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (*ScanResponse, error) {
	out := new(ScanResponse)
	err := c.cc.Invoke(ctx, "/ssn.scanner.v1.Scanner/Scan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScannerServer is the server API for Scanner service.
type ScannerServer interface {
	InternalScan(context.Context, *ScanRequest) (*InternalScanResponse, error)
	Scan(context.Context, *ScanRequest) (*ScanResponse, error)
}

func RegisterScannerServer(s *grpc.Server, srv ScannerServer) {
	s.RegisterService(&_Scanner_serviceDesc, srv)
}

func _Scanner_InternalScan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScannerServer).InternalScan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ssn.scanner.v1.Scanner/InternalScan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScannerServer).InternalScan(ctx, req.(*ScanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scanner_Scan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScannerServer).Scan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ssn.scanner.v1.Scanner/Scan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScannerServer).Scan(ctx, req.(*ScanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scanner_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ssn.scanner.v1.Scanner",
	HandlerType: (*ScannerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InternalScan",
			Handler:    _Scanner_InternalScan_Handler,
		},
		{
			MethodName: "Scan",
			Handler:    _Scanner_Scan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ssn/scanner/v1/scanner.proto",
}

func init() {
	proto.RegisterFile("ssn/scanner/v1/scanner.proto", fileDescriptor_scanner_f49aa91ad8220d6b)
}

var fileDescriptor_scanner_f49aa91ad8220d6b = []byte{
	// 478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x5d, 0x4a, 0x61, 0xe3, 0xb6, 0x4c, 0x93, 0x99, 0x46, 0x55, 0xfa, 0x50, 0x59, 0x48, 0x54,
	0x93, 0x48, 0x68, 0x2b, 0x5e, 0x80, 0x07, 0x60, 0x4d, 0xa5, 0x0a, 0xb6, 0x4a, 0x69, 0x80, 0x89,
	0x97, 0xca, 0xf3, 0x2e, 0x25, 0x52, 0x62, 0x07, 0xdb, 0x0d, 0xf4, 0x95, 0x2f, 0x40, 0xe2, 0x1b,
	0xf8, 0x05, 0x7e, 0x84, 0x5f, 0xe0, 0x43, 0x50, 0x92, 0x66, 0x4d, 0x60, 0x83, 0x37, 0x1f, 0xfb,
	0x9c, 0x73, 0xcf, 0xbd, 0xc9, 0x85, 0x8e, 0xd6, 0xc2, 0xd1, 0x9c, 0x09, 0x81, 0xca, 0x49, 0xfa,
	0xc5, 0xd1, 0x8e, 0x95, 0x34, 0x92, 0xec, 0x6a, 0x2d, 0xec, 0xe2, 0x2a, 0xe9, 0xb7, 0x69, 0xca,
	0x96, 0x5c, 0x69, 0x54, 0x49, 0xc0, 0x31, 0x15, 0x6c, 0x50, 0xae, 0x69, 0x77, 0x53, 0x4e, 0x14,
	0x96, 0x28, 0x17, 0x60, 0xcd, 0xe8, 0x2c, 0xa4, 0x5c, 0x84, 0xe8, 0xb0, 0x38, 0x70, 0x98, 0x10,
	0xd2, 0x30, 0x13, 0x48, 0xa1, 0xf3, 0x57, 0xba, 0x82, 0xed, 0x31, 0x32, 0xb3, 0x54, 0x48, 0x1e,
	0x42, 0xdd, 0xac, 0x62, 0x6c, 0x59, 0x5d, 0xab, 0xb7, 0x3b, 0xe8, 0xd8, 0xd5, 0x34, 0xf6, 0x9a,
	0x66, 0xfb, 0xab, 0x18, 0xbd, 0x8c, 0x49, 0x9f, 0x42, 0x3d, 0x45, 0xa4, 0x03, 0xad, 0xd1, 0xf4,
	0xe8, 0xf5, 0xb1, 0x7b, 0xe2, 0xcf, 0xc7, 0x13, 0xf7, 0xd5, 0x68, 0x3e, 0x72, 0x7d, 0xf7, 0xc8,
	0x9f, 0x4c, 0x4f, 0xf6, 0xb6, 0xc8, 0x01, 0x10, 0xef, 0xf9, 0xdb, 0xb9, 0xef, 0x9e, 0xfa, 0xa5,
	0x7b, 0x8b, 0x9e, 0x42, 0x63, 0xc6, 0x99, 0xf0, 0xf0, 0xe3, 0x12, 0xb5, 0x21, 0xfb, 0x70, 0x3d,
	0x88, 0xd8, 0x22, 0xaf, 0xdf, 0xf4, 0x72, 0x40, 0x86, 0xb0, 0xf3, 0x3e, 0x2f, 0xac, 0x5b, 0xb5,
	0xee, 0xb5, 0x5e, 0x63, 0x70, 0xe7, 0x8a, 0x60, 0xde, 0x05, 0x91, 0x7e, 0xb5, 0xa0, 0x99, 0x5b,
	0xeb, 0x58, 0x0a, 0x8d, 0xc4, 0x87, 0x83, 0x73, 0xc9, 0x97, 0x11, 0x0a, 0x33, 0x0e, 0x30, 0x3c,
	0x1f, 0xa1, 0x41, 0x9e, 0x8e, 0x21, 0x2b, 0xd6, 0x58, 0x37, 0xbb, 0x99, 0x5c, 0xd2, 0xb7, 0x8f,
	0xc3, 0x42, 0xed, 0x5d, 0xa1, 0x25, 0x87, 0xb0, 0xa7, 0xd8, 0x27, 0x1f, 0x3f, 0x9b, 0x8d, 0x5f,
	0xad, 0x6b, 0xf5, 0x6e, 0x7a, 0x7f, 0xdd, 0xd3, 0xef, 0x16, 0xec, 0x4f, 0x84, 0x41, 0x25, 0x58,
	0x58, 0x89, 0xf6, 0x0c, 0x9a, 0xba, 0x84, 0x2b, 0x81, 0x4a, 0x4d, 0x96, 0x35, 0x5e, 0x45, 0x41,
	0x5e, 0x42, 0x53, 0x72, 0x55, 0xc0, 0x62, 0x4c, 0xf7, 0x33, 0x87, 0xd2, 0xff, 0x92, 0xf4, 0xed,
	0x29, 0x57, 0xa9, 0xcf, 0x24, 0x9d, 0xec, 0xc6, 0xac, 0x2c, 0x1e, 0xfc, 0xb0, 0x60, 0x7b, 0x96,
	0x97, 0x25, 0x33, 0x68, 0x96, 0x23, 0x93, 0xbb, 0x97, 0x87, 0xca, 0x3e, 0x5f, 0xfb, 0xde, 0x9f,
	0x8f, 0x97, 0x75, 0x4b, 0xb7, 0xc8, 0x1b, 0xa8, 0xff, 0xdf, 0xec, 0x9f, 0xed, 0xd3, 0xdb, 0x5f,
	0x7e, 0xfe, 0xfa, 0x56, 0xbb, 0x45, 0x77, 0x8a, 0x15, 0x7a, 0x6c, 0x1d, 0xbe, 0x78, 0xf4, 0x6e,
	0xb8, 0x08, 0xcc, 0x87, 0xe5, 0x99, 0xcd, 0x65, 0xe4, 0xe0, 0x03, 0x2e, 0x85, 0x8c, 0x02, 0xee,
	0x24, 0x51, 0xc8, 0xe2, 0x40, 0x3b, 0xd5, 0xcd, 0x7b, 0xb2, 0x3e, 0x9e, 0xdd, 0xc8, 0xd6, 0x60,
	0xf8, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x03, 0xea, 0xb9, 0xd4, 0x9a, 0x03, 0x00, 0x00,
}
